parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"dKqR":[function(require,module,exports) {
"use strict";function t(){}Object.defineProperty(exports,"__esModule",{value:!0}),exports.AmbientLight=ud,exports.AmbientLightProbe=Id,exports.AnimationClip=hp,exports.AnimationLoader=xp,exports.AnimationMixer=ff,exports.AnimationObjectGroup=pf,exports.ArcCurve=Ap,exports.ArrayCamera=gl,exports.ArrowHelper=mm,exports.Audio=Wd,exports.AudioAnalyser=Qd,exports.AudioListener=kd,exports.AudioLoader=Pd,exports.AxesHelper=vm,exports.AxisHelper=Vm,exports.BinaryTextureLoader=Xm,exports.Bone=Ql,exports.BooleanKeyframeTrack=np,exports.BoundingBoxHelper=jm,exports.Box2=Mf,exports.Box3=sn,exports.Box3Helper=hm,exports.BoxBufferGeometry=Di,exports.CubeGeometry=exports.BoxGeometry=Oi,exports.BoxHelper=lm,exports.BufferAttribute=Hn,exports.BufferGeometry=oi,exports.BufferGeometryLoader=gd,exports.Camera=Ui,exports.CameraHelper=om,exports.CanvasRenderer=Zm,exports.CanvasTexture=yh,exports.CatmullRomCurve3=Dp,exports.CircleBufferGeometry=Fu,exports.CircleGeometry=zu,exports.Clock=Gd,exports.ClosedSplineCurve3=Gm,exports.Color=Dn,exports.ColorKeyframeTrack=ip,exports.CompressedTexture=gh,exports.CompressedTextureLoader=bp,exports.ConeBufferGeometry=Bu,exports.ConeGeometry=Iu,exports.CubeCamera=ki,exports.CubeTexture=Ns,exports.CubeTextureLoader=Mp,exports.CubicBezierCurve=kp,exports.CubicBezierCurve3=Wp,exports.CubicInterpolant=$u,exports.Curve=Tp,exports.CurvePath=Kp,exports.CylinderBufferGeometry=Nu,exports.CylinderGeometry=Du,exports.Cylindrical=wf,exports.DataTexture=qi,exports.DataTexture2DArray=Is,exports.DataTexture3D=Bs,exports.DataTextureLoader=wp,exports.DepthTexture=xh,exports.DirectionalLight=hd,exports.DirectionalLightHelper=nm,exports.DirectionalLightShadow=ld,exports.DiscreteInterpolant=ep,exports.DodecahedronBufferGeometry=Oh,exports.DodecahedronGeometry=Ph,exports.DynamicBufferAttribute=Rm,exports.EdgesGeometry=Ou,exports.EdgesHelper=km,exports.EllipseCurve=Ep,exports.Euler=Pr,exports.EventDispatcher=t,exports.ExtrudeBufferGeometry=yu,exports.ExtrudeGeometry=gu,exports.Face3=zn,exports.Face4=gm,exports.FaceNormalsHelper=$f,exports.FileLoader=yp,exports.Float32Attribute=zm,exports.Float32BufferAttribute=Zn,exports.Float64Attribute=Fm,exports.Float64BufferAttribute=Jn,exports.Fog=El,exports.FogExp2=Tl,exports.Font=Ed,exports.FontLoader=Rd,exports.Frustum=$i,exports.Geometry=Pi,exports.GridHelper=Xf,exports.Group=vl,exports.HemisphereLight=rd,exports.HemisphereLightHelper=Wf,exports.HemisphereLightProbe=Nd,exports.IcosahedronBufferGeometry=Ch,exports.IcosahedronGeometry=Rh,exports.ImageBitmapLoader=Sd,exports.ImageLoader=_p,exports.ImmediateRenderObject=Af,exports.InstancedBufferAttribute=vd,exports.InstancedBufferGeometry=md,exports.InstancedInterleavedBuffer=vf,exports.Int16Attribute=Dm,exports.Int16BufferAttribute=Wn,exports.Int32Attribute=Im,exports.Int32BufferAttribute=Xn,exports.Int8Attribute=Cm,exports.Int8BufferAttribute=Vn,exports.InterleavedBuffer=Al,exports.InterleavedBufferAttribute=Ll,exports.Interpolant=Ku,exports.JSONLoader=Jm,exports.KeyframeTrack=rp,exports.LOD=ql,exports.LatheBufferGeometry=Lu,exports.LatheGeometry=Au,exports.Layers=Or,exports.LensFlare=Km,exports.Light=ed,exports.LightProbe=Dd,exports.LightProbeHelper=qf,exports.LightShadow=nd,exports.Line=ih,exports.Line3=Ef,exports.LineBasicMaterial=Kl,exports.LineCurve=qp,exports.LineCurve3=Xp,exports.LineDashedMaterial=Zu,exports.LineLoop=ch,exports.LineSegments=sh,exports.LinearInterpolant=tp,exports.Loader=vp,exports.LoadingManager=fp,exports.Material=Gn,exports.MaterialLoader=dd,exports.Matrix3=fr,exports.Matrix4=Lr,exports.Mesh=Si,exports.MeshBasicMaterial=Un,exports.MeshDepthMaterial=cl,exports.MeshDistanceMaterial=ll,exports.MeshFaceMaterial=bm,exports.MeshLambertMaterial=Xu,exports.MeshMatcapMaterial=Yu,exports.MeshNormalMaterial=qu,exports.MeshPhongMaterial=ku,exports.MeshPhysicalMaterial=ju,exports.MeshStandardMaterial=Vu,exports.MeshToonMaterial=Wu,exports.MultiMaterial=wm,exports.NumberKeyframeTrack=ap,exports.Object3D=qr,exports.ObjectLoader=xd,exports.OctahedronBufferGeometry=Lh,exports.OctahedronGeometry=Ah,exports.OrthographicCamera=cd,exports.ParametricBufferGeometry=_h,exports.ParametricGeometry=wh,exports.Particle=Mm,exports.ParticleBasicMaterial=Em,exports.ParticleSystem=Sm,exports.ParticleSystemMaterial=Am,exports.Path=$p,exports.PerspectiveCamera=Hi,exports.Plane=Ji,exports.PlaneBufferGeometry=_s,exports.PlaneGeometry=ws,exports.PlaneHelper=um,exports.PointCloud=_m,exports.PointCloudMaterial=Tm,exports.PointLight=sd,exports.PointLightHelper=Uf,exports.Points=fh,exports.PointsMaterial=lh,exports.PolarGridHelper=Yf,exports.PolyhedronBufferGeometry=Sh,exports.PolyhedronGeometry=Mh,exports.PositionalAudio=Jd,exports.PositionalAudioHelper=Zf,exports.PropertyBinding=uf,exports.PropertyMixer=Kd,exports.QuadraticBezierCurve=Yp,exports.QuadraticBezierCurve3=Zp,exports.Quaternion=cr,exports.QuaternionKeyframeTrack=sp,exports.QuaternionLinearInterpolant=op,exports.RawShaderMaterial=Hu,exports.Ray=yn,exports.Raycaster=gf,exports.RectAreaLight=pd,exports.RectAreaLightHelper=Hf,exports.RingBufferGeometry=Eu,exports.RingGeometry=Tu,exports.Scene=Xr,exports.ShaderMaterial=Gi,exports.ShadowMaterial=Uu,exports.Shape=td,exports.ShapeBufferGeometry=Cu,exports.ShapeGeometry=Ru,exports.ShapePath=Td,exports.Skeleton=Jl,exports.SkeletonHelper=Gf,exports.SkinnedMesh=Xl,exports.Sphere=hn,exports.SphereBufferGeometry=Su,exports.SphereGeometry=Mu,exports.Spherical=bf,exports.SphericalHarmonics3=Od,exports.Spline=Hm,exports.SplineCurve=Jp,exports.SplineCurve3=Um,exports.SpotLight=ad,exports.SpotLightHelper=Nf,exports.SpotLightShadow=id,exports.Sprite=Vl,exports.SpriteMaterial=Rl,exports.StereoCamera=Fd,exports.StringKeyframeTrack=cp,exports.TetrahedronBufferGeometry=Eh,exports.TetrahedronGeometry=Th,exports.TextBufferGeometry=_u,exports.TextGeometry=wu,exports.Texture=gr,exports.TextureLoader=Sp,exports.TorusBufferGeometry=Fh,exports.TorusGeometry=zh,exports.TorusKnotBufferGeometry=Bh,exports.TorusKnotGeometry=Ih,exports.Triangle=Rn,exports.TubeBufferGeometry=Nh,exports.TubeGeometry=Dh,exports.Uint16Attribute=Nm,exports.Uint16BufferAttribute=qn,exports.Uint32Attribute=Bm,exports.Uint32BufferAttribute=Yn,exports.Uint8Attribute=Pm,exports.Uint8BufferAttribute=jn,exports.Uint8ClampedAttribute=Om,exports.Uint8ClampedBufferAttribute=kn,exports.Uniform=mf,exports.Vector2=sr,exports.Vector3=ur,exports.Vector4=yr,exports.VectorKeyframeTrack=lp,exports.Vertex=Lm,exports.VertexNormalsHelper=Of,exports.VideoTexture=vh,exports.WebGLMultisampleRenderTarget=br,exports.WebGLRenderTarget=xr,exports.WebGLRenderTargetCube=Wi,exports.WebGLRenderer=Sl,exports.WebGLUtils=ml,exports.WireframeGeometry=bh,exports.WireframeHelper=Wm,exports.XHRLoader=qm,exports.NotEqualStencilFunc=exports.NotEqualDepth=exports.NormalBlending=exports.NoToneMapping=exports.NoColors=exports.NoBlending=exports.NeverStencilFunc=exports.NeverDepth=exports.NearestMipmapNearestFilter=exports.NearestMipmapLinearFilter=exports.NearestMipMapNearestFilter=exports.NearestMipMapLinearFilter=exports.NearestFilter=exports.MultiplyOperation=exports.MultiplyBlending=exports.MixOperation=exports.MirroredRepeatWrapping=exports.MinEquation=exports.MaxEquation=exports.Math=exports.MOUSE=exports.LuminanceFormat=exports.LuminanceAlphaFormat=exports.LoopRepeat=exports.LoopPingPong=exports.LoopOnce=exports.LogLuvEncoding=exports.LoaderUtils=exports.LinearToneMapping=exports.LinearMipmapNearestFilter=exports.LinearMipmapLinearFilter=exports.LinearMipMapNearestFilter=exports.LinearMipMapLinearFilter=exports.LinearFilter=exports.LinearEncoding=exports.LineStrip=exports.LinePieces=exports.LessStencilFunc=exports.LessEqualStencilFunc=exports.LessEqualDepth=exports.LessDepth=exports.KeepStencilOp=exports.InvertStencilOp=exports.InterpolateSmooth=exports.InterpolateLinear=exports.InterpolateDiscrete=exports.IntType=exports.IncrementWrapStencilOp=exports.IncrementStencilOp=exports.ImageUtils=exports.HalfFloatType=exports.GreaterStencilFunc=exports.GreaterEqualStencilFunc=exports.GreaterEqualDepth=exports.GreaterDepth=exports.GeometryUtils=exports.GammaEncoding=exports.FrontSide=exports.FrontFaceDirectionCW=exports.FrontFaceDirectionCCW=exports.FloatType=exports.FlatShading=exports.FaceColors=exports.EquirectangularRefractionMapping=exports.EquirectangularReflectionMapping=exports.EqualStencilFunc=exports.EqualDepth=exports.DstColorFactor=exports.DstAlphaFactor=exports.DoubleSide=exports.DepthStencilFormat=exports.DepthFormat=exports.DefaultLoadingManager=exports.DecrementWrapStencilOp=exports.DecrementStencilOp=exports.CustomBlending=exports.CullFaceNone=exports.CullFaceFrontBack=exports.CullFaceFront=exports.CullFaceBack=exports.CubeUVRefractionMapping=exports.CubeUVReflectionMapping=exports.CubeRefractionMapping=exports.CubeReflectionMapping=exports.ClampToEdgeWrapping=exports.CineonToneMapping=exports.Cache=exports.ByteType=exports.BasicShadowMap=exports.BasicDepthPacking=exports.BackSide=exports.AudioContext=exports.AnimationUtils=exports.AlwaysStencilFunc=exports.AlwaysDepth=exports.AlphaFormat=exports.AdditiveBlending=exports.AddOperation=exports.AddEquation=exports.ACESFilmicToneMapping=void 0,exports.sRGBEncoding=exports.ZeroStencilOp=exports.ZeroSlopeEnding=exports.ZeroFactor=exports.ZeroCurvatureEnding=exports.WrapAroundEnding=exports.VertexColors=exports.VSMShadowMap=exports.UnsignedShortType=exports.UnsignedShort565Type=exports.UnsignedShort5551Type=exports.UnsignedShort4444Type=exports.UnsignedIntType=exports.UnsignedInt248Type=exports.UnsignedByteType=exports.UniformsUtils=exports.UniformsLib=exports.Uncharted2ToneMapping=exports.UVMapping=exports.TrianglesDrawMode=exports.TriangleStripDrawMode=exports.TriangleFanDrawMode=exports.TangentSpaceNormalMap=exports.TOUCH=exports.SubtractiveBlending=exports.SubtractEquation=exports.SrcColorFactor=exports.SrcAlphaSaturateFactor=exports.SrcAlphaFactor=exports.SphericalReflectionMapping=exports.SmoothShading=exports.ShortType=exports.ShapeUtils=exports.ShaderLib=exports.ShaderChunk=exports.SceneUtils=exports.ReverseSubtractEquation=exports.ReplaceStencilOp=exports.RepeatWrapping=exports.ReinhardToneMapping=exports.RedFormat=exports.RGB_S3TC_DXT1_Format=exports.RGB_PVRTC_4BPPV1_Format=exports.RGB_PVRTC_2BPPV1_Format=exports.RGB_ETC1_Format=exports.RGBM7Encoding=exports.RGBM16Encoding=exports.RGBFormat=exports.RGBEFormat=exports.RGBEEncoding=exports.RGBDEncoding=exports.RGBA_S3TC_DXT5_Format=exports.RGBA_S3TC_DXT3_Format=exports.RGBA_S3TC_DXT1_Format=exports.RGBA_PVRTC_4BPPV1_Format=exports.RGBA_PVRTC_2BPPV1_Format=exports.RGBA_ASTC_8x8_Format=exports.RGBA_ASTC_8x6_Format=exports.RGBA_ASTC_8x5_Format=exports.RGBA_ASTC_6x6_Format=exports.RGBA_ASTC_6x5_Format=exports.RGBA_ASTC_5x5_Format=exports.RGBA_ASTC_5x4_Format=exports.RGBA_ASTC_4x4_Format=exports.RGBA_ASTC_12x12_Format=exports.RGBA_ASTC_12x10_Format=exports.RGBA_ASTC_10x8_Format=exports.RGBA_ASTC_10x6_Format=exports.RGBA_ASTC_10x5_Format=exports.RGBA_ASTC_10x10_Format=exports.RGBAFormat=exports.RGBADepthPacking=exports.REVISION=exports.PCFSoftShadowMap=exports.PCFShadowMap=exports.OneMinusSrcColorFactor=exports.OneMinusSrcAlphaFactor=exports.OneMinusDstColorFactor=exports.OneMinusDstAlphaFactor=exports.OneFactor=exports.ObjectSpaceNormalMap=void 0,void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t}),void 0===Math.sign&&(Math.sign=function(t){return t<0?-1:t>0?1:+t}),"name"in Function.prototype==!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(t){if(null==t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),r=1;r<arguments.length;r++){var n=arguments[r];if(null!=n)for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}),Object.assign(t.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[t]&&(r[t]=[]),-1===r[t].indexOf(e)&&r[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[t]&&-1!==r[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var r=this._listeners[t];if(void 0!==r){var n=r.indexOf(e);-1!==n&&r.splice(n,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var r=e.slice(0),n=0,i=r.length;n<i;n++)r[n].call(this,t)}}}});var e="108";exports.REVISION=e;var r={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2};exports.MOUSE=r;var n={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3};exports.TOUCH=n;var i=0;exports.CullFaceNone=i;var a=1;exports.CullFaceBack=a;var o=2;exports.CullFaceFront=o;var s=3;exports.CullFaceFrontBack=s;var c=0;exports.FrontFaceDirectionCW=c;var l=1;exports.FrontFaceDirectionCCW=l;var h=0;exports.BasicShadowMap=h;var u=1;exports.PCFShadowMap=u;var p=2;exports.PCFSoftShadowMap=p;var d=3;exports.VSMShadowMap=d;var f=0;exports.FrontSide=f;var m=1;exports.BackSide=m;var v=2;exports.DoubleSide=v;var g=1;exports.FlatShading=g;var y=2;exports.SmoothShading=y;var x=0;exports.NoColors=x;var b=1;exports.FaceColors=b;var w=2;exports.VertexColors=w;var _=0;exports.NoBlending=_;var M=1;exports.NormalBlending=M;var S=2;exports.AdditiveBlending=S;var T=3;exports.SubtractiveBlending=T;var E=4;exports.MultiplyBlending=E;var A=5;exports.CustomBlending=A;var L=100;exports.AddEquation=L;var R=101;exports.SubtractEquation=R;var C=102;exports.ReverseSubtractEquation=C;var P=103;exports.MinEquation=P;var O=104;exports.MaxEquation=O;var D=200;exports.ZeroFactor=D;var N=201;exports.OneFactor=N;var I=202;exports.SrcColorFactor=I;var B=203;exports.OneMinusSrcColorFactor=B;var z=204;exports.SrcAlphaFactor=z;var F=205;exports.OneMinusSrcAlphaFactor=F;var G=206;exports.DstAlphaFactor=G;var U=207;exports.OneMinusDstAlphaFactor=U;var H=208;exports.DstColorFactor=H;var V=209;exports.OneMinusDstColorFactor=V;var j=210;exports.SrcAlphaSaturateFactor=j;var k=0;exports.NeverDepth=k;var W=1;exports.AlwaysDepth=W;var q=2;exports.LessDepth=q;var X=3;exports.LessEqualDepth=X;var Y=4;exports.EqualDepth=Y;var Z=5;exports.GreaterEqualDepth=Z;var J=6;exports.GreaterDepth=J;var Q=7;exports.NotEqualDepth=Q;var K=0;exports.MultiplyOperation=K;var $=1;exports.MixOperation=$;var tt=2;exports.AddOperation=tt;var et=0;exports.NoToneMapping=et;var rt=1;exports.LinearToneMapping=rt;var nt=2;exports.ReinhardToneMapping=nt;var it=3;exports.Uncharted2ToneMapping=it;var at=4;exports.CineonToneMapping=at;var ot=5;exports.ACESFilmicToneMapping=ot;var st=300;exports.UVMapping=st;var ct=301;exports.CubeReflectionMapping=ct;var lt=302;exports.CubeRefractionMapping=lt;var ht=303;exports.EquirectangularReflectionMapping=ht;var ut=304;exports.EquirectangularRefractionMapping=ut;var pt=305;exports.SphericalReflectionMapping=pt;var dt=306;exports.CubeUVReflectionMapping=dt;var ft=307;exports.CubeUVRefractionMapping=ft;var mt=1e3;exports.RepeatWrapping=mt;var vt=1001;exports.ClampToEdgeWrapping=vt;var gt=1002;exports.MirroredRepeatWrapping=gt;var yt=1003;exports.NearestFilter=yt;var xt=1004;exports.NearestMipmapNearestFilter=xt;var bt=1004;exports.NearestMipMapNearestFilter=bt;var wt=1005;exports.NearestMipmapLinearFilter=wt;var _t=1005;exports.NearestMipMapLinearFilter=_t;var Mt=1006;exports.LinearFilter=Mt;var St=1007;exports.LinearMipmapNearestFilter=St;var Tt=1007;exports.LinearMipMapNearestFilter=Tt;var Et=1008;exports.LinearMipmapLinearFilter=Et;var At=1008;exports.LinearMipMapLinearFilter=At;var Lt=1009;exports.UnsignedByteType=Lt;var Rt=1010;exports.ByteType=Rt;var Ct=1011;exports.ShortType=Ct;var Pt=1012;exports.UnsignedShortType=Pt;var Ot=1013;exports.IntType=Ot;var Dt=1014;exports.UnsignedIntType=Dt;var Nt=1015;exports.FloatType=Nt;var It=1016;exports.HalfFloatType=It;var Bt=1017;exports.UnsignedShort4444Type=Bt;var zt=1018;exports.UnsignedShort5551Type=zt;var Ft=1019;exports.UnsignedShort565Type=Ft;var Gt=1020;exports.UnsignedInt248Type=Gt;var Ut=1021;exports.AlphaFormat=Ut;var Ht=1022;exports.RGBFormat=Ht;var Vt=1023;exports.RGBAFormat=Vt;var jt=1024;exports.LuminanceFormat=jt;var kt=1025;exports.LuminanceAlphaFormat=kt;var Wt=Vt;exports.RGBEFormat=Wt;var qt=1026;exports.DepthFormat=qt;var Xt=1027;exports.DepthStencilFormat=Xt;var Yt=1028;exports.RedFormat=Yt;var Zt=33776;exports.RGB_S3TC_DXT1_Format=Zt;var Jt=33777;exports.RGBA_S3TC_DXT1_Format=Jt;var Qt=33778;exports.RGBA_S3TC_DXT3_Format=Qt;var Kt=33779;exports.RGBA_S3TC_DXT5_Format=Kt;var $t=35840;exports.RGB_PVRTC_4BPPV1_Format=$t;var te=35841;exports.RGB_PVRTC_2BPPV1_Format=te;var ee=35842;exports.RGBA_PVRTC_4BPPV1_Format=ee;var re=35843;exports.RGBA_PVRTC_2BPPV1_Format=re;var ne=36196;exports.RGB_ETC1_Format=ne;var ie=37808;exports.RGBA_ASTC_4x4_Format=ie;var ae=37809;exports.RGBA_ASTC_5x4_Format=ae;var oe=37810;exports.RGBA_ASTC_5x5_Format=oe;var se=37811;exports.RGBA_ASTC_6x5_Format=se;var ce=37812;exports.RGBA_ASTC_6x6_Format=ce;var le=37813;exports.RGBA_ASTC_8x5_Format=le;var he=37814;exports.RGBA_ASTC_8x6_Format=he;var ue=37815;exports.RGBA_ASTC_8x8_Format=ue;var pe=37816;exports.RGBA_ASTC_10x5_Format=pe;var de=37817;exports.RGBA_ASTC_10x6_Format=de;var fe=37818;exports.RGBA_ASTC_10x8_Format=fe;var me=37819;exports.RGBA_ASTC_10x10_Format=me;var ve=37820;exports.RGBA_ASTC_12x10_Format=ve;var ge=37821;exports.RGBA_ASTC_12x12_Format=ge;var ye=2200;exports.LoopOnce=ye;var xe=2201;exports.LoopRepeat=xe;var be=2202;exports.LoopPingPong=be;var we=2300;exports.InterpolateDiscrete=we;var _e=2301;exports.InterpolateLinear=_e;var Me=2302;exports.InterpolateSmooth=Me;var Se=2400;exports.ZeroCurvatureEnding=Se;var Te=2401;exports.ZeroSlopeEnding=Te;var Ee=2402;exports.WrapAroundEnding=Ee;var Ae=0;exports.TrianglesDrawMode=Ae;var Le=1;exports.TriangleStripDrawMode=Le;var Re=2;exports.TriangleFanDrawMode=Re;var Ce=3e3;exports.LinearEncoding=Ce;var Pe=3001;exports.sRGBEncoding=Pe;var Oe=3007;exports.GammaEncoding=Oe;var De=3002;exports.RGBEEncoding=De;var Ne=3003;exports.LogLuvEncoding=Ne;var Ie=3004;exports.RGBM7Encoding=Ie;var Be=3005;exports.RGBM16Encoding=Be;var ze=3006;exports.RGBDEncoding=ze;var Fe=3200;exports.BasicDepthPacking=Fe;var Ge=3201;exports.RGBADepthPacking=Ge;var Ue=0;exports.TangentSpaceNormalMap=Ue;var He=1;exports.ObjectSpaceNormalMap=He;var Ve=0;exports.ZeroStencilOp=Ve;var je=7680;exports.KeepStencilOp=je;var ke=7681;exports.ReplaceStencilOp=ke;var We=7682;exports.IncrementStencilOp=We;var qe=7683;exports.DecrementStencilOp=qe;var Xe=34055;exports.IncrementWrapStencilOp=Xe;var Ye=34056;exports.DecrementWrapStencilOp=Ye;var Ze=5386;exports.InvertStencilOp=Ze;var Je=512;exports.NeverStencilFunc=Je;var Qe=513;exports.LessStencilFunc=Qe;var Ke=514;exports.EqualStencilFunc=Ke;var $e=515;exports.LessEqualStencilFunc=$e;var tr=516;exports.GreaterStencilFunc=tr;var er=517;exports.NotEqualStencilFunc=er;var rr=518;exports.GreaterEqualStencilFunc=rr;var nr=519;exports.AlwaysStencilFunc=nr;for(var ir=[],ar=0;ar<256;ar++)ir[ar]=(ar<16?"0":"")+ar.toString(16);var or={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(ir[255&t]+ir[t>>8&255]+ir[t>>16&255]+ir[t>>24&255]+"-"+ir[255&e]+ir[e>>8&255]+"-"+ir[e>>16&15|64]+ir[e>>24&255]+"-"+ir[63&r|128]+ir[r>>8&255]+"-"+ir[r>>16&255]+ir[r>>24&255]+ir[255&n]+ir[n>>8&255]+ir[n>>16&255]+ir[n>>24&255]).toUpperCase()},clamp:function(t,e,r){return Math.max(e,Math.min(r,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,r,n,i){return n+(t-e)*(i-n)/(r-e)},lerp:function(t,e,r){return(1-r)*t+r*e},smoothstep:function(t,e,r){return t<=e?0:t>=r?1:(t=(t-e)/(r-e))*t*(3-2*t)},smootherstep:function(t,e,r){return t<=e?0:t>=r?1:(t=(t-e)/(r-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*or.DEG2RAD},radToDeg:function(t){return t*or.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}};function sr(t,e){this.x=t||0,this.y=e||0}function cr(t,e,r,n){this._x=t||0,this._y=e||0,this._z=r||0,this._w=void 0!==n?n:1}exports.Math=or,Object.defineProperties(sr.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(sr.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var e=this.x,r=this.y,n=t.elements;return this.x=n[0]*e+n[3]*r+n[6],this.y=n[1]*e+n[4]*r+n[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this},clampLength:function(t,e){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(t,Math.min(e,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},cross:function(t){return this.x*t.y-this.y*t.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y;return e*e+r*r},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,r){return void 0!==r&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var r=Math.cos(e),n=Math.sin(e),i=this.x-t.x,a=this.y-t.y;return this.x=i*r-a*n+t.x,this.y=i*n+a*r+t.y,this}}),Object.assign(cr,{slerp:function(t,e,r,n){return r.copy(t).slerp(e,n)},slerpFlat:function(t,e,r,n,i,a,o){var s=r[n+0],c=r[n+1],l=r[n+2],h=r[n+3],u=i[a+0],p=i[a+1],d=i[a+2],f=i[a+3];if(h!==f||s!==u||c!==p||l!==d){var m=1-o,v=s*u+c*p+l*d+h*f,g=v>=0?1:-1,y=1-v*v;if(y>Number.EPSILON){var x=Math.sqrt(y),b=Math.atan2(x,v*g);m=Math.sin(m*b)/x,o=Math.sin(o*b)/x}var w=o*g;if(s=s*m+u*w,c=c*m+p*w,l=l*m+d*w,h=h*m+f*w,m===1-o){var _=1/Math.sqrt(s*s+c*c+l*l+h*h);s*=_,c*=_,l*=_,h*=_}}t[e]=s,t[e+1]=c,t[e+2]=l,t[e+3]=h}}),Object.defineProperties(cr.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this._onChangeCallback()}}}),Object.assign(cr.prototype,{isQuaternion:!0,set:function(t,e,r,n){return this._x=t,this._y=e,this._z=r,this._w=n,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var r=t._x,n=t._y,i=t._z,a=t.order,o=Math.cos,s=Math.sin,c=o(r/2),l=o(n/2),h=o(i/2),u=s(r/2),p=s(n/2),d=s(i/2);return"XYZ"===a?(this._x=u*l*h+c*p*d,this._y=c*p*h-u*l*d,this._z=c*l*d+u*p*h,this._w=c*l*h-u*p*d):"YXZ"===a?(this._x=u*l*h+c*p*d,this._y=c*p*h-u*l*d,this._z=c*l*d-u*p*h,this._w=c*l*h+u*p*d):"ZXY"===a?(this._x=u*l*h-c*p*d,this._y=c*p*h+u*l*d,this._z=c*l*d+u*p*h,this._w=c*l*h-u*p*d):"ZYX"===a?(this._x=u*l*h-c*p*d,this._y=c*p*h+u*l*d,this._z=c*l*d-u*p*h,this._w=c*l*h+u*p*d):"YZX"===a?(this._x=u*l*h+c*p*d,this._y=c*p*h+u*l*d,this._z=c*l*d-u*p*h,this._w=c*l*h-u*p*d):"XZY"===a&&(this._x=u*l*h-c*p*d,this._y=c*p*h-u*l*d,this._z=c*l*d+u*p*h,this._w=c*l*h+u*p*d),!1!==e&&this._onChangeCallback(),this},setFromAxisAngle:function(t,e){var r=e/2,n=Math.sin(r);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(r),this._onChangeCallback(),this},setFromRotationMatrix:function(t){var e,r=t.elements,n=r[0],i=r[4],a=r[8],o=r[1],s=r[5],c=r[9],l=r[2],h=r[6],u=r[10],p=n+s+u;return p>0?(e=.5/Math.sqrt(p+1),this._w=.25/e,this._x=(h-c)*e,this._y=(a-l)*e,this._z=(o-i)*e):n>s&&n>u?(e=2*Math.sqrt(1+n-s-u),this._w=(h-c)/e,this._x=.25*e,this._y=(i+o)/e,this._z=(a+l)/e):s>u?(e=2*Math.sqrt(1+s-n-u),this._w=(a-l)/e,this._x=(i+o)/e,this._y=.25*e,this._z=(c+h)/e):(e=2*Math.sqrt(1+u-n-s),this._w=(o-i)/e,this._x=(a+l)/e,this._y=(c+h)/e,this._z=.25*e),this._onChangeCallback(),this},setFromUnitVectors:function(t,e){var r=t.dot(e)+1;return r<1e-6?(r=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=r):(this._x=0,this._y=-t.z,this._z=t.y,this._w=r)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=r),this.normalize()},angleTo:function(t){return 2*Math.acos(Math.abs(or.clamp(this.dot(t),-1,1)))},rotateTowards:function(t,e){var r=this.angleTo(t);if(0===r)return this;var n=Math.min(1,e/r);return this.slerp(t,n),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var r=t._x,n=t._y,i=t._z,a=t._w,o=e._x,s=e._y,c=e._z,l=e._w;return this._x=r*l+a*o+n*c-i*s,this._y=n*l+a*s+i*o-r*c,this._z=i*l+a*c+r*s-n*o,this._w=a*l-r*o-n*s-i*c,this._onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var r=this._x,n=this._y,i=this._z,a=this._w,o=a*t._w+r*t._x+n*t._y+i*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=r,this._y=n,this._z=i,this;var s=1-o*o;if(s<=Number.EPSILON){var c=1-e;return this._w=c*a+e*this._w,this._x=c*r+e*this._x,this._y=c*n+e*this._y,this._z=c*i+e*this._z,this.normalize(),this._onChangeCallback(),this}var l=Math.sqrt(s),h=Math.atan2(l,o),u=Math.sin((1-e)*h)/l,p=Math.sin(e*h)/l;return this._w=a*u+this._w*p,this._x=r*u+this._x*p,this._y=n*u+this._y*p,this._z=i*u+this._z*p,this._onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},_onChange:function(t){return this._onChangeCallback=t,this},_onChangeCallback:function(){}});var lr=new ur,hr=new cr;function ur(t,e,r){this.x=t||0,this.y=e||0,this.z=r||0}Object.assign(ur.prototype,{isVector3:!0,set:function(t,e,r){return this.x=t,this.y=e,this.z=r,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(hr.setFromEuler(t))},applyAxisAngle:function(t,e){return this.applyQuaternion(hr.setFromAxisAngle(t,e))},applyMatrix3:function(t){var e=this.x,r=this.y,n=this.z,i=t.elements;return this.x=i[0]*e+i[3]*r+i[6]*n,this.y=i[1]*e+i[4]*r+i[7]*n,this.z=i[2]*e+i[5]*r+i[8]*n,this},applyMatrix4:function(t){var e=this.x,r=this.y,n=this.z,i=t.elements,a=1/(i[3]*e+i[7]*r+i[11]*n+i[15]);return this.x=(i[0]*e+i[4]*r+i[8]*n+i[12])*a,this.y=(i[1]*e+i[5]*r+i[9]*n+i[13])*a,this.z=(i[2]*e+i[6]*r+i[10]*n+i[14])*a,this},applyQuaternion:function(t){var e=this.x,r=this.y,n=this.z,i=t.x,a=t.y,o=t.z,s=t.w,c=s*e+a*n-o*r,l=s*r+o*e-i*n,h=s*n+i*r-a*e,u=-i*e-a*r-o*n;return this.x=c*s+u*-i+l*-o-h*-a,this.y=l*s+u*-a+h*-i-c*-o,this.z=h*s+u*-o+c*-a-l*-i,this},project:function(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)},unproject:function(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)},transformDirection:function(t){var e=this.x,r=this.y,n=this.z,i=t.elements;return this.x=i[0]*e+i[4]*r+i[8]*n,this.y=i[1]*e+i[5]*r+i[9]*n,this.z=i[2]*e+i[6]*r+i[10]*n,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this},clampLength:function(t,e){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(t,Math.min(e,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t)},cross:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)},crossVectors:function(t,e){var r=t.x,n=t.y,i=t.z,a=e.x,o=e.y,s=e.z;return this.x=n*s-i*o,this.y=i*a-r*s,this.z=r*o-n*a,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(t){return lr.copy(this).projectOnVector(t),this.sub(lr)},reflect:function(t){return this.sub(lr.copy(t).multiplyScalar(2*this.dot(t)))},angleTo:function(t){var e=this.dot(t)/Math.sqrt(this.lengthSq()*t.lengthSq());return Math.acos(or.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y,n=this.z-t.z;return e*e+r*r+n*n},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)},setFromSphericalCoords:function(t,e,r){var n=Math.sin(e)*t;return this.x=n*Math.sin(r),this.y=Math.cos(e)*t,this.z=n*Math.cos(r),this},setFromCylindrical:function(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)},setFromCylindricalCoords:function(t,e,r){return this.x=t*Math.sin(e),this.y=r,this.z=t*Math.cos(e),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),r=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=r,this.z=n,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,r){return void 0!==r&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}});var pr,dr=new ur;function fr(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.assign(fr.prototype,{isMatrix3:!0,set:function(t,e,r,n,i,a,o,s,c){var l=this.elements;return l[0]=t,l[1]=n,l[2]=o,l[3]=e,l[4]=i,l[5]=s,l[6]=r,l[7]=a,l[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=this.elements,r=t.elements;return e[0]=r[0],e[1]=r[1],e[2]=r[2],e[3]=r[3],e[4]=r[4],e[5]=r[5],e[6]=r[6],e[7]=r[7],e[8]=r[8],this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(t){for(var e=0,r=t.count;e<r;e++)dr.x=t.getX(e),dr.y=t.getY(e),dr.z=t.getZ(e),dr.applyMatrix3(this),t.setXYZ(e,dr.x,dr.y,dr.z);return t},multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var r=t.elements,n=e.elements,i=this.elements,a=r[0],o=r[3],s=r[6],c=r[1],l=r[4],h=r[7],u=r[2],p=r[5],d=r[8],f=n[0],m=n[3],v=n[6],g=n[1],y=n[4],x=n[7],b=n[2],w=n[5],_=n[8];return i[0]=a*f+o*g+s*b,i[3]=a*m+o*y+s*w,i[6]=a*v+o*x+s*_,i[1]=c*f+l*g+h*b,i[4]=c*m+l*y+h*w,i[7]=c*v+l*x+h*_,i[2]=u*f+p*g+d*b,i[5]=u*m+p*y+d*w,i[8]=u*v+p*x+d*_,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],r=t[1],n=t[2],i=t[3],a=t[4],o=t[5],s=t[6],c=t[7],l=t[8];return e*a*l-e*o*c-r*i*l+r*o*s+n*i*c-n*a*s},getInverse:function(t,e){t&&t.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var r=t.elements,n=this.elements,i=r[0],a=r[1],o=r[2],s=r[3],c=r[4],l=r[5],h=r[6],u=r[7],p=r[8],d=p*c-l*u,f=l*h-p*s,m=u*s-c*h,v=i*d+a*f+o*m;if(0===v){var g="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(g);return console.warn(g),this.identity()}var y=1/v;return n[0]=d*y,n[1]=(o*u-p*a)*y,n[2]=(l*a-o*c)*y,n[3]=f*y,n[4]=(p*i-o*h)*y,n[5]=(o*s-l*i)*y,n[6]=m*y,n[7]=(a*h-u*i)*y,n[8]=(c*i-a*s)*y,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,r,n,i,a,o){var s=Math.cos(i),c=Math.sin(i);this.set(r*s,r*c,-r*(s*a+c*o)+a+t,-n*c,n*s,-n*(-c*a+s*o)+o+e,0,0,1)},scale:function(t,e){var r=this.elements;return r[0]*=t,r[3]*=t,r[6]*=t,r[1]*=e,r[4]*=e,r[7]*=e,this},rotate:function(t){var e=Math.cos(t),r=Math.sin(t),n=this.elements,i=n[0],a=n[3],o=n[6],s=n[1],c=n[4],l=n[7];return n[0]=e*i+r*s,n[3]=e*a+r*c,n[6]=e*o+r*l,n[1]=-r*i+e*s,n[4]=-r*a+e*c,n[7]=-r*o+e*l,this},translate:function(t,e){var r=this.elements;return r[0]+=t*r[2],r[3]+=t*r[5],r[6]+=t*r[8],r[1]+=e*r[2],r[4]+=e*r[5],r[7]+=e*r[8],this},equals:function(t){for(var e=this.elements,r=t.elements,n=0;n<9;n++)if(e[n]!==r[n])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var r=0;r<9;r++)this.elements[r]=t[r+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t}});var mr={getDataURL:function(t){var e;if("undefined"==typeof HTMLCanvasElement)return t.src;if(t instanceof HTMLCanvasElement)e=t;else{void 0===pr&&(pr=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),pr.width=t.width,pr.height=t.height;var r=pr.getContext("2d");t instanceof ImageData?r.putImageData(t,0,0):r.drawImage(t,0,0,t.width,t.height),e=pr}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};exports.ImageUtils=mr;var vr=0;function gr(t,e,r,n,i,a,o,s,c,l){Object.defineProperty(this,"id",{value:vr++}),this.uuid=or.generateUUID(),this.name="",this.image=void 0!==t?t:gr.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:gr.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:vt,this.wrapT=void 0!==n?n:vt,this.magFilter=void 0!==i?i:Mt,this.minFilter=void 0!==a?a:Et,this.anisotropy=void 0!==c?c:1,this.format=void 0!==o?o:Vt,this.type=void 0!==s?s:Lt,this.offset=new sr(0,0),this.repeat=new sr(1,1),this.center=new sr(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new fr,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==l?l:Ce,this.version=0,this.onUpdate=null}function yr(t,e,r,n){this.x=t||0,this.y=e||0,this.z=r||0,this.w=void 0!==n?n:1}function xr(t,e,r){this.width=t,this.height=e,this.scissor=new yr(0,0,t,e),this.scissorTest=!1,this.viewport=new yr(0,0,t,e),r=r||{},this.texture=new gr(void 0,void 0,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=void 0!==r.generateMipmaps&&r.generateMipmaps,this.texture.minFilter=void 0!==r.minFilter?r.minFilter:Mt,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.depthTexture=void 0!==r.depthTexture?r.depthTexture:null}function br(t,e,r){xr.call(this,t,e,r),this.samples=4}gr.DEFAULT_IMAGE=void 0,gr.DEFAULT_MAPPING=st,gr.prototype=Object.assign(Object.create(t.prototype),{constructor:gr,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];var r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var n=this.image;if(void 0===n.uuid&&(n.uuid=or.generateUUID()),!e&&void 0===t.images[n.uuid]){var i;if(Array.isArray(n)){i=[];for(var a=0,o=n.length;a<o;a++)i.push(mr.getDataURL(n[a]))}else i=mr.getDataURL(n);t.images[n.uuid]={uuid:n.uuid,url:i}}r.image=n.uuid}return e||(t.textures[this.uuid]=r),r},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping!==st)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case mt:t.x=t.x-Math.floor(t.x);break;case vt:t.x=t.x<0?0:1;break;case gt:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case mt:t.y=t.y-Math.floor(t.y);break;case vt:t.y=t.y<0?0:1;break;case gt:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(gr.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.defineProperties(yr.prototype,{width:{get:function(){return this.z},set:function(t){this.z=t}},height:{get:function(){return this.w},set:function(t){this.w=t}}}),Object.assign(yr.prototype,{isVector4:!0,set:function(t,e,r,n){return this.x=t,this.y=e,this.z=r,this.w=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,r=this.y,n=this.z,i=this.w,a=t.elements;return this.x=a[0]*e+a[4]*r+a[8]*n+a[12]*i,this.y=a[1]*e+a[5]*r+a[9]*n+a[13]*i,this.z=a[2]*e+a[6]*r+a[10]*n+a[14]*i,this.w=a[3]*e+a[7]*r+a[11]*n+a[15]*i,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,r,n,i,a=t.elements,o=a[0],s=a[4],c=a[8],l=a[1],h=a[5],u=a[9],p=a[2],d=a[6],f=a[10];if(Math.abs(s-l)<.01&&Math.abs(c-p)<.01&&Math.abs(u-d)<.01){if(Math.abs(s+l)<.1&&Math.abs(c+p)<.1&&Math.abs(u+d)<.1&&Math.abs(o+h+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;var m=(o+1)/2,v=(h+1)/2,g=(f+1)/2,y=(s+l)/4,x=(c+p)/4,b=(u+d)/4;return m>v&&m>g?m<.01?(r=0,n=.707106781,i=.707106781):(n=y/(r=Math.sqrt(m)),i=x/r):v>g?v<.01?(r=.707106781,n=0,i=.707106781):(r=y/(n=Math.sqrt(v)),i=b/n):g<.01?(r=.707106781,n=.707106781,i=0):(r=x/(i=Math.sqrt(g)),n=b/i),this.set(r,n,i,e),this}var w=Math.sqrt((d-u)*(d-u)+(c-p)*(c-p)+(l-s)*(l-s));return Math.abs(w)<.001&&(w=1),this.x=(d-u)/w,this.y=(c-p)/w,this.z=(l-s)/w,this.w=Math.acos((o+h+f-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this},clampLength:function(t,e){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(t,Math.min(e,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,r){return void 0!==r&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}}),xr.prototype=Object.assign(Object.create(t.prototype),{constructor:xr,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),br.prototype=Object.assign(Object.create(xr.prototype),{constructor:br,isWebGLMultisampleRenderTarget:!0,copy:function(t){return xr.prototype.copy.call(this,t),this.samples=t.samples,this}});var wr=new ur,_r=new Lr,Mr=new ur(0,0,0),Sr=new ur(1,1,1),Tr=new ur,Er=new ur,Ar=new ur;function Lr(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Lr.prototype,{isMatrix4:!0,set:function(t,e,r,n,i,a,o,s,c,l,h,u,p,d,f,m){var v=this.elements;return v[0]=t,v[4]=e,v[8]=r,v[12]=n,v[1]=i,v[5]=a,v[9]=o,v[13]=s,v[2]=c,v[6]=l,v[10]=h,v[14]=u,v[3]=p,v[7]=d,v[11]=f,v[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new Lr).fromArray(this.elements)},copy:function(t){var e=this.elements,r=t.elements;return e[0]=r[0],e[1]=r[1],e[2]=r[2],e[3]=r[3],e[4]=r[4],e[5]=r[5],e[6]=r[6],e[7]=r[7],e[8]=r[8],e[9]=r[9],e[10]=r[10],e[11]=r[11],e[12]=r[12],e[13]=r[13],e[14]=r[14],e[15]=r[15],this},copyPosition:function(t){var e=this.elements,r=t.elements;return e[12]=r[12],e[13]=r[13],e[14]=r[14],this},extractBasis:function(t,e,r){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,r){return this.set(t.x,e.x,r.x,0,t.y,e.y,r.y,0,t.z,e.z,r.z,0,0,0,0,1),this},extractRotation:function(t){var e=this.elements,r=t.elements,n=1/wr.setFromMatrixColumn(t,0).length(),i=1/wr.setFromMatrixColumn(t,1).length(),a=1/wr.setFromMatrixColumn(t,2).length();return e[0]=r[0]*n,e[1]=r[1]*n,e[2]=r[2]*n,e[3]=0,e[4]=r[4]*i,e[5]=r[5]*i,e[6]=r[6]*i,e[7]=0,e[8]=r[8]*a,e[9]=r[9]*a,e[10]=r[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,r=t.x,n=t.y,i=t.z,a=Math.cos(r),o=Math.sin(r),s=Math.cos(n),c=Math.sin(n),l=Math.cos(i),h=Math.sin(i);if("XYZ"===t.order){var u=a*l,p=a*h,d=o*l,f=o*h;e[0]=s*l,e[4]=-s*h,e[8]=c,e[1]=p+d*c,e[5]=u-f*c,e[9]=-o*s,e[2]=f-u*c,e[6]=d+p*c,e[10]=a*s}else if("YXZ"===t.order){var m=s*l,v=s*h,g=c*l,y=c*h;e[0]=m+y*o,e[4]=g*o-v,e[8]=a*c,e[1]=a*h,e[5]=a*l,e[9]=-o,e[2]=v*o-g,e[6]=y+m*o,e[10]=a*s}else if("ZXY"===t.order){m=s*l,v=s*h,g=c*l,y=c*h;e[0]=m-y*o,e[4]=-a*h,e[8]=g+v*o,e[1]=v+g*o,e[5]=a*l,e[9]=y-m*o,e[2]=-a*c,e[6]=o,e[10]=a*s}else if("ZYX"===t.order){u=a*l,p=a*h,d=o*l,f=o*h;e[0]=s*l,e[4]=d*c-p,e[8]=u*c+f,e[1]=s*h,e[5]=f*c+u,e[9]=p*c-d,e[2]=-c,e[6]=o*s,e[10]=a*s}else if("YZX"===t.order){var x=a*s,b=a*c,w=o*s,_=o*c;e[0]=s*l,e[4]=_-x*h,e[8]=w*h+b,e[1]=h,e[5]=a*l,e[9]=-o*l,e[2]=-c*l,e[6]=b*h+w,e[10]=x-_*h}else if("XZY"===t.order){x=a*s,b=a*c,w=o*s,_=o*c;e[0]=s*l,e[4]=-h,e[8]=c*l,e[1]=x*h+_,e[5]=a*l,e[9]=b*h-w,e[2]=w*h-b,e[6]=o*l,e[10]=_*h+x}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){return this.compose(Mr,t,Sr)},lookAt:function(t,e,r){var n=this.elements;return Ar.subVectors(t,e),0===Ar.lengthSq()&&(Ar.z=1),Ar.normalize(),Tr.crossVectors(r,Ar),0===Tr.lengthSq()&&(1===Math.abs(r.z)?Ar.x+=1e-4:Ar.z+=1e-4,Ar.normalize(),Tr.crossVectors(r,Ar)),Tr.normalize(),Er.crossVectors(Ar,Tr),n[0]=Tr.x,n[4]=Er.x,n[8]=Ar.x,n[1]=Tr.y,n[5]=Er.y,n[9]=Ar.y,n[2]=Tr.z,n[6]=Er.z,n[10]=Ar.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var r=t.elements,n=e.elements,i=this.elements,a=r[0],o=r[4],s=r[8],c=r[12],l=r[1],h=r[5],u=r[9],p=r[13],d=r[2],f=r[6],m=r[10],v=r[14],g=r[3],y=r[7],x=r[11],b=r[15],w=n[0],_=n[4],M=n[8],S=n[12],T=n[1],E=n[5],A=n[9],L=n[13],R=n[2],C=n[6],P=n[10],O=n[14],D=n[3],N=n[7],I=n[11],B=n[15];return i[0]=a*w+o*T+s*R+c*D,i[4]=a*_+o*E+s*C+c*N,i[8]=a*M+o*A+s*P+c*I,i[12]=a*S+o*L+s*O+c*B,i[1]=l*w+h*T+u*R+p*D,i[5]=l*_+h*E+u*C+p*N,i[9]=l*M+h*A+u*P+p*I,i[13]=l*S+h*L+u*O+p*B,i[2]=d*w+f*T+m*R+v*D,i[6]=d*_+f*E+m*C+v*N,i[10]=d*M+f*A+m*P+v*I,i[14]=d*S+f*L+m*O+v*B,i[3]=g*w+y*T+x*R+b*D,i[7]=g*_+y*E+x*C+b*N,i[11]=g*M+y*A+x*P+b*I,i[15]=g*S+y*L+x*O+b*B,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(t){for(var e=0,r=t.count;e<r;e++)wr.x=t.getX(e),wr.y=t.getY(e),wr.z=t.getZ(e),wr.applyMatrix4(this),t.setXYZ(e,wr.x,wr.y,wr.z);return t},determinant:function(){var t=this.elements,e=t[0],r=t[4],n=t[8],i=t[12],a=t[1],o=t[5],s=t[9],c=t[13],l=t[2],h=t[6],u=t[10],p=t[14];return t[3]*(+i*s*h-n*c*h-i*o*u+r*c*u+n*o*p-r*s*p)+t[7]*(+e*s*p-e*c*u+i*a*u-n*a*p+n*c*l-i*s*l)+t[11]*(+e*c*h-e*o*p-i*a*h+r*a*p+i*o*l-r*c*l)+t[15]*(-n*o*l-e*s*h+e*o*u+n*a*h-r*a*u+r*s*l)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(t,e,r){var n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=r),this},getInverse:function(t,e){var r=this.elements,n=t.elements,i=n[0],a=n[1],o=n[2],s=n[3],c=n[4],l=n[5],h=n[6],u=n[7],p=n[8],d=n[9],f=n[10],m=n[11],v=n[12],g=n[13],y=n[14],x=n[15],b=d*y*u-g*f*u+g*h*m-l*y*m-d*h*x+l*f*x,w=v*f*u-p*y*u-v*h*m+c*y*m+p*h*x-c*f*x,_=p*g*u-v*d*u+v*l*m-c*g*m-p*l*x+c*d*x,M=v*d*h-p*g*h-v*l*f+c*g*f+p*l*y-c*d*y,S=i*b+a*w+o*_+s*M;if(0===S){var T="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(T);return console.warn(T),this.identity()}var E=1/S;return r[0]=b*E,r[1]=(g*f*s-d*y*s-g*o*m+a*y*m+d*o*x-a*f*x)*E,r[2]=(l*y*s-g*h*s+g*o*u-a*y*u-l*o*x+a*h*x)*E,r[3]=(d*h*s-l*f*s-d*o*u+a*f*u+l*o*m-a*h*m)*E,r[4]=w*E,r[5]=(p*y*s-v*f*s+v*o*m-i*y*m-p*o*x+i*f*x)*E,r[6]=(v*h*s-c*y*s-v*o*u+i*y*u+c*o*x-i*h*x)*E,r[7]=(c*f*s-p*h*s+p*o*u-i*f*u-c*o*m+i*h*m)*E,r[8]=_*E,r[9]=(v*d*s-p*g*s-v*a*m+i*g*m+p*a*x-i*d*x)*E,r[10]=(c*g*s-v*l*s+v*a*u-i*g*u-c*a*x+i*l*x)*E,r[11]=(p*l*s-c*d*s-p*a*u+i*d*u+c*a*m-i*l*m)*E,r[12]=M*E,r[13]=(p*g*o-v*d*o+v*a*f-i*g*f-p*a*y+i*d*y)*E,r[14]=(v*l*o-c*g*o-v*a*h+i*g*h+c*a*y-i*l*y)*E,r[15]=(c*d*o-p*l*o+p*a*h-i*d*h-c*a*f+i*l*f)*E,this},scale:function(t){var e=this.elements,r=t.x,n=t.y,i=t.z;return e[0]*=r,e[4]*=n,e[8]*=i,e[1]*=r,e[5]*=n,e[9]*=i,e[2]*=r,e[6]*=n,e[10]*=i,e[3]*=r,e[7]*=n,e[11]*=i,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],r=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,r,n))},makeTranslation:function(t,e,r){return this.set(1,0,0,t,0,1,0,e,0,0,1,r,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(1,0,0,0,0,e,-r,0,0,r,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(e,0,r,0,0,1,0,0,-r,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(e,-r,0,0,r,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var r=Math.cos(e),n=Math.sin(e),i=1-r,a=t.x,o=t.y,s=t.z,c=i*a,l=i*o;return this.set(c*a+r,c*o-n*s,c*s+n*o,0,c*o+n*s,l*o+r,l*s-n*a,0,c*s-n*o,l*s+n*a,i*s*s+r,0,0,0,0,1),this},makeScale:function(t,e,r){return this.set(t,0,0,0,0,e,0,0,0,0,r,0,0,0,0,1),this},makeShear:function(t,e,r){return this.set(1,e,r,0,t,1,r,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,r){var n=this.elements,i=e._x,a=e._y,o=e._z,s=e._w,c=i+i,l=a+a,h=o+o,u=i*c,p=i*l,d=i*h,f=a*l,m=a*h,v=o*h,g=s*c,y=s*l,x=s*h,b=r.x,w=r.y,_=r.z;return n[0]=(1-(f+v))*b,n[1]=(p+x)*b,n[2]=(d-y)*b,n[3]=0,n[4]=(p-x)*w,n[5]=(1-(u+v))*w,n[6]=(m+g)*w,n[7]=0,n[8]=(d+y)*_,n[9]=(m-g)*_,n[10]=(1-(u+f))*_,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this},decompose:function(t,e,r){var n=this.elements,i=wr.set(n[0],n[1],n[2]).length(),a=wr.set(n[4],n[5],n[6]).length(),o=wr.set(n[8],n[9],n[10]).length();this.determinant()<0&&(i=-i),t.x=n[12],t.y=n[13],t.z=n[14],_r.copy(this);var s=1/i,c=1/a,l=1/o;return _r.elements[0]*=s,_r.elements[1]*=s,_r.elements[2]*=s,_r.elements[4]*=c,_r.elements[5]*=c,_r.elements[6]*=c,_r.elements[8]*=l,_r.elements[9]*=l,_r.elements[10]*=l,e.setFromRotationMatrix(_r),r.x=i,r.y=a,r.z=o,this},makePerspective:function(t,e,r,n,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements,s=2*i/(e-t),c=2*i/(r-n),l=(e+t)/(e-t),h=(r+n)/(r-n),u=-(a+i)/(a-i),p=-2*a*i/(a-i);return o[0]=s,o[4]=0,o[8]=l,o[12]=0,o[1]=0,o[5]=c,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(t,e,r,n,i,a){var o=this.elements,s=1/(e-t),c=1/(r-n),l=1/(a-i),h=(e+t)*s,u=(r+n)*c,p=(a+i)*l;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*l,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(t){for(var e=this.elements,r=t.elements,n=0;n<16;n++)if(e[n]!==r[n])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var r=0;r<16;r++)this.elements[r]=t[r+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t[e+9]=r[9],t[e+10]=r[10],t[e+11]=r[11],t[e+12]=r[12],t[e+13]=r[13],t[e+14]=r[14],t[e+15]=r[15],t}});var Rr=new Lr,Cr=new cr;function Pr(t,e,r,n){this._x=t||0,this._y=e||0,this._z=r||0,this._order=n||Pr.DefaultOrder}function Or(){this.mask=1}Pr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],Pr.DefaultOrder="XYZ",Object.defineProperties(Pr.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this._onChangeCallback()}}}),Object.assign(Pr.prototype,{isEuler:!0,set:function(t,e,r,n){return this._x=t,this._y=e,this._z=r,this._order=n||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this},setFromRotationMatrix:function(t,e,r){var n=or.clamp,i=t.elements,a=i[0],o=i[4],s=i[8],c=i[1],l=i[5],h=i[9],u=i[2],p=i[6],d=i[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(n(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(p,l),this._z=0)):"YXZ"===e?(this._x=Math.asin(-n(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(s,d),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,a),this._z=0)):"ZXY"===e?(this._x=Math.asin(n(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,a))):"ZYX"===e?(this._y=Math.asin(-n(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(p,d),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-o,l))):"YZX"===e?(this._z=Math.asin(n(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(s,d))):"XZY"===e?(this._z=Math.asin(-n(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(p,l),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-h,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,!1!==r&&this._onChangeCallback(),this},setFromQuaternion:function(t,e,r){return Rr.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Rr,e,r)},setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(t){return Cr.setFromEuler(this),this.setFromQuaternion(Cr,t)},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new ur(this._x,this._y,this._z)},_onChange:function(t){return this._onChangeCallback=t,this},_onChangeCallback:function(){}}),Object.assign(Or.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},enableAll:function(){this.mask=-1},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},disableAll:function(){this.mask=0},test:function(t){return 0!=(this.mask&t.mask)}});var Dr=0,Nr=new ur,Ir=new cr,Br=new Lr,zr=new ur,Fr=new ur,Gr=new ur,Ur=new cr,Hr=new ur(1,0,0),Vr=new ur(0,1,0),jr=new ur(0,0,1),kr={type:"added"},Wr={type:"removed"};function qr(){Object.defineProperty(this,"id",{value:Dr++}),this.uuid=or.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=qr.DefaultUp.clone();var t=new ur,e=new Pr,r=new cr,n=new ur(1,1,1);e._onChange(function(){r.setFromEuler(e,!1)}),r._onChange(function(){e.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Lr},normalMatrix:{value:new fr}}),this.matrix=new Lr,this.matrixWorld=new Lr,this.matrixAutoUpdate=qr.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Or,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function Xr(){qr.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}qr.DefaultUp=new ur(0,1,0),qr.DefaultMatrixAutoUpdate=!0,qr.prototype=Object.assign(Object.create(t.prototype),{constructor:qr,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return Ir.setFromAxisAngle(t,e),this.quaternion.multiply(Ir),this},rotateOnWorldAxis:function(t,e){return Ir.setFromAxisAngle(t,e),this.quaternion.premultiply(Ir),this},rotateX:function(t){return this.rotateOnAxis(Hr,t)},rotateY:function(t){return this.rotateOnAxis(Vr,t)},rotateZ:function(t){return this.rotateOnAxis(jr,t)},translateOnAxis:function(t,e){return Nr.copy(t).applyQuaternion(this.quaternion),this.position.add(Nr.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(Hr,t)},translateY:function(t){return this.translateOnAxis(Vr,t)},translateZ:function(t){return this.translateOnAxis(jr,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(Br.getInverse(this.matrixWorld))},lookAt:function(t,e,r){t.isVector3?zr.copy(t):zr.set(t,e,r);var n=this.parent;this.updateWorldMatrix(!0,!1),Fr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Br.lookAt(Fr,zr,this.up):Br.lookAt(zr,Fr,this.up),this.quaternion.setFromRotationMatrix(Br),n&&(Br.extractRotation(n.matrixWorld),Ir.setFromRotationMatrix(Br),this.quaternion.premultiply(Ir.inverse()))},add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(kr)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var r=this.children.indexOf(t);return-1!==r&&(t.parent=null,this.children.splice(r,1),t.dispatchEvent(Wr)),this},attach:function(t){return this.updateWorldMatrix(!0,!1),Br.getInverse(this.matrixWorld),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Br.multiply(t.parent.matrixWorld)),t.applyMatrix(Br),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var r=0,n=this.children.length;r<n;r++){var i=this.children[r].getObjectByProperty(t,e);if(void 0!==i)return i}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new ur),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new cr),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Fr,t,Gr),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new ur),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Fr,Ur,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new ur),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);for(var e=this.children,r=0,n=e.length;r<n;r++)e[r].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,r=0,n=e.length;r<n;r++)e[r].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,r=0,n=e.length;r<n;r++)e[r].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){var r=this.parent;if(!0===t&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e)for(var n=this.children,i=0,a=n.length;i<a;i++)n[i].updateWorldMatrix(!1,!0)},toJSON:function(t){var e=void 0===t||"string"==typeof t,r={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var n={};function i(e,r){return void 0===e[r.uuid]&&(e[r.uuid]=r.toJSON(t)),r.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isMesh&&this.drawMode!==Ae&&(n.drawMode=this.drawMode),this.isMesh||this.isLine||this.isPoints){n.geometry=i(t.geometries,this.geometry);var a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){var o=a.shapes;if(Array.isArray(o))for(var s=0,c=o.length;s<c;s++){var l=o[s];i(t.shapes,l)}else i(t.shapes,o)}}if(void 0!==this.material)if(Array.isArray(this.material)){var h=[];for(s=0,c=this.material.length;s<c;s++)h.push(i(t.materials,this.material[s]));n.material=h}else n.material=i(t.materials,this.material);if(this.children.length>0){n.children=[];for(s=0;s<this.children.length;s++)n.children.push(this.children[s].toJSON(t).object)}if(e){var u=m(t.geometries),p=m(t.materials),d=m(t.textures),f=m(t.images);o=m(t.shapes);u.length>0&&(r.geometries=u),p.length>0&&(r.materials=p),d.length>0&&(r.textures=d),f.length>0&&(r.images=f),o.length>0&&(r.shapes=o)}return r.object=n,r;function m(t){var e=[];for(var r in t){var n=t[r];delete n.metadata,e.push(n)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var r=0;r<t.children.length;r++){var n=t.children[r];this.add(n.clone())}return this}}),Xr.prototype=Object.assign(Object.create(qr.prototype),{constructor:Xr,isScene:!0,copy:function(t,e){return qr.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=qr.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e},dispose:function(){this.dispatchEvent({type:"dispose"})}});var Yr=[new ur,new ur,new ur,new ur,new ur,new ur,new ur,new ur],Zr=new ur,Jr=new ur,Qr=new ur,Kr=new ur,$r=new ur,tn=new ur,en=new ur,rn=new ur,nn=new ur,an=new ur,on=new ur;function sn(t,e){this.min=void 0!==t?t:new ur(1/0,1/0,1/0),this.max=void 0!==e?e:new ur(-1/0,-1/0,-1/0)}function cn(t,e,r,n,i){var a,o;for(a=0,o=t.length-3;a<=o;a+=3){on.fromArray(t,a);var s=i.x*Math.abs(on.x)+i.y*Math.abs(on.y)+i.z*Math.abs(on.z),c=e.dot(on),l=r.dot(on),h=n.dot(on);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>s)return!1}return!0}Object.assign(sn.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,r=1/0,n=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,c=t.length;s<c;s+=3){var l=t[s],h=t[s+1],u=t[s+2];l<e&&(e=l),h<r&&(r=h),u<n&&(n=u),l>i&&(i=l),h>a&&(a=h),u>o&&(o=u)}return this.min.set(e,r,n),this.max.set(i,a,o),this},setFromBufferAttribute:function(t){for(var e=1/0,r=1/0,n=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,c=t.count;s<c;s++){var l=t.getX(s),h=t.getY(s),u=t.getZ(s);l<e&&(e=l),h<r&&(r=h),u<n&&(n=u),l>i&&(i=l),h>a&&(a=h),u>o&&(o=u)}return this.min.set(e,r,n),this.max.set(i,a,o),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(t,e){var r=Zr.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this},setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new ur),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new ur),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(t){var e,r;t.updateWorldMatrix(!1,!1);var n=t.geometry;if(void 0!==n)if(n.isGeometry){var i=n.vertices;for(e=0,r=i.length;e<r;e++)Zr.copy(i[e]),Zr.applyMatrix4(t.matrixWorld),this.expandByPoint(Zr)}else if(n.isBufferGeometry){var a=n.attributes.position;if(void 0!==a)for(e=0,r=a.count;e<r;e++)Zr.fromBufferAttribute(a,e).applyMatrix4(t.matrixWorld),this.expandByPoint(Zr)}var o=t.children;for(e=0,r=o.length;e<r;e++)this.expandByObject(o[e]);return this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new ur),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(t){return this.clampPoint(t.center,Zr),Zr.distanceToSquared(t.center)<=t.radius*t.radius},intersectsPlane:function(t){var e,r;return t.normal.x>0?(e=t.normal.x*this.min.x,r=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,r=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,r+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,r+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,r+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,r+=t.normal.z*this.min.z),e<=-t.constant&&r>=-t.constant},intersectsTriangle:function(t){if(this.isEmpty())return!1;this.getCenter(rn),nn.subVectors(this.max,rn),Jr.subVectors(t.a,rn),Qr.subVectors(t.b,rn),Kr.subVectors(t.c,rn),$r.subVectors(Qr,Jr),tn.subVectors(Kr,Qr),en.subVectors(Jr,Kr);var e=[0,-$r.z,$r.y,0,-tn.z,tn.y,0,-en.z,en.y,$r.z,0,-$r.x,tn.z,0,-tn.x,en.z,0,-en.x,-$r.y,$r.x,0,-tn.y,tn.x,0,-en.y,en.x,0];return!!cn(e,Jr,Qr,Kr,nn)&&(!!cn(e=[1,0,0,0,1,0,0,0,1],Jr,Qr,Kr,nn)&&(an.crossVectors($r,tn),cn(e=[an.x,an.y,an.z],Jr,Qr,Kr,nn)))},clampPoint:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new ur),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){return Zr.copy(t).clamp(this.min,this.max).sub(t).length()},getBoundingSphere:function(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(Zr).length(),t},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(t){return this.isEmpty()?this:(Yr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Yr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Yr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Yr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Yr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Yr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Yr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Yr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Yr),this)},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});var ln=new sn;function hn(t,e){this.center=void 0!==t?t:new ur,this.radius=void 0!==e?e:0}Object.assign(hn.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(t,e){var r=this.center;void 0!==e?r.copy(e):ln.setFromPoints(t).getCenter(r);for(var n=0,i=0,a=t.length;i<a;i++)n=Math.max(n,r.distanceToSquared(t[i]));return this.radius=Math.sqrt(n),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var r=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new ur),e.copy(t),r>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new sn),t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}});var un=new ur,pn=new ur,dn=new ur,fn=new ur,mn=new ur,vn=new ur,gn=new ur;function yn(t,e){this.origin=void 0!==t?t:new ur,this.direction=void 0!==e?e:new ur}Object.assign(yn.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new ur),e.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(t){return this.origin.copy(this.at(t,un)),this},closestPointToPoint:function(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new ur),e.subVectors(t,this.origin);var r=e.dot(this.direction);return r<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(t){var e=un.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(un.copy(this.direction).multiplyScalar(e).add(this.origin),un.distanceToSquared(t))},distanceSqToSegment:function(t,e,r,n){pn.copy(t).add(e).multiplyScalar(.5),dn.copy(e).sub(t).normalize(),fn.copy(this.origin).sub(pn);var i,a,o,s,c=.5*t.distanceTo(e),l=-this.direction.dot(dn),h=fn.dot(this.direction),u=-fn.dot(dn),p=fn.lengthSq(),d=Math.abs(1-l*l);if(d>0)if(a=l*h-u,s=c*d,(i=l*u-h)>=0)if(a>=-s)if(a<=s){var f=1/d;o=(i*=f)*(i+l*(a*=f)+2*h)+a*(l*i+a+2*u)+p}else a=c,o=-(i=Math.max(0,-(l*a+h)))*i+a*(a+2*u)+p;else a=-c,o=-(i=Math.max(0,-(l*a+h)))*i+a*(a+2*u)+p;else a<=-s?o=-(i=Math.max(0,-(-l*c+h)))*i+(a=i>0?-c:Math.min(Math.max(-c,-u),c))*(a+2*u)+p:a<=s?(i=0,o=(a=Math.min(Math.max(-c,-u),c))*(a+2*u)+p):o=-(i=Math.max(0,-(l*c+h)))*i+(a=i>0?c:Math.min(Math.max(-c,-u),c))*(a+2*u)+p;else a=l>0?-c:c,o=-(i=Math.max(0,-(l*a+h)))*i+a*(a+2*u)+p;return r&&r.copy(this.direction).multiplyScalar(i).add(this.origin),n&&n.copy(dn).multiplyScalar(a).add(pn),o},intersectSphere:function(t,e){un.subVectors(t.center,this.origin);var r=un.dot(this.direction),n=un.dot(un)-r*r,i=t.radius*t.radius;if(n>i)return null;var a=Math.sqrt(i-n),o=r-a,s=r+a;return o<0&&s<0?null:o<0?this.at(s,e):this.at(o,e)},intersectsSphere:function(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;var r=-(this.origin.dot(t.normal)+t.constant)/e;return r>=0?r:null},intersectPlane:function(t,e){var r=this.distanceToPlane(t);return null===r?null:this.at(r,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0},intersectBox:function(t,e){var r,n,i,a,o,s,c=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(r=(t.min.x-u.x)*c,n=(t.max.x-u.x)*c):(r=(t.max.x-u.x)*c,n=(t.min.x-u.x)*c),l>=0?(i=(t.min.y-u.y)*l,a=(t.max.y-u.y)*l):(i=(t.max.y-u.y)*l,a=(t.min.y-u.y)*l),r>a||i>n?null:((i>r||r!=r)&&(r=i),(a<n||n!=n)&&(n=a),h>=0?(o=(t.min.z-u.z)*h,s=(t.max.z-u.z)*h):(o=(t.max.z-u.z)*h,s=(t.min.z-u.z)*h),r>s||o>n?null:((o>r||r!=r)&&(r=o),(s<n||n!=n)&&(n=s),n<0?null:this.at(r>=0?r:n,e)))},intersectsBox:function(t){return null!==this.intersectBox(t,un)},intersectTriangle:function(t,e,r,n,i){mn.subVectors(e,t),vn.subVectors(r,t),gn.crossVectors(mn,vn);var a,o=this.direction.dot(gn);if(o>0){if(n)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}fn.subVectors(this.origin,t);var s=a*this.direction.dot(vn.crossVectors(fn,vn));if(s<0)return null;var c=a*this.direction.dot(mn.cross(fn));if(c<0)return null;if(s+c>o)return null;var l=-a*fn.dot(gn);return l<0?null:this.at(l/o,i)},applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}});var xn=new ur,bn=new ur,wn=new ur,_n=new ur,Mn=new ur,Sn=new ur,Tn=new ur,En=new ur,An=new ur,Ln=new ur;function Rn(t,e,r){this.a=void 0!==t?t:new ur,this.b=void 0!==e?e:new ur,this.c=void 0!==r?r:new ur}Object.assign(Rn,{getNormal:function(t,e,r,n){void 0===n&&(console.warn("THREE.Triangle: .getNormal() target is now required"),n=new ur),n.subVectors(r,e),xn.subVectors(t,e),n.cross(xn);var i=n.lengthSq();return i>0?n.multiplyScalar(1/Math.sqrt(i)):n.set(0,0,0)},getBarycoord:function(t,e,r,n,i){xn.subVectors(n,e),bn.subVectors(r,e),wn.subVectors(t,e);var a=xn.dot(xn),o=xn.dot(bn),s=xn.dot(wn),c=bn.dot(bn),l=bn.dot(wn),h=a*c-o*o;if(void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new ur),0===h)return i.set(-2,-1,-1);var u=1/h,p=(c*s-o*l)*u,d=(a*l-o*s)*u;return i.set(1-p-d,d,p)},containsPoint:function(t,e,r,n){return Rn.getBarycoord(t,e,r,n,_n),_n.x>=0&&_n.y>=0&&_n.x+_n.y<=1},getUV:function(t,e,r,n,i,a,o,s){return this.getBarycoord(t,e,r,n,_n),s.set(0,0),s.addScaledVector(i,_n.x),s.addScaledVector(a,_n.y),s.addScaledVector(o,_n.z),s},isFrontFacing:function(t,e,r,n){return xn.subVectors(r,e),bn.subVectors(t,e),xn.cross(bn).dot(n)<0}}),Object.assign(Rn.prototype,{set:function(t,e,r){return this.a.copy(t),this.b.copy(e),this.c.copy(r),this},setFromPointsAndIndices:function(t,e,r,n){return this.a.copy(t[e]),this.b.copy(t[r]),this.c.copy(t[n]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},getArea:function(){return xn.subVectors(this.c,this.b),bn.subVectors(this.a,this.b),.5*xn.cross(bn).length()},getMidpoint:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new ur),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(t){return Rn.getNormal(this.a,this.b,this.c,t)},getPlane:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new ur),t.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(t,e){return Rn.getBarycoord(t,this.a,this.b,this.c,e)},getUV:function(t,e,r,n,i){return Rn.getUV(t,this.a,this.b,this.c,e,r,n,i)},containsPoint:function(t){return Rn.containsPoint(t,this.a,this.b,this.c)},isFrontFacing:function(t){return Rn.isFrontFacing(this.a,this.b,this.c,t)},intersectsBox:function(t){return t.intersectsTriangle(this)},closestPointToPoint:function(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new ur);var r,n,i=this.a,a=this.b,o=this.c;Mn.subVectors(a,i),Sn.subVectors(o,i),En.subVectors(t,i);var s=Mn.dot(En),c=Sn.dot(En);if(s<=0&&c<=0)return e.copy(i);An.subVectors(t,a);var l=Mn.dot(An),h=Sn.dot(An);if(l>=0&&h<=l)return e.copy(a);var u=s*h-l*c;if(u<=0&&s>=0&&l<=0)return r=s/(s-l),e.copy(i).addScaledVector(Mn,r);Ln.subVectors(t,o);var p=Mn.dot(Ln),d=Sn.dot(Ln);if(d>=0&&p<=d)return e.copy(o);var f=p*c-s*d;if(f<=0&&c>=0&&d<=0)return n=c/(c-d),e.copy(i).addScaledVector(Sn,n);var m=l*d-p*h;if(m<=0&&h-l>=0&&p-d>=0)return Tn.subVectors(o,a),n=(h-l)/(h-l+(p-d)),e.copy(a).addScaledVector(Tn,n);var v=1/(m+f+u);return r=f*v,n=u*v,e.copy(i).addScaledVector(Mn,r).addScaledVector(Sn,n)},equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}});var Cn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Pn={h:0,s:0,l:0},On={h:0,s:0,l:0};function Dn(t,e,r){return void 0===e&&void 0===r?this.set(t):this.setRGB(t,e,r)}function Nn(t,e,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?t+6*(e-t)*r:r<.5?e:r<2/3?t+6*(e-t)*(2/3-r):t}function In(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Bn(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}function zn(t,e,r,n,i,a){this.a=t,this.b=e,this.c=r,this.normal=n&&n.isVector3?n:new ur,this.vertexNormals=Array.isArray(n)?n:[],this.color=i&&i.isColor?i:new Dn,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=void 0!==a?a:0}Object.assign(Dn.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,r){return this.r=t,this.g=e,this.b=r,this},setHSL:function(t,e,r){if(t=or.euclideanModulo(t,1),e=or.clamp(e,0,1),r=or.clamp(r,0,1),0===e)this.r=this.g=this.b=r;else{var n=r<=.5?r*(1+e):r+e-r*e,i=2*r-n;this.r=Nn(i,n,t+1/3),this.g=Nn(i,n,t),this.b=Nn(i,n,t-1/3)}return this},setStyle:function(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var r;if(r=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){var n,i=r[1],a=r[2];switch(i){case"rgb":case"rgba":if(n=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,e(n[5]),this;if(n=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,e(n[5]),this;break;case"hsl":case"hsla":if(n=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){var o=parseFloat(n[1])/360,s=parseInt(n[2],10)/100,c=parseInt(n[3],10)/100;return e(n[5]),this.setHSL(o,s,c)}}}else if(r=/^\#([A-Fa-f0-9]+)$/.exec(t)){var l,h=(l=r[1]).length;if(3===h)return this.r=parseInt(l.charAt(0)+l.charAt(0),16)/255,this.g=parseInt(l.charAt(1)+l.charAt(1),16)/255,this.b=parseInt(l.charAt(2)+l.charAt(2),16)/255,this;if(6===h)return this.r=parseInt(l.charAt(0)+l.charAt(1),16)/255,this.g=parseInt(l.charAt(2)+l.charAt(3),16)/255,this.b=parseInt(l.charAt(4)+l.charAt(5),16)/255,this}t&&t.length>0&&(void 0!==(l=Cn[t])?this.setHex(l):console.warn("THREE.Color: Unknown color "+t));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);var r=e>0?1/e:1;return this.r=Math.pow(t.r,r),this.g=Math.pow(t.g,r),this.b=Math.pow(t.b,r),this},convertGammaToLinear:function(t){return this.copyGammaToLinear(this,t),this},convertLinearToGamma:function(t){return this.copyLinearToGamma(this,t),this},copySRGBToLinear:function(t){return this.r=In(t.r),this.g=In(t.g),this.b=In(t.b),this},copyLinearToSRGB:function(t){return this.r=Bn(t.r),this.g=Bn(t.g),this.b=Bn(t.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});var e,r,n=this.r,i=this.g,a=this.b,o=Math.max(n,i,a),s=Math.min(n,i,a),c=(s+o)/2;if(s===o)e=0,r=0;else{var l=o-s;switch(r=c<=.5?l/(o+s):l/(2-o-s),o){case n:e=(i-a)/l+(i<a?6:0);break;case i:e=(a-n)/l+2;break;case a:e=(n-i)/l+4}e/=6}return t.h=e,t.s=r,t.l=c,t},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,r){return this.getHSL(Pn),Pn.h+=t,Pn.s+=e,Pn.l+=r,this.setHSL(Pn.h,Pn.s,Pn.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},lerpHSL:function(t,e){this.getHSL(Pn),t.getHSL(On);var r=or.lerp(Pn.h,On.h,e),n=or.lerp(Pn.s,On.s,e),i=or.lerp(Pn.l,On.l,e);return this.setHSL(r,n,i),this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}}),Object.assign(zn.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,r=t.vertexNormals.length;e<r;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(e=0,r=t.vertexColors.length;e<r;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});var Fn=0;function Gn(){Object.defineProperty(this,"id",{value:Fn++}),this.uuid=or.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=M,this.side=f,this.flatShading=!1,this.vertexTangents=!1,this.vertexColors=x,this.opacity=1,this.transparent=!1,this.blendSrc=z,this.blendDst=F,this.blendEquation=L,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=X,this.depthTest=!0,this.depthWrite=!0,this.stencilFunc=nr,this.stencilRef=0,this.stencilMask=255,this.stencilFail=je,this.stencilZFail=je,this.stencilZPass=je,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.needsUpdate=!0}function Un(t){Gn.call(this),this.type="MeshBasicMaterial",this.color=new Dn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=K,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(t)}function Hn(t,e,r){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===r,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function Vn(t,e,r){Hn.call(this,new Int8Array(t),e,r)}function jn(t,e,r){Hn.call(this,new Uint8Array(t),e,r)}function kn(t,e,r){Hn.call(this,new Uint8ClampedArray(t),e,r)}function Wn(t,e,r){Hn.call(this,new Int16Array(t),e,r)}function qn(t,e,r){Hn.call(this,new Uint16Array(t),e,r)}function Xn(t,e,r){Hn.call(this,new Int32Array(t),e,r)}function Yn(t,e,r){Hn.call(this,new Uint32Array(t),e,r)}function Zn(t,e,r){Hn.call(this,new Float32Array(t),e,r)}function Jn(t,e,r){Hn.call(this,new Float64Array(t),e,r)}function Qn(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function Kn(t){if(0===t.length)return-1/0;for(var e=t[0],r=1,n=t.length;r<n;++r)t[r]>e&&(e=t[r]);return e}Gn.prototype=Object.assign(Object.create(t.prototype),{constructor:Gn,isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(void 0!==t)for(var e in t){var r=t[e];if(void 0!==r)if("shading"!==e){var n=this[e];void 0!==n?n&&n.isColor?n.set(r):n&&n.isVector3&&r&&r.isVector3?n.copy(r):this[e]=r:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===g;else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},toJSON:function(t){var e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});var r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(t){var e=[];for(var r in t){var n=t[r];delete n.metadata,e.push(n)}return e}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearcoat&&(r.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(t).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(t).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(t).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(t).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(t).uuid,r.reflectivity=this.reflectivity,r.refractionRatio=this.refractionRatio,void 0!==this.combine&&(r.combine=this.combine),void 0!==this.envMapIntensity&&(r.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(r.size=this.size),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==M&&(r.blending=this.blending),!0===this.flatShading&&(r.flatShading=this.flatShading),this.side!==f&&(r.side=this.side),this.vertexColors!==x&&(r.vertexColors=this.vertexColors),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,r.stencilWrite=this.stencilWrite,r.stencilFunc=this.stencilFunc,r.stencilRef=this.stencilRef,r.stencilMask=this.stencilMask,r.stencilFail=this.stencilFail,r.stencilZFail=this.stencilZFail,r.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(r.rotation=this.rotation),!0===this.polygonOffset&&(r.polygonOffset=!0),0!==this.polygonOffsetFactor&&(r.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(r.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(r.linewidth=this.linewidth),void 0!==this.dashSize&&(r.dashSize=this.dashSize),void 0!==this.gapSize&&(r.gapSize=this.gapSize),void 0!==this.scale&&(r.scale=this.scale),!0===this.dithering&&(r.dithering=!0),this.alphaTest>0&&(r.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(r.morphTargets=!0),!0===this.morphNormals&&(r.morphNormals=!0),!0===this.skinning&&(r.skinning=!0),!1===this.visible&&(r.visible=!1),!1===this.toneMapped&&(r.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),e){var i=n(t.textures),a=n(t.images);i.length>0&&(r.textures=i),a.length>0&&(r.images=a)}return r},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.lights=t.lights,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWrite=t.stencilWrite,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilMask=t.stencilMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this.clipShadows=t.clipShadows,this.clipIntersection=t.clipIntersection;var e=t.clippingPlanes,r=null;if(null!==e){var n=e.length;r=new Array(n);for(var i=0;i!==n;++i)r[i]=e[i].clone()}return this.clippingPlanes=r,this.shadowSide=t.shadowSide,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Un.prototype=Object.create(Gn.prototype),Un.prototype.constructor=Un,Un.prototype.isMeshBasicMaterial=!0,Un.prototype.copy=function(t){return Gn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},Object.defineProperty(Hn.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Hn.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");return this.count=void 0!==t?t.length/this.itemSize:0,this.array=t,this},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.dynamic=t.dynamic,this},copyAt:function(t,e,r){t*=this.itemSize,r*=e.itemSize;for(var n=0,i=this.itemSize;n<i;n++)this.array[t+n]=e.array[r+n];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,r=0,n=0,i=t.length;n<i;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),a=new Dn),e[r++]=a.r,e[r++]=a.g,e[r++]=a.b}return this},copyVector2sArray:function(t){for(var e=this.array,r=0,n=0,i=t.length;n<i;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),a=new sr),e[r++]=a.x,e[r++]=a.y}return this},copyVector3sArray:function(t){for(var e=this.array,r=0,n=0,i=t.length;n<i;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),a=new ur),e[r++]=a.x,e[r++]=a.y,e[r++]=a.z}return this},copyVector4sArray:function(t){for(var e=this.array,r=0,n=0,i=t.length;n<i;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),a=new yr),e[r++]=a.x,e[r++]=a.y,e[r++]=a.z,e[r++]=a.w}return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=r,this},setXYZ:function(t,e,r,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=r,this.array[t+2]=n,this},setXYZW:function(t,e,r,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=r,this.array[t+2]=n,this.array[t+3]=i,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),Vn.prototype=Object.create(Hn.prototype),Vn.prototype.constructor=Vn,jn.prototype=Object.create(Hn.prototype),jn.prototype.constructor=jn,kn.prototype=Object.create(Hn.prototype),kn.prototype.constructor=kn,Wn.prototype=Object.create(Hn.prototype),Wn.prototype.constructor=Wn,qn.prototype=Object.create(Hn.prototype),qn.prototype.constructor=qn,Xn.prototype=Object.create(Hn.prototype),Xn.prototype.constructor=Xn,Yn.prototype=Object.create(Hn.prototype),Yn.prototype.constructor=Yn,Zn.prototype=Object.create(Hn.prototype),Zn.prototype.constructor=Zn,Jn.prototype=Object.create(Hn.prototype),Jn.prototype.constructor=Jn,Object.assign(Qn.prototype,{computeGroups:function(t){for(var e,r=[],n=void 0,i=t.faces,a=0;a<i.length;a++){var o=i[a];o.materialIndex!==n&&(n=o.materialIndex,void 0!==e&&(e.count=3*a-e.start,r.push(e)),e={start:3*a,materialIndex:n})}void 0!==e&&(e.count=3*a-e.start,r.push(e)),this.groups=r},fromGeometry:function(t){var e,r=t.faces,n=t.vertices,i=t.faceVertexUvs,a=i[0]&&i[0].length>0,o=i[1]&&i[1].length>0,s=t.morphTargets,c=s.length;if(c>0){e=[];for(var l=0;l<c;l++)e[l]={name:s[l].name,data:[]};this.morphTargets.position=e}var h,u=t.morphNormals,p=u.length;if(p>0){h=[];for(l=0;l<p;l++)h[l]={name:u[l].name,data:[]};this.morphTargets.normal=h}var d=t.skinIndices,f=t.skinWeights,m=d.length===n.length,v=f.length===n.length;n.length>0&&0===r.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(l=0;l<r.length;l++){var g=r[l];this.vertices.push(n[g.a],n[g.b],n[g.c]);var y=g.vertexNormals;if(3===y.length)this.normals.push(y[0],y[1],y[2]);else{var x=g.normal;this.normals.push(x,x,x)}var b,w=g.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{var _=g.color;this.colors.push(_,_,_)}if(!0===a)void 0!==(b=i[0][l])?this.uvs.push(b[0],b[1],b[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",l),this.uvs.push(new sr,new sr,new sr));if(!0===o)void 0!==(b=i[1][l])?this.uvs2.push(b[0],b[1],b[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",l),this.uvs2.push(new sr,new sr,new sr));for(var M=0;M<c;M++){var S=s[M].vertices;e[M].data.push(S[g.a],S[g.b],S[g.c])}for(M=0;M<p;M++){var T=u[M].vertexNormals[l];h[M].data.push(T.a,T.b,T.c)}m&&this.skinIndices.push(d[g.a],d[g.b],d[g.c]),v&&this.skinWeights.push(f[g.a],f[g.b],f[g.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this}});var $n=1,ti=new Lr,ei=new qr,ri=new ur,ni=new sn,ii=new sn,ai=new ur;function oi(){Object.defineProperty(this,"id",{value:$n+=2}),this.uuid=or.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}oi.prototype=Object.assign(Object.create(t.prototype),{constructor:oi,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(Kn(t)>65535?Yn:qn)(t,1):this.index=t},addAttribute:function(t,e){return e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):(this.attributes[t]=e,this):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(t,new Hn(arguments[1],arguments[2])))},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,r){this.groups.push({start:t,count:e,materialIndex:void 0!==r?r:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var r=this.attributes.normal;void 0!==r&&((new fr).getNormalMatrix(t).applyToBufferAttribute(r),r.needsUpdate=!0);var n=this.attributes.tangent;void 0!==n&&((new fr).getNormalMatrix(t).applyToBufferAttribute(n),n.needsUpdate=!0);return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return ti.makeRotationX(t),this.applyMatrix(ti),this},rotateY:function(t){return ti.makeRotationY(t),this.applyMatrix(ti),this},rotateZ:function(t){return ti.makeRotationZ(t),this.applyMatrix(ti),this},translate:function(t,e,r){return ti.makeTranslation(t,e,r),this.applyMatrix(ti),this},scale:function(t,e,r){return ti.makeScale(t,e,r),this.applyMatrix(ti),this},lookAt:function(t){return ei.lookAt(t),ei.updateMatrix(),this.applyMatrix(ei.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(ri).negate(),this.translate(ri.x,ri.y,ri.z),this},setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var r=new Zn(3*e.vertices.length,3),n=new Zn(3*e.colors.length,3);if(this.addAttribute("position",r.copyVector3sArray(e.vertices)),this.addAttribute("color",n.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var i=new Zn(e.lineDistances.length,1);this.addAttribute("lineDistance",i.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e=[],r=0,n=t.length;r<n;r++){var i=t[r];e.push(i.x,i.y,i.z||0)}return this.addAttribute("position",new Zn(e,3)),this},updateFromObject:function(t){var e,r=t.geometry;if(t.isMesh){var n=r.__directGeometry;if(!0===r.elementsNeedUpdate&&(n=void 0,r.elementsNeedUpdate=!1),void 0===n)return this.fromGeometry(r);n.verticesNeedUpdate=r.verticesNeedUpdate,n.normalsNeedUpdate=r.normalsNeedUpdate,n.colorsNeedUpdate=r.colorsNeedUpdate,n.uvsNeedUpdate=r.uvsNeedUpdate,n.groupsNeedUpdate=r.groupsNeedUpdate,r.verticesNeedUpdate=!1,r.normalsNeedUpdate=!1,r.colorsNeedUpdate=!1,r.uvsNeedUpdate=!1,r.groupsNeedUpdate=!1,r=n}return!0===r.verticesNeedUpdate&&(void 0!==(e=this.attributes.position)&&(e.copyVector3sArray(r.vertices),e.needsUpdate=!0),r.verticesNeedUpdate=!1),!0===r.normalsNeedUpdate&&(void 0!==(e=this.attributes.normal)&&(e.copyVector3sArray(r.normals),e.needsUpdate=!0),r.normalsNeedUpdate=!1),!0===r.colorsNeedUpdate&&(void 0!==(e=this.attributes.color)&&(e.copyColorsArray(r.colors),e.needsUpdate=!0),r.colorsNeedUpdate=!1),r.uvsNeedUpdate&&(void 0!==(e=this.attributes.uv)&&(e.copyVector2sArray(r.uvs),e.needsUpdate=!0),r.uvsNeedUpdate=!1),r.lineDistancesNeedUpdate&&(void 0!==(e=this.attributes.lineDistance)&&(e.copyArray(r.lineDistances),e.needsUpdate=!0),r.lineDistancesNeedUpdate=!1),r.groupsNeedUpdate&&(r.computeGroups(t.geometry),this.groups=r.groups,r.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new Qn).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.addAttribute("position",new Hn(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var r=new Float32Array(3*t.normals.length);this.addAttribute("normal",new Hn(r,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var n=new Float32Array(3*t.colors.length);this.addAttribute("color",new Hn(n,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var i=new Float32Array(2*t.uvs.length);this.addAttribute("uv",new Hn(i,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var a=new Float32Array(2*t.uvs2.length);this.addAttribute("uv2",new Hn(a,2).copyVector2sArray(t.uvs2))}for(var o in this.groups=t.groups,t.morphTargets){for(var s=[],c=t.morphTargets[o],l=0,h=c.length;l<h;l++){var u=c[l],p=new Zn(3*u.data.length,3);p.name=u.name,s.push(p.copyVector3sArray(u.data))}this.morphAttributes[o]=s}if(t.skinIndices.length>0){var d=new Zn(4*t.skinIndices.length,4);this.addAttribute("skinIndex",d.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var f=new Zn(4*t.skinWeights.length,4);this.addAttribute("skinWeight",f.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new sn);var t=this.attributes.position,e=this.morphAttributes.position;if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(var r=0,n=e.length;r<n;r++){var i=e[r];ni.setFromBufferAttribute(i),this.boundingBox.expandByPoint(ni.min),this.boundingBox.expandByPoint(ni.max)}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new hn);var t=this.attributes.position,e=this.morphAttributes.position;if(t){var r=this.boundingSphere.center;if(ni.setFromBufferAttribute(t),e)for(var n=0,i=e.length;n<i;n++){var a=e[n];ii.setFromBufferAttribute(a),ni.expandByPoint(ii.min),ni.expandByPoint(ii.max)}ni.getCenter(r);var o=0;for(n=0,i=t.count;n<i;n++)ai.fromBufferAttribute(t,n),o=Math.max(o,r.distanceToSquared(ai));if(e)for(n=0,i=e.length;n<i;n++)for(var s=0,c=(a=e[n]).count;s<c;s++)ai.fromBufferAttribute(a,s),o=Math.max(o,r.distanceToSquared(ai));this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes;if(e.position){var r=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new Hn(new Float32Array(r.length),3));else for(var n=e.normal.array,i=0,a=n.length;i<a;i++)n[i]=0;var o,s,c,l=e.normal.array,h=new ur,u=new ur,p=new ur,d=new ur,f=new ur;if(t){var m=t.array;for(i=0,a=t.count;i<a;i+=3)o=3*m[i+0],s=3*m[i+1],c=3*m[i+2],h.fromArray(r,o),u.fromArray(r,s),p.fromArray(r,c),d.subVectors(p,u),f.subVectors(h,u),d.cross(f),l[o]+=d.x,l[o+1]+=d.y,l[o+2]+=d.z,l[s]+=d.x,l[s+1]+=d.y,l[s+2]+=d.z,l[c]+=d.x,l[c+1]+=d.y,l[c+2]+=d.z}else for(i=0,a=r.length;i<a;i+=9)h.fromArray(r,i),u.fromArray(r,i+3),p.fromArray(r,i+6),d.subVectors(p,u),f.subVectors(h,u),d.cross(f),l[i]=d.x,l[i+1]=d.y,l[i+2]=d.z,l[i+3]=d.x,l[i+4]=d.y,l[i+5]=d.z,l[i+6]=d.x,l[i+7]=d.y,l[i+8]=d.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var r=this.attributes;for(var n in r)if(void 0!==t.attributes[n])for(var i=r[n].array,a=t.attributes[n],o=a.array,s=a.itemSize*e,c=Math.min(o.length,i.length-s),l=0,h=s;l<c;l++,h++)i[h]=o[l];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t)},normalizeNormals:function(){for(var t=this.attributes.normal,e=0,r=t.count;e<r;e++)ai.x=t.getX(e),ai.y=t.getY(e),ai.z=t.getZ(e),ai.normalize(),t.setXYZ(e,ai.x,ai.y,ai.z)},toNonIndexed:function(){function t(t,e){for(var r=t.array,n=t.itemSize,i=new r.constructor(e.length*n),a=0,o=0,s=0,c=e.length;s<c;s++){a=e[s]*n;for(var l=0;l<n;l++)i[o++]=r[a++]}return new Hn(i,n)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new oi,r=this.index.array,n=this.attributes;for(var i in n){var a=t(n[i],r);e.addAttribute(i,a)}var o=this.morphAttributes;for(i in o){for(var s=[],c=o[i],l=0,h=c.length;l<h;l++){a=t(c[l],r);s.push(a)}e.morphAttributes[i]=s}for(var u=this.groups,p=(l=0,u.length);l<p;l++){var d=u[l];e.addGroup(d.start,d.count,d.materialIndex)}return e},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(var r in e)void 0!==e[r]&&(t[r]=e[r]);return t}t.data={attributes:{}};var n=this.index;null!==n&&(t.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});var i=this.attributes;for(var r in i){var a=(p=i[r]).toJSON();""!==p.name&&(a.name=p.name),t.data.attributes[r]=a}var o={},s=!1;for(var r in this.morphAttributes){for(var c=this.morphAttributes[r],l=[],h=0,u=c.length;h<u;h++){var p;a=(p=c[h]).toJSON();""!==p.name&&(a.name=p.name),l.push(a)}l.length>0&&(o[r]=l,s=!0)}s&&(t.data.morphAttributes=o);var d=this.groups;d.length>0&&(t.data.groups=JSON.parse(JSON.stringify(d)));var f=this.boundingSphere;return null!==f&&(t.data.boundingSphere={center:f.center.toArray(),radius:f.radius}),t},clone:function(){return(new oi).copy(this)},copy:function(t){var e,r,n;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var i=t.index;null!==i&&this.setIndex(i.clone());var a=t.attributes;for(e in a){var o=a[e];this.addAttribute(e,o.clone())}var s=t.morphAttributes;for(e in s){var c=[],l=s[e];for(r=0,n=l.length;r<n;r++)c.push(l[r].clone());this.morphAttributes[e]=c}var h=t.groups;for(r=0,n=h.length;r<n;r++){var u=h[r];this.addGroup(u.start,u.count,u.materialIndex)}var p=t.boundingBox;null!==p&&(this.boundingBox=p.clone());var d=t.boundingSphere;return null!==d&&(this.boundingSphere=d.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var si=new Lr,ci=new yn,li=new hn,hi=new ur,ui=new ur,pi=new ur,di=new ur,fi=new ur,mi=new ur,vi=new ur,gi=new ur,yi=new ur,xi=new sr,bi=new sr,wi=new sr,_i=new ur,Mi=new ur;function Si(t,e){qr.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new oi,this.material=void 0!==e?e:new Un({color:16777215*Math.random()}),this.drawMode=Ae,this.updateMorphTargets()}function Ti(t,e,r,n,i,a,o,s){if(null===(e.side===m?n.intersectTriangle(o,a,i,!0,s):n.intersectTriangle(i,a,o,e.side!==v,s)))return null;Mi.copy(s),Mi.applyMatrix4(t.matrixWorld);var c=r.ray.origin.distanceTo(Mi);return c<r.near||c>r.far?null:{distance:c,point:Mi.clone(),object:t}}function Ei(t,e,r,n,i,a,o,s,c,l,h){hi.fromBufferAttribute(i,c),ui.fromBufferAttribute(i,l),pi.fromBufferAttribute(i,h);var u=t.morphTargetInfluences;if(e.morphTargets&&a&&u){vi.set(0,0,0),gi.set(0,0,0),yi.set(0,0,0);for(var p=0,d=a.length;p<d;p++){var f=u[p],m=a[p];0!==f&&(di.fromBufferAttribute(m,c),fi.fromBufferAttribute(m,l),mi.fromBufferAttribute(m,h),vi.addScaledVector(di.sub(hi),f),gi.addScaledVector(fi.sub(ui),f),yi.addScaledVector(mi.sub(pi),f))}hi.add(vi),ui.add(gi),pi.add(yi)}var v=Ti(t,e,r,n,hi,ui,pi,_i);if(v){o&&(xi.fromBufferAttribute(o,c),bi.fromBufferAttribute(o,l),wi.fromBufferAttribute(o,h),v.uv=Rn.getUV(_i,hi,ui,pi,xi,bi,wi,new sr)),s&&(xi.fromBufferAttribute(s,c),bi.fromBufferAttribute(s,l),wi.fromBufferAttribute(s,h),v.uv2=Rn.getUV(_i,hi,ui,pi,xi,bi,wi,new sr));var g=new zn(c,l,h);Rn.getNormal(hi,ui,pi,g.normal),v.face=g}return v}Si.prototype=Object.assign(Object.create(qr.prototype),{constructor:Si,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return qr.prototype.copy.call(this,t),this.drawMode=t.drawMode,void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t,e,r,n=this.geometry;if(n.isBufferGeometry){var i=n.morphAttributes,a=Object.keys(i);if(a.length>0){var o=i[a[0]];if(void 0!==o)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=o.length;t<e;t++)r=o[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}else{var s=n.morphTargets;void 0!==s&&s.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){var r,n=this.geometry,i=this.material,a=this.matrixWorld;if(void 0!==i&&(null===n.boundingSphere&&n.computeBoundingSphere(),li.copy(n.boundingSphere),li.applyMatrix4(a),!1!==t.ray.intersectsSphere(li)&&(si.getInverse(a),ci.copy(t.ray).applyMatrix4(si),null===n.boundingBox||!1!==ci.intersectsBox(n.boundingBox))))if(n.isBufferGeometry){var o,s,c,l,h,u,p,d,f,m=n.index,v=n.attributes.position,g=n.morphAttributes.position,y=n.attributes.uv,x=n.attributes.uv2,b=n.groups,w=n.drawRange;if(null!==m)if(Array.isArray(i))for(l=0,u=b.length;l<u;l++)for(f=i[(d=b[l]).materialIndex],h=Math.max(d.start,w.start),p=Math.min(d.start+d.count,w.start+w.count);h<p;h+=3)o=m.getX(h),s=m.getX(h+1),c=m.getX(h+2),(r=Ei(this,f,t,ci,v,g,y,x,o,s,c))&&(r.faceIndex=Math.floor(h/3),r.face.materialIndex=d.materialIndex,e.push(r));else for(l=Math.max(0,w.start),u=Math.min(m.count,w.start+w.count);l<u;l+=3)o=m.getX(l),s=m.getX(l+1),c=m.getX(l+2),(r=Ei(this,i,t,ci,v,g,y,x,o,s,c))&&(r.faceIndex=Math.floor(l/3),e.push(r));else if(void 0!==v)if(Array.isArray(i))for(l=0,u=b.length;l<u;l++)for(f=i[(d=b[l]).materialIndex],h=Math.max(d.start,w.start),p=Math.min(d.start+d.count,w.start+w.count);h<p;h+=3)(r=Ei(this,f,t,ci,v,g,y,x,o=h,s=h+1,c=h+2))&&(r.faceIndex=Math.floor(h/3),r.face.materialIndex=d.materialIndex,e.push(r));else for(l=Math.max(0,w.start),u=Math.min(v.count,w.start+w.count);l<u;l+=3)(r=Ei(this,i,t,ci,v,g,y,x,o=l,s=l+1,c=l+2))&&(r.faceIndex=Math.floor(l/3),e.push(r))}else if(n.isGeometry){var _,M,S,T,E=Array.isArray(i),A=n.vertices,L=n.faces,R=n.faceVertexUvs[0];R.length>0&&(T=R);for(var C=0,P=L.length;C<P;C++){var O=L[C],D=E?i[O.materialIndex]:i;if(void 0!==D&&(_=A[O.a],M=A[O.b],S=A[O.c],r=Ti(this,D,t,ci,_,M,S,_i))){if(T&&T[C]){var N=T[C];xi.copy(N[0]),bi.copy(N[1]),wi.copy(N[2]),r.uv=Rn.getUV(_i,_,M,S,xi,bi,wi,new sr)}r.face=O,r.faceIndex=C,e.push(r)}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var Ai=0,Li=new Lr,Ri=new qr,Ci=new ur;function Pi(){Object.defineProperty(this,"id",{value:Ai+=2}),this.uuid=or.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function Oi(t,e,r,n,i,a){Pi.call(this),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:r,widthSegments:n,heightSegments:i,depthSegments:a},this.fromBufferGeometry(new Di(t,e,r,n,i,a)),this.mergeVertices()}function Di(t,e,r,n,i,a){oi.call(this),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:r,widthSegments:n,heightSegments:i,depthSegments:a};var o=this;t=t||1,e=e||1,r=r||1,n=Math.floor(n)||1,i=Math.floor(i)||1,a=Math.floor(a)||1;var s=[],c=[],l=[],h=[],u=0,p=0;function d(t,e,r,n,i,a,d,f,m,v,g){var y,x,b=a/m,w=d/v,_=a/2,M=d/2,S=f/2,T=m+1,E=v+1,A=0,L=0,R=new ur;for(x=0;x<E;x++){var C=x*w-M;for(y=0;y<T;y++){var P=y*b-_;R[t]=P*n,R[e]=C*i,R[r]=S,c.push(R.x,R.y,R.z),R[t]=0,R[e]=0,R[r]=f>0?1:-1,l.push(R.x,R.y,R.z),h.push(y/m),h.push(1-x/v),A+=1}}for(x=0;x<v;x++)for(y=0;y<m;y++){var O=u+y+T*x,D=u+y+T*(x+1),N=u+(y+1)+T*(x+1),I=u+(y+1)+T*x;s.push(O,D,I),s.push(D,N,I),L+=6}o.addGroup(p,L,g),p+=L,u+=A}d("z","y","x",-1,-1,r,e,t,a,i,0),d("z","y","x",1,-1,r,e,-t,a,i,1),d("x","z","y",1,1,t,r,e,n,a,2),d("x","z","y",1,-1,t,r,-e,n,a,3),d("x","y","z",1,-1,t,e,r,n,i,4),d("x","y","z",-1,-1,t,e,-r,n,i,5),this.setIndex(s),this.addAttribute("position",new Zn(c,3)),this.addAttribute("normal",new Zn(l,3)),this.addAttribute("uv",new Zn(h,2))}function Ni(t){var e={};for(var r in t)for(var n in e[r]={},t[r]){var i=t[r][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?e[r][n]=i.clone():Array.isArray(i)?e[r][n]=i.slice():e[r][n]=i}return e}function Ii(t){for(var e={},r=0;r<t.length;r++){var n=Ni(t[r]);for(var i in n)e[i]=n[i]}return e}Pi.prototype=Object.assign(Object.create(t.prototype),{constructor:Pi,isGeometry:!0,applyMatrix:function(t){for(var e=(new fr).getNormalMatrix(t),r=0,n=this.vertices.length;r<n;r++){this.vertices[r].applyMatrix4(t)}for(r=0,n=this.faces.length;r<n;r++){var i=this.faces[r];i.normal.applyMatrix3(e).normalize();for(var a=0,o=i.vertexNormals.length;a<o;a++)i.vertexNormals[a].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return Li.makeRotationX(t),this.applyMatrix(Li),this},rotateY:function(t){return Li.makeRotationY(t),this.applyMatrix(Li),this},rotateZ:function(t){return Li.makeRotationZ(t),this.applyMatrix(Li),this},translate:function(t,e,r){return Li.makeTranslation(t,e,r),this.applyMatrix(Li),this},scale:function(t,e,r){return Li.makeScale(t,e,r),this.applyMatrix(Li),this},lookAt:function(t){return Ri.lookAt(t),Ri.updateMatrix(),this.applyMatrix(Ri.matrix),this},fromBufferGeometry:function(t){var e=this,r=null!==t.index?t.index.array:void 0,n=t.attributes,i=n.position.array,a=void 0!==n.normal?n.normal.array:void 0,o=void 0!==n.color?n.color.array:void 0,s=void 0!==n.uv?n.uv.array:void 0,c=void 0!==n.uv2?n.uv2.array:void 0;void 0!==c&&(this.faceVertexUvs[1]=[]);for(var l=0;l<i.length;l+=3)e.vertices.push((new ur).fromArray(i,l)),void 0!==o&&e.colors.push((new Dn).fromArray(o,l));function h(t,r,n,i){var l=void 0===o?[]:[e.colors[t].clone(),e.colors[r].clone(),e.colors[n].clone()],h=new zn(t,r,n,void 0===a?[]:[(new ur).fromArray(a,3*t),(new ur).fromArray(a,3*r),(new ur).fromArray(a,3*n)],l,i);e.faces.push(h),void 0!==s&&e.faceVertexUvs[0].push([(new sr).fromArray(s,2*t),(new sr).fromArray(s,2*r),(new sr).fromArray(s,2*n)]),void 0!==c&&e.faceVertexUvs[1].push([(new sr).fromArray(c,2*t),(new sr).fromArray(c,2*r),(new sr).fromArray(c,2*n)])}var u=t.groups;if(u.length>0)for(l=0;l<u.length;l++)for(var p=u[l],d=p.start,f=d,m=d+p.count;f<m;f+=3)void 0!==r?h(r[f],r[f+1],r[f+2],p.materialIndex):h(f,f+1,f+2,p.materialIndex);else if(void 0!==r)for(l=0;l<r.length;l+=3)h(r[l],r[l+1],r[l+2]);else for(l=0;l<i.length/3;l+=3)h(l,l+1,l+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ci).negate(),this.translate(Ci.x,Ci.y,Ci.z),this},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,r=0===e?1:1/e,n=new Lr;return n.set(r,0,0,-r*t.x,0,r,0,-r*t.y,0,0,r,-r*t.z,0,0,0,1),this.applyMatrix(n),this},computeFaceNormals:function(){for(var t=new ur,e=new ur,r=0,n=this.faces.length;r<n;r++){var i=this.faces[r],a=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];t.subVectors(s,o),e.subVectors(a,o),t.cross(e),t.normalize(),i.normal.copy(t)}},computeVertexNormals:function(t){var e,r,n,i,a,o;for(void 0===t&&(t=!0),o=new Array(this.vertices.length),e=0,r=this.vertices.length;e<r;e++)o[e]=new ur;if(t){var s,c,l,h=new ur,u=new ur;for(n=0,i=this.faces.length;n<i;n++)a=this.faces[n],s=this.vertices[a.a],c=this.vertices[a.b],l=this.vertices[a.c],h.subVectors(l,c),u.subVectors(s,c),h.cross(u),o[a.a].add(h),o[a.b].add(h),o[a.c].add(h)}else for(this.computeFaceNormals(),n=0,i=this.faces.length;n<i;n++)o[(a=this.faces[n]).a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal);for(e=0,r=this.vertices.length;e<r;e++)o[e].normalize();for(n=0,i=this.faces.length;n<i;n++){var p=(a=this.faces[n]).vertexNormals;3===p.length?(p[0].copy(o[a.a]),p[1].copy(o[a.b]),p[2].copy(o[a.c])):(p[0]=o[a.a].clone(),p[1]=o[a.b].clone(),p[2]=o[a.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,r;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){var n=(r=this.faces[t]).vertexNormals;3===n.length?(n[0].copy(r.normal),n[1].copy(r.normal),n[2].copy(r.normal)):(n[0]=r.normal.clone(),n[1]=r.normal.clone(),n[2]=r.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,r,n,i;for(r=0,n=this.faces.length;r<n;r++)for((i=this.faces[r]).__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),t=0,e=i.vertexNormals.length;t<e;t++)i.__originalVertexNormals[t]?i.__originalVertexNormals[t].copy(i.vertexNormals[t]):i.__originalVertexNormals[t]=i.vertexNormals[t].clone();var a=new Pi;for(a.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var o=this.morphNormals[t].faceNormals,s=this.morphNormals[t].vertexNormals;for(r=0,n=this.faces.length;r<n;r++)c=new ur,l={a:new ur,b:new ur,c:new ur},o.push(c),s.push(l)}var c,l,h=this.morphNormals[t];for(a.vertices=this.morphTargets[t].vertices,a.computeFaceNormals(),a.computeVertexNormals(),r=0,n=this.faces.length;r<n;r++)i=this.faces[r],c=h.faceNormals[r],l=h.vertexNormals[r],c.copy(i.normal),l.a.copy(i.vertexNormals[0]),l.b.copy(i.vertexNormals[1]),l.c.copy(i.vertexNormals[2])}for(r=0,n=this.faces.length;r<n;r++)(i=this.faces[r]).normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new sn),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new hn),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,r){if(t&&t.isGeometry){var n,i=this.vertices.length,a=this.vertices,o=t.vertices,s=this.faces,c=t.faces,l=this.colors,h=t.colors;void 0===r&&(r=0),void 0!==e&&(n=(new fr).getNormalMatrix(e));for(var u=0,p=o.length;u<p;u++){var d=o[u].clone();void 0!==e&&d.applyMatrix4(e),a.push(d)}for(u=0,p=h.length;u<p;u++)l.push(h[u].clone());for(u=0,p=c.length;u<p;u++){var f,m,v,g=c[u],y=g.vertexNormals,x=g.vertexColors;(f=new zn(g.a+i,g.b+i,g.c+i)).normal.copy(g.normal),void 0!==n&&f.normal.applyMatrix3(n).normalize();for(var b=0,w=y.length;b<w;b++)m=y[b].clone(),void 0!==n&&m.applyMatrix3(n).normalize(),f.vertexNormals.push(m);f.color.copy(g.color);for(b=0,w=x.length;b<w;b++)v=x[b],f.vertexColors.push(v.clone());f.materialIndex=g.materialIndex+r,s.push(f)}for(u=0,p=t.faceVertexUvs.length;u<p;u++){var _=t.faceVertexUvs[u];void 0===this.faceVertexUvs[u]&&(this.faceVertexUvs[u]=[]);for(b=0,w=_.length;b<w;b++){for(var M=_[b],S=[],T=0,E=M.length;T<E;T++)S.push(M[T].clone());this.faceVertexUvs[u].push(S)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t)},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(){var t,e,r,n,i,a,o,s,c={},l=[],h=[],u=Math.pow(10,4);for(r=0,n=this.vertices.length;r<n;r++)t=this.vertices[r],void 0===c[e=Math.round(t.x*u)+"_"+Math.round(t.y*u)+"_"+Math.round(t.z*u)]?(c[e]=r,l.push(this.vertices[r]),h[r]=l.length-1):h[r]=h[c[e]];var p=[];for(r=0,n=this.faces.length;r<n;r++){(i=this.faces[r]).a=h[i.a],i.b=h[i.b],i.c=h[i.c],a=[i.a,i.b,i.c];for(var d=0;d<3;d++)if(a[d]===a[(d+1)%3]){p.push(r);break}}for(r=p.length-1;r>=0;r--){var f=p[r];for(this.faces.splice(f,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(f,1)}var m=this.vertices.length-l.length;return this.vertices=l,m},setFromPoints:function(t){this.vertices=[];for(var e=0,r=t.length;e<r;e++){var n=t[e];this.vertices.push(new ur(n.x,n.y,n.z||0))}return this},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,r=0;r<e;r++)t[r]._id=r;t.sort(function(t,e){return t.materialIndex-e.materialIndex});var n,i,a=this.faceVertexUvs[0],o=this.faceVertexUvs[1];a&&a.length===e&&(n=[]),o&&o.length===e&&(i=[]);for(r=0;r<e;r++){var s=t[r]._id;n&&n.push(a[s]),i&&i.push(o[s])}n&&(this.faceVertexUvs[0]=n),i&&(this.faceVertexUvs[1]=i)},toJSON:function(){var t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var r in e)void 0!==e[r]&&(t[r]=e[r]);return t}for(var n=[],i=0;i<this.vertices.length;i++){var a=this.vertices[i];n.push(a.x,a.y,a.z)}var o=[],s=[],c={},l=[],h={},u=[],p={};for(i=0;i<this.faces.length;i++){var d=this.faces[i],f=void 0!==this.faceVertexUvs[0][i],m=d.normal.length()>0,v=d.vertexNormals.length>0,g=1!==d.color.r||1!==d.color.g||1!==d.color.b,y=d.vertexColors.length>0,x=0;if(x=M(x,0,0),x=M(x,1,!0),x=M(x,2,!1),x=M(x,3,f),x=M(x,4,m),x=M(x,5,v),x=M(x,6,g),x=M(x,7,y),o.push(x),o.push(d.a,d.b,d.c),o.push(d.materialIndex),f){var b=this.faceVertexUvs[0][i];o.push(E(b[0]),E(b[1]),E(b[2]))}if(m&&o.push(S(d.normal)),v){var w=d.vertexNormals;o.push(S(w[0]),S(w[1]),S(w[2]))}if(g&&o.push(T(d.color)),y){var _=d.vertexColors;o.push(T(_[0]),T(_[1]),T(_[2]))}}function M(t,e,r){return r?t|1<<e:t&~(1<<e)}function S(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==c[e]?c[e]:(c[e]=s.length/3,s.push(t.x,t.y,t.z),c[e])}function T(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==h[e]?h[e]:(h[e]=l.length,l.push(t.getHex()),h[e])}function E(t){var e=t.x.toString()+t.y.toString();return void 0!==p[e]?p[e]:(p[e]=u.length/2,u.push(t.x,t.y),p[e])}return t.data={},t.data.vertices=n,t.data.normals=s,l.length>0&&(t.data.colors=l),u.length>0&&(t.data.uvs=[u]),t.data.faces=o,t},clone:function(){return(new Pi).copy(this)},copy:function(t){var e,r,n,i,a,o;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var s=t.vertices;for(e=0,r=s.length;e<r;e++)this.vertices.push(s[e].clone());var c=t.colors;for(e=0,r=c.length;e<r;e++)this.colors.push(c[e].clone());var l=t.faces;for(e=0,r=l.length;e<r;e++)this.faces.push(l[e].clone());for(e=0,r=t.faceVertexUvs.length;e<r;e++){var h=t.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),n=0,i=h.length;n<i;n++){var u=h[n],p=[];for(a=0,o=u.length;a<o;a++){var d=u[a];p.push(d.clone())}this.faceVertexUvs[e].push(p)}}var f=t.morphTargets;for(e=0,r=f.length;e<r;e++){var m={};if(m.name=f[e].name,void 0!==f[e].vertices)for(m.vertices=[],n=0,i=f[e].vertices.length;n<i;n++)m.vertices.push(f[e].vertices[n].clone());if(void 0!==f[e].normals)for(m.normals=[],n=0,i=f[e].normals.length;n<i;n++)m.normals.push(f[e].normals[n].clone());this.morphTargets.push(m)}var v=t.morphNormals;for(e=0,r=v.length;e<r;e++){var g={};if(void 0!==v[e].vertexNormals)for(g.vertexNormals=[],n=0,i=v[e].vertexNormals.length;n<i;n++){var y=v[e].vertexNormals[n],x={};x.a=y.a.clone(),x.b=y.b.clone(),x.c=y.c.clone(),g.vertexNormals.push(x)}if(void 0!==v[e].faceNormals)for(g.faceNormals=[],n=0,i=v[e].faceNormals.length;n<i;n++)g.faceNormals.push(v[e].faceNormals[n].clone());this.morphNormals.push(g)}var b=t.skinWeights;for(e=0,r=b.length;e<r;e++)this.skinWeights.push(b[e].clone());var w=t.skinIndices;for(e=0,r=w.length;e<r;e++)this.skinIndices.push(w[e].clone());var _=t.lineDistances;for(e=0,r=_.length;e<r;e++)this.lineDistances.push(_[e]);var M=t.boundingBox;null!==M&&(this.boundingBox=M.clone());var S=t.boundingSphere;return null!==S&&(this.boundingSphere=S.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Oi.prototype=Object.create(Pi.prototype),Oi.prototype.constructor=Oi,Di.prototype=Object.create(oi.prototype),Di.prototype.constructor=Di;var Bi={clone:Ni,merge:Ii};exports.UniformsUtils=Bi;var zi="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",Fi="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";function Gi(t){Gn.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=zi,this.fragmentShader=Fi,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function Ui(){qr.call(this),this.type="Camera",this.matrixWorldInverse=new Lr,this.projectionMatrix=new Lr,this.projectionMatrixInverse=new Lr}function Hi(t,e,r,n){Ui.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==r?r:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Gi.prototype=Object.create(Gn.prototype),Gi.prototype.constructor=Gi,Gi.prototype.isShaderMaterial=!0,Gi.prototype.copy=function(t){return Gn.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Ni(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this},Gi.prototype.toJSON=function(t){var e=Gn.prototype.toJSON.call(this,t);for(var r in e.uniforms={},this.uniforms){var n=this.uniforms[r].value;n&&n.isTexture?e.uniforms[r]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[r]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[r]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[r]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[r]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[r]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[r]={type:"m4",value:n.toArray()}:e.uniforms[r]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;var i={};for(var a in this.extensions)!0===this.extensions[a]&&(i[a]=!0);return Object.keys(i).length>0&&(e.extensions=i),e},Ui.prototype=Object.assign(Object.create(qr.prototype),{constructor:Ui,isCamera:!0,copy:function(t,e){return qr.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new ur),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){qr.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),Hi.prototype=Object.assign(Object.create(Ui.prototype),{constructor:Hi,isPerspectiveCamera:!0,copy:function(t,e){return Ui.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){var e=.5*this.getFilmHeight()/t;this.fov=2*or.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(.5*or.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*or.RAD2DEG*Math.atan(Math.tan(.5*or.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,r,n,i,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(.5*or.DEG2RAD*this.fov)/this.zoom,r=2*e,n=this.aspect*r,i=-.5*n,a=this.view;if(null!==this.view&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;i+=a.offsetX*n/o,e-=a.offsetY*r/s,n*=a.width/o,r*=a.height/s}var c=this.filmOffset;0!==c&&(i+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+n,e,e-r,t,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=qr.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});var Vi=90,ji=1;function ki(t,e,r,n){qr.call(this),this.type="CubeCamera";var i=new Hi(Vi,ji,t,e);i.up.set(0,-1,0),i.lookAt(new ur(1,0,0)),this.add(i);var a=new Hi(Vi,ji,t,e);a.up.set(0,-1,0),a.lookAt(new ur(-1,0,0)),this.add(a);var o=new Hi(Vi,ji,t,e);o.up.set(0,0,1),o.lookAt(new ur(0,1,0)),this.add(o);var s=new Hi(Vi,ji,t,e);s.up.set(0,0,-1),s.lookAt(new ur(0,-1,0)),this.add(s);var c=new Hi(Vi,ji,t,e);c.up.set(0,-1,0),c.lookAt(new ur(0,0,1)),this.add(c);var l=new Hi(Vi,ji,t,e);l.up.set(0,-1,0),l.lookAt(new ur(0,0,-1)),this.add(l),n=n||{format:Ht,magFilter:Mt,minFilter:Mt},this.renderTarget=new Wi(r,r,n),this.renderTarget.texture.name="CubeCamera",this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();var r=t.getRenderTarget(),n=this.renderTarget,h=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,a),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,c),n.texture.generateMipmaps=h,t.setRenderTarget(n,5),t.render(e,l),t.setRenderTarget(r)},this.clear=function(t,e,r,n){for(var i=t.getRenderTarget(),a=this.renderTarget,o=0;o<6;o++)t.setRenderTarget(a,o),t.clear(e,r,n);t.setRenderTarget(i)}}function Wi(t,e,r){xr.call(this,t,e,r)}function qi(t,e,r,n,i,a,o,s,c,l,h,u){gr.call(this,null,a,o,s,c,l,n,i,h,u),this.image={data:t,width:e,height:r},this.magFilter=void 0!==c?c:yt,this.minFilter=void 0!==l?l:yt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}ki.prototype=Object.create(qr.prototype),ki.prototype.constructor=ki,Wi.prototype=Object.create(xr.prototype),Wi.prototype.constructor=Wi,Wi.prototype.isWebGLRenderTargetCube=!0,Wi.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=e.format,this.texture.encoding=e.encoding;var r=new Xr,n={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","\tvWorldDirection = transformDirection( position, modelMatrix );","\t#include <begin_vertex>","\t#include <project_vertex>","}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#define RECIPROCAL_PI 0.31830988618","#define RECIPROCAL_PI2 0.15915494","void main() {","\tvec3 direction = normalize( vWorldDirection );","\tvec2 sampleUV;","\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;","\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","\tgl_FragColor = texture2D( tEquirect, sampleUV );","}"].join("\n")},i=new Gi({type:"CubemapFromEquirect",uniforms:Ni(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:m,blending:_});i.uniforms.tEquirect.value=e;var a=new Si(new Di(5,5,5),i);r.add(a);var o=new ki(1,10,1);return o.renderTarget=this,o.renderTarget.texture.name="CubeCameraTexture",o.update(t,r),a.geometry.dispose(),a.material.dispose(),this},qi.prototype=Object.create(gr.prototype),qi.prototype.constructor=qi,qi.prototype.isDataTexture=!0;var Xi=new ur,Yi=new ur,Zi=new fr;function Ji(t,e){this.normal=void 0!==t?t:new ur(1,0,0),this.constant=void 0!==e?e:0}Object.assign(Ji.prototype,{isPlane:!0,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,r,n){return this.normal.set(t,e,r),this.constant=n,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(t,e,r){var n=Xi.subVectors(r,e).cross(Yi.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(n,t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new ur),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new ur);var r=t.delta(Xi),n=this.normal.dot(r);if(0===n)return 0===this.distanceToPoint(t.start)?e.copy(t.start):void 0;var i=-(t.start.dot(this.normal)+this.constant)/n;return i<0||i>1?void 0:e.copy(r).multiplyScalar(i).add(t.start)},intersectsLine:function(t){var e=this.distanceToPoint(t.start),r=this.distanceToPoint(t.end);return e<0&&r>0||r<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new ur),t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(t,e){var r=e||Zi.getNormalMatrix(t),n=this.coplanarPoint(Xi).applyMatrix4(t),i=this.normal.applyMatrix3(r).normalize();return this.constant=-n.dot(i),this},translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}});var Qi=new hn,Ki=new ur;function $i(t,e,r,n,i,a){this.planes=[void 0!==t?t:new Ji,void 0!==e?e:new Ji,void 0!==r?r:new Ji,void 0!==n?n:new Ji,void 0!==i?i:new Ji,void 0!==a?a:new Ji]}Object.assign($i.prototype,{set:function(t,e,r,n,i,a){var o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(r),o[3].copy(n),o[4].copy(i),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,r=0;r<6;r++)e[r].copy(t.planes[r]);return this},setFromMatrix:function(t){var e=this.planes,r=t.elements,n=r[0],i=r[1],a=r[2],o=r[3],s=r[4],c=r[5],l=r[6],h=r[7],u=r[8],p=r[9],d=r[10],f=r[11],m=r[12],v=r[13],g=r[14],y=r[15];return e[0].setComponents(o-n,h-s,f-u,y-m).normalize(),e[1].setComponents(o+n,h+s,f+u,y+m).normalize(),e[2].setComponents(o+i,h+c,f+p,y+v).normalize(),e[3].setComponents(o-i,h-c,f-p,y-v).normalize(),e[4].setComponents(o-a,h-l,f-d,y-g).normalize(),e[5].setComponents(o+a,h+l,f+d,y+g).normalize(),this},intersectsObject:function(t){var e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Qi.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Qi)},intersectsSprite:function(t){return Qi.center.set(0,0,0),Qi.radius=.7071067811865476,Qi.applyMatrix4(t.matrixWorld),this.intersectsSphere(Qi)},intersectsSphere:function(t){for(var e=this.planes,r=t.center,n=-t.radius,i=0;i<6;i++){if(e[i].distanceToPoint(r)<n)return!1}return!0},intersectsBox:function(t){for(var e=this.planes,r=0;r<6;r++){var n=e[r];if(Ki.x=n.normal.x>0?t.max.x:t.min.x,Ki.y=n.normal.y>0?t.max.y:t.min.y,Ki.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(Ki)<0)return!1}return!0},containsPoint:function(t){for(var e=this.planes,r=0;r<6;r++)if(e[r].distanceToPoint(t)<0)return!1;return!0}});var ta="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",ea="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",ra="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",na="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",ia="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",aa="vec3 transformed = vec3( position );",oa="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",sa="vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",ca="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",la="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",ha="#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",ua="#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvarying vec3 vViewPosition;\n#endif",pa="#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif",da="#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",fa="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",ma="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",va="#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",ga="#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}",ya="#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif",xa="vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = normalMatrix * objectTangent;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",ba="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",wa="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif",_a="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",Ma="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",Sa="gl_FragColor = linearToOutputTexel( gl_FragColor );",Ta="\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",Ea="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",Aa="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",La="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",Ra="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",Ca="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",Pa="#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",Oa="#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",Da="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",Na="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",Ia="#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif",Ba="#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif",za="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",Fa="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif",Ga="uniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",Ua="#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",Ha="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",Va="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",ja="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = saturate( clearcoat );\tmaterial.clearcoatRoughness = clamp( clearcoatRoughness, 0.04, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",ka="struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",Wa="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",qa="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",Xa="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",Ya="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",Za="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n#endif",Ja="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",Qa="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif",Ka="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",$a="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",to="#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif",eo="#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif",ro="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",no="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",io="#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif",ao="#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",oo="#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",so="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",co="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\t#ifdef USE_TANGENT\n\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, normalScale, normalMap );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",lo="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec2 normalScale, in sampler2D normalMap ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy *= normalScale;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvec3 NfromST = cross( S, T );\n\t\t\tif( dot( NfromST, N ) > 0.0 ) {\n\t\t\t\tS *= -1.0;\n\t\t\t\tT *= -1.0;\n\t\t\t}\n\t\t#else\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",ho="#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",uo="#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 vTBN = mat3( tangent, bitangent, clearcoatNormal );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = clearcoatNormalScale * mapN.xy;\n\t\tclearcoatNormal = normalize( vTBN * mapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatNormalScale, clearcoatNormalMap );\n\t#endif\n#endif",po="#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",fo="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 encodeHalfRGBA ( vec2 v ) {\n\tvec4 encoded = vec4( 0.0 );\n\tconst vec2 offset = vec2( 1.0 / 255.0, 0.0 );\n\tencoded.xy = vec2( v.x, fract( v.x * 255.0 ) );\n\tencoded.xy = encoded.xy - ( encoded.yy * offset );\n\tencoded.zw = vec2( v.y, fract( v.y * 255.0 ) );\n\tencoded.zw = encoded.zw - ( encoded.ww * offset );\n\treturn encoded;\n}\nvec2 decodeHalfRGBA( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",mo="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",vo="vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;",go="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",yo="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",xo="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",bo="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",wo="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn decodeHalfRGBA( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",_o="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",Mo="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif",So="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}",To="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",Eo="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",Ao="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",Lo="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",Ro="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",Co="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",Po="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",Oo="#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",Do="#ifdef USE_UV\n\tvarying vec2 vUv;\n#endif",No="#ifdef USE_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif",Io="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",Bo="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",zo="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",Fo="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",Go="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif",Uo="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",Ho="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",Vo="uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",jo="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",ko="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}",Wo="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}",qo="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",Xo="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",Yo="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",Zo="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",Jo="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",Qo="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",Ko="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",$o="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",ts="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",es="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",rs="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",ns="#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",is="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",as="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",os="#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",ss="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",cs="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",ls="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",hs="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",us="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",ps="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}",ds="#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",fs="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",ms="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",vs={alphamap_fragment:ta,alphamap_pars_fragment:ea,alphatest_fragment:ra,aomap_fragment:na,aomap_pars_fragment:ia,begin_vertex:aa,beginnormal_vertex:oa,bsdfs:sa,bumpmap_pars_fragment:ca,clipping_planes_fragment:la,clipping_planes_pars_fragment:ha,clipping_planes_pars_vertex:ua,clipping_planes_vertex:pa,color_fragment:da,color_pars_fragment:fa,color_pars_vertex:ma,color_vertex:va,common:ga,cube_uv_reflection_fragment:ya,defaultnormal_vertex:xa,displacementmap_pars_vertex:ba,displacementmap_vertex:wa,emissivemap_fragment:_a,emissivemap_pars_fragment:Ma,encodings_fragment:Sa,encodings_pars_fragment:Ta,envmap_fragment:Ea,envmap_common_pars_fragment:Aa,envmap_pars_fragment:La,envmap_pars_vertex:Ra,envmap_physical_pars_fragment:Ua,envmap_vertex:Ca,fog_vertex:Pa,fog_pars_vertex:Oa,fog_fragment:Da,fog_pars_fragment:Na,gradientmap_pars_fragment:Ia,lightmap_fragment:Ba,lightmap_pars_fragment:za,lights_lambert_vertex:Fa,lights_pars_begin:Ga,lights_phong_fragment:Ha,lights_phong_pars_fragment:Va,lights_physical_fragment:ja,lights_physical_pars_fragment:ka,lights_fragment_begin:Wa,lights_fragment_maps:qa,lights_fragment_end:Xa,logdepthbuf_fragment:Ya,logdepthbuf_pars_fragment:Za,logdepthbuf_pars_vertex:Ja,logdepthbuf_vertex:Qa,map_fragment:Ka,map_pars_fragment:$a,map_particle_fragment:to,map_particle_pars_fragment:eo,metalnessmap_fragment:ro,metalnessmap_pars_fragment:no,morphnormal_vertex:io,morphtarget_pars_vertex:ao,morphtarget_vertex:oo,normal_fragment_begin:so,normal_fragment_maps:co,normalmap_pars_fragment:lo,clearcoat_normal_fragment_begin:ho,clearcoat_normal_fragment_maps:uo,clearcoat_normalmap_pars_fragment:po,packing:fo,premultiplied_alpha_fragment:mo,project_vertex:vo,dithering_fragment:go,dithering_pars_fragment:yo,roughnessmap_fragment:xo,roughnessmap_pars_fragment:bo,shadowmap_pars_fragment:wo,shadowmap_pars_vertex:_o,shadowmap_vertex:Mo,shadowmask_pars_fragment:So,skinbase_vertex:To,skinning_pars_vertex:Eo,skinning_vertex:Ao,skinnormal_vertex:Lo,specularmap_fragment:Ro,specularmap_pars_fragment:Co,tonemapping_fragment:Po,tonemapping_pars_fragment:Oo,uv_pars_fragment:Do,uv_pars_vertex:No,uv_vertex:Io,uv2_pars_fragment:Bo,uv2_pars_vertex:zo,uv2_vertex:Fo,worldpos_vertex:Go,background_frag:Uo,background_vert:Ho,cube_frag:Vo,cube_vert:jo,depth_frag:ko,depth_vert:Wo,distanceRGBA_frag:qo,distanceRGBA_vert:Xo,equirect_frag:Yo,equirect_vert:Zo,linedashed_frag:Jo,linedashed_vert:Qo,meshbasic_frag:Ko,meshbasic_vert:$o,meshlambert_frag:ts,meshlambert_vert:es,meshmatcap_frag:rs,meshmatcap_vert:ns,meshphong_frag:is,meshphong_vert:as,meshphysical_frag:os,meshphysical_vert:ss,normal_frag:cs,normal_vert:ls,points_frag:hs,points_vert:us,shadow_frag:ps,shadow_vert:ds,sprite_frag:fs,sprite_vert:ms};exports.ShaderChunk=vs;var gs={common:{diffuse:{value:new Dn(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new fr},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new sr(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Dn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Dn(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new fr}},sprite:{diffuse:{value:new Dn(15658734)},opacity:{value:1},center:{value:new sr(.5,.5)},rotation:{value:0},map:{value:null},uvTransform:{value:new fr}}};exports.UniformsLib=gs;var ys={basic:{uniforms:Ii([gs.common,gs.specularmap,gs.envmap,gs.aomap,gs.lightmap,gs.fog]),vertexShader:vs.meshbasic_vert,fragmentShader:vs.meshbasic_frag},lambert:{uniforms:Ii([gs.common,gs.specularmap,gs.envmap,gs.aomap,gs.lightmap,gs.emissivemap,gs.fog,gs.lights,{emissive:{value:new Dn(0)}}]),vertexShader:vs.meshlambert_vert,fragmentShader:vs.meshlambert_frag},phong:{uniforms:Ii([gs.common,gs.specularmap,gs.envmap,gs.aomap,gs.lightmap,gs.emissivemap,gs.bumpmap,gs.normalmap,gs.displacementmap,gs.gradientmap,gs.fog,gs.lights,{emissive:{value:new Dn(0)},specular:{value:new Dn(1118481)},shininess:{value:30}}]),vertexShader:vs.meshphong_vert,fragmentShader:vs.meshphong_frag},standard:{uniforms:Ii([gs.common,gs.envmap,gs.aomap,gs.lightmap,gs.emissivemap,gs.bumpmap,gs.normalmap,gs.displacementmap,gs.roughnessmap,gs.metalnessmap,gs.fog,gs.lights,{emissive:{value:new Dn(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:vs.meshphysical_vert,fragmentShader:vs.meshphysical_frag},matcap:{uniforms:Ii([gs.common,gs.bumpmap,gs.normalmap,gs.displacementmap,gs.fog,{matcap:{value:null}}]),vertexShader:vs.meshmatcap_vert,fragmentShader:vs.meshmatcap_frag},points:{uniforms:Ii([gs.points,gs.fog]),vertexShader:vs.points_vert,fragmentShader:vs.points_frag},dashed:{uniforms:Ii([gs.common,gs.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:vs.linedashed_vert,fragmentShader:vs.linedashed_frag},depth:{uniforms:Ii([gs.common,gs.displacementmap]),vertexShader:vs.depth_vert,fragmentShader:vs.depth_frag},normal:{uniforms:Ii([gs.common,gs.bumpmap,gs.normalmap,gs.displacementmap,{opacity:{value:1}}]),vertexShader:vs.normal_vert,fragmentShader:vs.normal_frag},sprite:{uniforms:Ii([gs.sprite,gs.fog]),vertexShader:vs.sprite_vert,fragmentShader:vs.sprite_frag},background:{uniforms:{uvTransform:{value:new fr},t2D:{value:null}},vertexShader:vs.background_vert,fragmentShader:vs.background_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:vs.cube_vert,fragmentShader:vs.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:vs.equirect_vert,fragmentShader:vs.equirect_frag},distanceRGBA:{uniforms:Ii([gs.common,gs.displacementmap,{referencePosition:{value:new ur},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:vs.distanceRGBA_vert,fragmentShader:vs.distanceRGBA_frag},shadow:{uniforms:Ii([gs.lights,gs.fog,{color:{value:new Dn(0)},opacity:{value:1}}]),vertexShader:vs.shadow_vert,fragmentShader:vs.shadow_frag}};function xs(){var t=null,e=!1,r=null;function n(i,a){!1!==e&&(r(i,a),t.requestAnimationFrame(n))}return{start:function(){!0!==e&&null!==r&&(t.requestAnimationFrame(n),e=!0)},stop:function(){e=!1},setAnimationLoop:function(t){r=t},setContext:function(e){t=e}}}function bs(t){var e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(r){r.isInterleavedBufferAttribute&&(r=r.data);var n=e.get(r);n&&(t.deleteBuffer(n.buffer),e.delete(r))},update:function(r,n){r.isInterleavedBufferAttribute&&(r=r.data);var i=e.get(r);void 0===i?e.set(r,function(e,r){var n=e.array,i=e.dynamic?35048:35044,a=t.createBuffer();t.bindBuffer(r,a),t.bufferData(r,n,i),e.onUploadCallback();var o=5126;return n instanceof Float32Array?o=5126:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?o=5123:n instanceof Int16Array?o=5122:n instanceof Uint32Array?o=5125:n instanceof Int32Array?o=5124:n instanceof Int8Array?o=5120:n instanceof Uint8Array&&(o=5121),{buffer:a,type:o,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}(r,n)):i.version<r.version&&(function(e,r,n){var i=r.array,a=r.updateRange;t.bindBuffer(n,e),!1===r.dynamic?t.bufferData(n,i,35044):-1===a.count?t.bufferSubData(n,0,i):0===a.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(t.bufferSubData(n,a.offset*i.BYTES_PER_ELEMENT,i.subarray(a.offset,a.offset+a.count)),a.count=-1)}(i.buffer,r,n),i.version=r.version)}}}function ws(t,e,r,n){Pi.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:r,heightSegments:n},this.fromBufferGeometry(new _s(t,e,r,n)),this.mergeVertices()}function _s(t,e,r,n){oi.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:r,heightSegments:n};var i,a,o=(t=t||1)/2,s=(e=e||1)/2,c=Math.floor(r)||1,l=Math.floor(n)||1,h=c+1,u=l+1,p=t/c,d=e/l,f=[],m=[],v=[],g=[];for(a=0;a<u;a++){var y=a*d-s;for(i=0;i<h;i++){var x=i*p-o;m.push(x,-y,0),v.push(0,0,1),g.push(i/c),g.push(1-a/l)}}for(a=0;a<l;a++)for(i=0;i<c;i++){var b=i+h*a,w=i+h*(a+1),_=i+1+h*(a+1),M=i+1+h*a;f.push(b,w,M),f.push(w,_,M)}this.setIndex(f),this.addAttribute("position",new Zn(m,3)),this.addAttribute("normal",new Zn(v,3)),this.addAttribute("uv",new Zn(g,2))}function Ms(t,e,r,n){var i,a,o=new Dn(0),s=0,c=null,l=0;function h(t,r){e.buffers.color.setClear(t.r,t.g,t.b,r,n)}return{getClearColor:function(){return o},setClearColor:function(t,e){o.set(t),h(o,s=void 0!==e?e:1)},getClearAlpha:function(){return s},setClearAlpha:function(t){h(o,s=t)},render:function(e,n,u,p){var d=n.background,v=t.vr,g=v.getSession&&v.getSession();if(g&&"additive"===g.environmentBlendMode&&(d=null),null===d?(h(o,s),c=null,l=0):d&&d.isColor&&(h(d,1),p=!0,c=null,l=0),(t.autoClear||p)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),d&&(d.isCubeTexture||d.isWebGLRenderTargetCube)){void 0===a&&((a=new Si(new Di(1,1,1),new Gi({type:"BackgroundCubeMaterial",uniforms:Ni(ys.cube.uniforms),vertexShader:ys.cube.vertexShader,fragmentShader:ys.cube.fragmentShader,side:m,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.removeAttribute("normal"),a.geometry.removeAttribute("uv"),a.onBeforeRender=function(t,e,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.tCube.value}}),r.update(a));var y=d.isWebGLRenderTargetCube?d.texture:d;a.material.uniforms.tCube.value=y,a.material.uniforms.tFlip.value=d.isWebGLRenderTargetCube?1:-1,c===d&&l===y.version||(a.material.needsUpdate=!0,c=d,l=y.version),e.unshift(a,a.geometry,a.material,0,0,null)}else d&&d.isTexture&&(void 0===i&&((i=new Si(new _s(2,2),new Gi({type:"BackgroundMaterial",uniforms:Ni(ys.background.uniforms),vertexShader:ys.background.vertexShader,fragmentShader:ys.background.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.removeAttribute("normal"),Object.defineProperty(i.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(i)),i.material.uniforms.t2D.value=d,!0===d.matrixAutoUpdate&&d.updateMatrix(),i.material.uniforms.uvTransform.value.copy(d.matrix),c===d&&l===d.version||(i.material.needsUpdate=!0,c=d,l=d.version),e.unshift(i,i.geometry,i.material,0,0,null))}}}function Ss(t,e,r,n){var i;this.setMode=function(t){i=t},this.render=function(e,n){t.drawArrays(i,e,n),r.update(n,i)},this.renderInstances=function(a,o,s){var c,l;if(n.isWebGL2)c=t,l="drawArraysInstanced";else if(l="drawArraysInstancedANGLE",null===(c=e.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[l](i,o,s,a.maxInstancedCount),r.update(s,i,a.maxInstancedCount)}}function Ts(t,e,r){var n;function i(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext,o=void 0!==r.precision?r.precision:"highp",s=i(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);var c=!0===r.logarithmicDepthBuffer,l=t.getParameter(34930),h=t.getParameter(35660),u=t.getParameter(3379),p=t.getParameter(34076),d=t.getParameter(34921),f=t.getParameter(36347),m=t.getParameter(36348),v=t.getParameter(36349),g=h>0,y=a||!!e.get("OES_texture_float");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==n)return n;var r=e.get("EXT_texture_filter_anisotropic");return n=null!==r?t.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:i,precision:o,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:p,maxAttributes:d,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:v,vertexTextures:g,floatFragmentTextures:y,floatVertexTextures:g&&y,maxSamples:a?t.getParameter(36183):0}}function Es(){var t=this,e=null,r=0,n=!1,i=!1,a=new Ji,o=new fr,s={value:null,needsUpdate:!1};function c(){s.value!==e&&(s.value=e,s.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0}function l(e,r,n,i){var c=null!==e?e.length:0,l=null;if(0!==c){if(l=s.value,!0!==i||null===l){var h=n+4*c,u=r.matrixWorldInverse;o.getNormalMatrix(u),(null===l||l.length<h)&&(l=new Float32Array(h));for(var p=0,d=n;p!==c;++p,d+=4)a.copy(e[p]).applyMatrix4(u,o),a.normal.toArray(l,d),l[d+3]=a.constant}s.value=l,s.needsUpdate=!0}return t.numPlanes=c,l}this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(t,i,a){var o=0!==t.length||i||0!==r||n;return n=i,e=l(t,a,0),r=t.length,o},this.beginShadows=function(){i=!0,l(null)},this.endShadows=function(){i=!1,c()},this.setState=function(t,a,o,h,u,p){if(!n||null===t||0===t.length||i&&!o)i?l(null):c();else{var d=i?0:r,f=4*d,m=u.clippingState||null;s.value=m,m=l(t,h,f,p);for(var v=0;v!==f;++v)m[v]=e[v];u.clippingState=m,this.numIntersection=a?this.numPlanes:0,this.numPlanes+=d}}}function As(t){var e={};return{get:function(r){if(void 0!==e[r])return e[r];var n;switch(r){case"WEBGL_depth_texture":n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=t.getExtension(r)}return null===n&&console.warn("THREE.WebGLRenderer: "+r+" extension not supported."),e[r]=n,n}}}function Ls(t,e,r){var n=new WeakMap,i=new WeakMap;function a(t){var o=t.target,s=n.get(o);for(var c in null!==s.index&&e.remove(s.index),s.attributes)e.remove(s.attributes[c]);o.removeEventListener("dispose",a),n.delete(o);var l=i.get(s);l&&(e.remove(l),i.delete(s)),r.memory.geometries--}function o(t){var r=[],n=t.index,a=t.attributes.position,o=0;if(null!==n){var s=n.array;o=n.version;for(var c=0,l=s.length;c<l;c+=3){var h=s[c+0],u=s[c+1],p=s[c+2];r.push(h,u,u,p,p,h)}}else{s=a.array;o=a.version;for(c=0,l=s.length/3-1;c<l;c+=3){h=c+0,u=c+1,p=c+2;r.push(h,u,u,p,p,h)}}var d=new(Kn(r)>65535?Yn:qn)(r,1);d.version=o,e.update(d,34963);var f=i.get(t);f&&e.remove(f),i.set(t,d)}return{get:function(t,e){var i=n.get(e);return i||(e.addEventListener("dispose",a),e.isBufferGeometry?i=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new oi).setFromObject(t)),i=e._bufferGeometry),n.set(e,i),r.memory.geometries++,i)},update:function(t){var r=t.index,n=t.attributes;for(var i in null!==r&&e.update(r,34963),n)e.update(n[i],34962);var a=t.morphAttributes;for(var i in a)for(var o=a[i],s=0,c=o.length;s<c;s++)e.update(o[s],34962)},getWireframeAttribute:function(t){var e=i.get(t);if(e){var r=t.index;null!==r&&e.version<r.version&&o(t)}else o(t);return i.get(t)}}}function Rs(t,e,r,n){var i,a,o;this.setMode=function(t){i=t},this.setIndex=function(t){a=t.type,o=t.bytesPerElement},this.render=function(e,n){t.drawElements(i,n,a,e*o),r.update(n,i)},this.renderInstances=function(s,c,l){var h,u;if(n.isWebGL2)h=t,u="drawElementsInstanced";else if(u="drawElementsInstancedANGLE",null===(h=e.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](i,l,a,c*o,s.maxInstancedCount),r.update(l,i,s.maxInstancedCount)}}function Cs(t){var e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,r,n){switch(n=n||1,e.calls++,r){case 4:e.triangles+=n*(t/3);break;case 5:case 6:e.triangles+=n*(t-2);break;case 1:e.lines+=n*(t/2);break;case 3:e.lines+=n*(t-1);break;case 2:e.lines+=n*t;break;case 0:e.points+=n*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function Ps(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Os(t){var e={},r=new Float32Array(8);return{update:function(n,i,a,o){var s=n.morphTargetInfluences,c=s.length,l=e[i.id];if(void 0===l){l=[];for(var h=0;h<c;h++)l[h]=[h,0];e[i.id]=l}var u=a.morphTargets&&i.morphAttributes.position,p=a.morphNormals&&i.morphAttributes.normal;for(h=0;h<c;h++)0!==(d=l[h])[1]&&(u&&i.removeAttribute("morphTarget"+h),p&&i.removeAttribute("morphNormal"+h));for(h=0;h<c;h++)(d=l[h])[0]=h,d[1]=s[h];for(l.sort(Ps),h=0;h<8;h++){var d;if(d=l[h]){var f=d[0],m=d[1];if(m){u&&i.addAttribute("morphTarget"+h,u[f]),p&&i.addAttribute("morphNormal"+h,p[f]),r[h]=m;continue}}r[h]=0}o.getUniforms().setValue(t,"morphTargetInfluences",r)}}}function Ds(t,e){var r={};return{update:function(n){var i=e.render.frame,a=n.geometry,o=t.get(n,a);return r[o.id]!==i&&(a.isGeometry&&o.updateFromObject(n),t.update(o),r[o.id]=i),o},dispose:function(){r={}}}}function Ns(t,e,r,n,i,a,o,s,c,l){t=void 0!==t?t:[],e=void 0!==e?e:ct,o=void 0!==o?o:Ht,gr.call(this,t,e,r,n,i,a,o,s,c,l),this.flipY=!1}function Is(t,e,r,n){gr.call(this,null),this.image={data:t,width:e,height:r,depth:n},this.magFilter=yt,this.minFilter=yt,this.wrapR=vt,this.generateMipmaps=!1,this.flipY=!1}function Bs(t,e,r,n){gr.call(this,null),this.image={data:t,width:e,height:r,depth:n},this.magFilter=yt,this.minFilter=yt,this.wrapR=vt,this.generateMipmaps=!1,this.flipY=!1}exports.ShaderLib=ys,ys.physical={uniforms:Ii([ys.standard.uniforms,{transparency:{value:0},clearcoat:{value:0},clearcoatRoughness:{value:0},sheen:{value:new Dn(0)},clearcoatNormalScale:{value:new sr(1,1)},clearcoatNormalMap:{value:null}}]),vertexShader:vs.meshphysical_vert,fragmentShader:vs.meshphysical_frag},ws.prototype=Object.create(Pi.prototype),ws.prototype.constructor=ws,_s.prototype=Object.create(oi.prototype),_s.prototype.constructor=_s,Ns.prototype=Object.create(gr.prototype),Ns.prototype.constructor=Ns,Ns.prototype.isCubeTexture=!0,Object.defineProperty(Ns.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}}),Is.prototype=Object.create(gr.prototype),Is.prototype.constructor=Is,Is.prototype.isDataTexture2DArray=!0,Bs.prototype=Object.create(gr.prototype),Bs.prototype.constructor=Bs,Bs.prototype.isDataTexture3D=!0;var zs=new gr,Fs=new Is,Gs=new Bs,Us=new Ns,Hs=[],Vs=[],js=new Float32Array(16),ks=new Float32Array(9),Ws=new Float32Array(4);function qs(t,e,r){var n=t[0];if(n<=0||n>0)return t;var i=e*r,a=Hs[i];if(void 0===a&&(a=new Float32Array(i),Hs[i]=a),0!==e){n.toArray(a,0);for(var o=1,s=0;o!==e;++o)s+=r,t[o].toArray(a,s)}return a}function Xs(t,e){if(t.length!==e.length)return!1;for(var r=0,n=t.length;r<n;r++)if(t[r]!==e[r])return!1;return!0}function Ys(t,e){for(var r=0,n=e.length;r<n;r++)t[r]=e[r]}function Zs(t,e){var r=Vs[e];void 0===r&&(r=new Int32Array(e),Vs[e]=r);for(var n=0;n!==e;++n)r[n]=t.allocateTextureUnit();return r}function Js(t,e){var r=this.cache;r[0]!==e&&(t.uniform1f(this.addr,e),r[0]=e)}function Qs(t,e){var r=this.cache;if(void 0!==e.x)r[0]===e.x&&r[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),r[0]=e.x,r[1]=e.y);else{if(Xs(r,e))return;t.uniform2fv(this.addr,e),Ys(r,e)}}function Ks(t,e){var r=this.cache;if(void 0!==e.x)r[0]===e.x&&r[1]===e.y&&r[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),r[0]=e.x,r[1]=e.y,r[2]=e.z);else if(void 0!==e.r)r[0]===e.r&&r[1]===e.g&&r[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),r[0]=e.r,r[1]=e.g,r[2]=e.b);else{if(Xs(r,e))return;t.uniform3fv(this.addr,e),Ys(r,e)}}function $s(t,e){var r=this.cache;if(void 0!==e.x)r[0]===e.x&&r[1]===e.y&&r[2]===e.z&&r[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),r[0]=e.x,r[1]=e.y,r[2]=e.z,r[3]=e.w);else{if(Xs(r,e))return;t.uniform4fv(this.addr,e),Ys(r,e)}}function tc(t,e){var r=this.cache,n=e.elements;if(void 0===n){if(Xs(r,e))return;t.uniformMatrix2fv(this.addr,!1,e),Ys(r,e)}else{if(Xs(r,n))return;Ws.set(n),t.uniformMatrix2fv(this.addr,!1,Ws),Ys(r,n)}}function ec(t,e){var r=this.cache,n=e.elements;if(void 0===n){if(Xs(r,e))return;t.uniformMatrix3fv(this.addr,!1,e),Ys(r,e)}else{if(Xs(r,n))return;ks.set(n),t.uniformMatrix3fv(this.addr,!1,ks),Ys(r,n)}}function rc(t,e){var r=this.cache,n=e.elements;if(void 0===n){if(Xs(r,e))return;t.uniformMatrix4fv(this.addr,!1,e),Ys(r,e)}else{if(Xs(r,n))return;js.set(n),t.uniformMatrix4fv(this.addr,!1,js),Ys(r,n)}}function nc(t,e,r){var n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(t.uniform1i(this.addr,i),n[0]=i),r.safeSetTexture2D(e||zs,i)}function ic(t,e,r){var n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(t.uniform1i(this.addr,i),n[0]=i),r.setTexture2DArray(e||Fs,i)}function ac(t,e,r){var n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(t.uniform1i(this.addr,i),n[0]=i),r.setTexture3D(e||Gs,i)}function oc(t,e,r){var n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(t.uniform1i(this.addr,i),n[0]=i),r.safeSetTextureCube(e||Us,i)}function sc(t,e){var r=this.cache;r[0]!==e&&(t.uniform1i(this.addr,e),r[0]=e)}function cc(t,e){var r=this.cache;Xs(r,e)||(t.uniform2iv(this.addr,e),Ys(r,e))}function lc(t,e){var r=this.cache;Xs(r,e)||(t.uniform3iv(this.addr,e),Ys(r,e))}function hc(t,e){var r=this.cache;Xs(r,e)||(t.uniform4iv(this.addr,e),Ys(r,e))}function uc(t){switch(t){case 5126:return Js;case 35664:return Qs;case 35665:return Ks;case 35666:return $s;case 35674:return tc;case 35675:return ec;case 35676:return rc;case 35678:case 36198:return nc;case 35679:return ac;case 35680:return oc;case 36289:return ic;case 5124:case 35670:return sc;case 35667:case 35671:return cc;case 35668:case 35672:return lc;case 35669:case 35673:return hc}}function pc(t,e){t.uniform1fv(this.addr,e)}function dc(t,e){t.uniform1iv(this.addr,e)}function fc(t,e){t.uniform2iv(this.addr,e)}function mc(t,e){t.uniform3iv(this.addr,e)}function vc(t,e){t.uniform4iv(this.addr,e)}function gc(t,e){var r=qs(e,this.size,2);t.uniform2fv(this.addr,r)}function yc(t,e){var r=qs(e,this.size,3);t.uniform3fv(this.addr,r)}function xc(t,e){var r=qs(e,this.size,4);t.uniform4fv(this.addr,r)}function bc(t,e){var r=qs(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,r)}function wc(t,e){var r=qs(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,r)}function _c(t,e){var r=qs(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,r)}function Mc(t,e,r){var n=e.length,i=Zs(r,n);t.uniform1iv(this.addr,i);for(var a=0;a!==n;++a)r.safeSetTexture2D(e[a]||zs,i[a])}function Sc(t,e,r){var n=e.length,i=Zs(r,n);t.uniform1iv(this.addr,i);for(var a=0;a!==n;++a)r.safeSetTextureCube(e[a]||Us,i[a])}function Tc(t){switch(t){case 5126:return pc;case 35664:return gc;case 35665:return yc;case 35666:return xc;case 35674:return bc;case 35675:return wc;case 35676:return _c;case 35678:return Mc;case 35680:return Sc;case 5124:case 35670:return dc;case 35667:case 35671:return fc;case 35668:case 35672:return mc;case 35669:case 35673:return vc}}function Ec(t,e,r){this.id=t,this.addr=r,this.cache=[],this.setValue=uc(e.type)}function Ac(t,e,r){this.id=t,this.addr=r,this.cache=[],this.size=e.size,this.setValue=Tc(e.type)}function Lc(t){this.id=t,this.seq=[],this.map={}}Ac.prototype.updateCache=function(t){var e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Ys(e,t)},Lc.prototype.setValue=function(t,e,r){for(var n=this.seq,i=0,a=n.length;i!==a;++i){var o=n[i];o.setValue(t,e[o.id],r)}};var Rc=/([\w\d_]+)(\])?(\[|\.)?/g;function Cc(t,e){t.seq.push(e),t.map[e.id]=e}function Pc(t,e,r){var n=t.name,i=n.length;for(Rc.lastIndex=0;;){var a=Rc.exec(n),o=Rc.lastIndex,s=a[1],c="]"===a[2],l=a[3];if(c&&(s|=0),void 0===l||"["===l&&o+2===i){Cc(r,void 0===l?new Ec(s,t,e):new Ac(s,t,e));break}var h=r.map[s];void 0===h&&Cc(r,h=new Lc(s)),r=h}}function Oc(t,e){this.seq=[],this.map={};for(var r=t.getProgramParameter(e,35718),n=0;n<r;++n){var i=t.getActiveUniform(e,n);Pc(i,t.getUniformLocation(e,i.name),this)}}function Dc(t,e,r){var n=t.createShader(e);return t.shaderSource(n,r),t.compileShader(n),n}Oc.prototype.setValue=function(t,e,r,n){var i=this.map[e];void 0!==i&&i.setValue(t,r,n)},Oc.prototype.setOptional=function(t,e,r){var n=e[r];void 0!==n&&this.setValue(t,r,n)},Oc.upload=function(t,e,r,n){for(var i=0,a=e.length;i!==a;++i){var o=e[i],s=r[o.id];!1!==s.needsUpdate&&o.setValue(t,s.value,n)}},Oc.seqWithValue=function(t,e){for(var r=[],n=0,i=t.length;n!==i;++n){var a=t[n];a.id in e&&r.push(a)}return r};var Nc=0;function Ic(t){for(var e=t.split("\n"),r=0;r<e.length;r++)e[r]=r+1+": "+e[r];return e.join("\n")}function Bc(t){switch(t){case Ce:return["Linear","( value )"];case Pe:return["sRGB","( value )"];case De:return["RGBE","( value )"];case Ie:return["RGBM","( value, 7.0 )"];case Be:return["RGBM","( value, 16.0 )"];case ze:return["RGBD","( value, 256.0 )"];case Oe:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Ne:return["LogLuv","( value )"];default:throw new Error("unsupported encoding: "+t)}}function zc(t,e,r){var n=t.getShaderParameter(e,35713),i=t.getShaderInfoLog(e).trim();return n&&""===i?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+r+"\n"+i+Ic(t.getShaderSource(e))}function Fc(t,e){var r=Bc(e);return"vec4 "+t+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function Gc(t,e){var r=Bc(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}function Uc(t,e){var r;switch(e){case rt:r="Linear";break;case nt:r="Reinhard";break;case it:r="Uncharted2";break;case at:r="OptimizedCineon";break;case ot:r="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function Hc(t,e,r){return[(t=t||{}).derivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&r.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&r.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&r.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(kc).join("\n")}function Vc(t){var e=[];for(var r in t){var n=t[r];!1!==n&&e.push("#define "+r+" "+n)}return e.join("\n")}function jc(t,e){for(var r={},n=t.getProgramParameter(e,35721),i=0;i<n;i++){var a=t.getActiveAttrib(e,i).name;r[a]=t.getAttribLocation(e,a)}return r}function kc(t){return""!==t}function Wc(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function qc(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}function Xc(t){return t.replace(/^[ \t]*#include +<([\w\d.\/]+)>/gm,function(t,e){var r=vs[e];if(void 0===r)throw new Error("Can not resolve #include <"+e+">");return Xc(r)})}function Yc(t){return t.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(t,e,r,n){for(var i="",a=parseInt(e);a<parseInt(r);a++)i+=n.replace(/\[ i \]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return i})}function Zc(t,e,r,n,i,a,o){var s=t.getContext(),c=n.defines,l=i.vertexShader,h=i.fragmentShader,f="SHADOWMAP_TYPE_BASIC";a.shadowMapType===u?f="SHADOWMAP_TYPE_PCF":a.shadowMapType===p?f="SHADOWMAP_TYPE_PCF_SOFT":a.shadowMapType===d&&(f="SHADOWMAP_TYPE_VSM");var m="ENVMAP_TYPE_CUBE",v="ENVMAP_MODE_REFLECTION",g="ENVMAP_BLENDING_MULTIPLY";if(a.envMap){switch(n.envMap.mapping){case ct:case lt:m="ENVMAP_TYPE_CUBE";break;case dt:case ft:m="ENVMAP_TYPE_CUBE_UV";break;case ht:case ut:m="ENVMAP_TYPE_EQUIREC";break;case pt:m="ENVMAP_TYPE_SPHERE"}switch(n.envMap.mapping){case lt:case ut:v="ENVMAP_MODE_REFRACTION"}switch(n.combine){case K:g="ENVMAP_BLENDING_MULTIPLY";break;case $:g="ENVMAP_BLENDING_MIX";break;case tt:g="ENVMAP_BLENDING_ADD"}}var y,x,b=t.gammaFactor>0?t.gammaFactor:1,w=o.isWebGL2?"":Hc(n.extensions,a,e),_=Vc(c),M=s.createProgram();if(n.isRawShaderMaterial?((y=[_].filter(kc).join("\n")).length>0&&(y+="\n"),(x=[w,_].filter(kc).join("\n")).length>0&&(x+="\n")):(y=["precision "+a.precision+" float;","precision "+a.precision+" int;","highp"===a.precision?"#define HIGH_PRECISION":"","#define SHADER_NAME "+i.name,_,a.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+b,"#define MAX_BONES "+a.maxBones,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp2?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+v:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.normalMap&&a.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",a.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors?"#define USE_COLOR":"",a.vertexUvs?"#define USE_UV":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&!1===a.flatShading?"#define USE_MORPHNORMALS":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+f:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&(o.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(kc).join("\n"),x=[w,"precision "+a.precision+" float;","precision "+a.precision+" int;","highp"===a.precision?"#define HIGH_PRECISION":"","#define SHADER_NAME "+i.name,_,a.alphaTest?"#define ALPHATEST "+a.alphaTest+(a.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+b,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp2?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.matcap?"#define USE_MATCAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+m:"",a.envMap?"#define "+v:"",a.envMap?"#define "+g:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.normalMap&&a.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",a.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.sheen?"#define USE_SHEEN":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors?"#define USE_COLOR":"",a.vertexUvs?"#define USE_UV":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+f:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&(o.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensions&&n.extensions.shaderTextureLOD||a.envMap)&&(o.isWebGL2||e.get("EXT_shader_texture_lod"))?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",a.toneMapping!==et?"#define TONE_MAPPING":"",a.toneMapping!==et?vs.tonemapping_pars_fragment:"",a.toneMapping!==et?Uc("toneMapping",a.toneMapping):"",a.dithering?"#define DITHERING":"",a.outputEncoding||a.mapEncoding||a.matcapEncoding||a.envMapEncoding||a.emissiveMapEncoding?vs.encodings_pars_fragment:"",a.mapEncoding?Fc("mapTexelToLinear",a.mapEncoding):"",a.matcapEncoding?Fc("matcapTexelToLinear",a.matcapEncoding):"",a.envMapEncoding?Fc("envMapTexelToLinear",a.envMapEncoding):"",a.emissiveMapEncoding?Fc("emissiveMapTexelToLinear",a.emissiveMapEncoding):"",a.outputEncoding?Gc("linearToOutputTexel",a.outputEncoding):"",a.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(kc).join("\n")),l=qc(l=Wc(l=Xc(l),a),a),h=qc(h=Wc(h=Xc(h),a),a),l=Yc(l),h=Yc(h),o.isWebGL2&&!n.isRawShaderMaterial){var S=!1,T=/^\s*#version\s+300\s+es\s*\n/;n.isShaderMaterial&&null!==l.match(T)&&null!==h.match(T)&&(S=!0,l=l.replace(T,""),h=h.replace(T,"")),y=["#version 300 es\n","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+y,x=["#version 300 es\n","#define varying in",S?"":"out highp vec4 pc_fragColor;",S?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+x}var E,A,L=x+h,R=Dc(s,35633,y+l),C=Dc(s,35632,L);if(s.attachShader(M,R),s.attachShader(M,C),void 0!==n.index0AttributeName?s.bindAttribLocation(M,0,n.index0AttributeName):!0===a.morphTargets&&s.bindAttribLocation(M,0,"position"),s.linkProgram(M),t.debug.checkShaderErrors){var P=s.getProgramInfoLog(M).trim(),O=s.getShaderInfoLog(R).trim(),D=s.getShaderInfoLog(C).trim(),N=!0,I=!0;if(!1===s.getProgramParameter(M,35714)){N=!1;var B=zc(s,R,"vertex"),z=zc(s,C,"fragment");console.error("THREE.WebGLProgram: shader error: ",s.getError(),"35715",s.getProgramParameter(M,35715),"gl.getProgramInfoLog",P,B,z)}else""!==P?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",P):""!==O&&""!==D||(I=!1);I&&(this.diagnostics={runnable:N,material:n,programLog:P,vertexShader:{log:O,prefix:y},fragmentShader:{log:D,prefix:x}})}return s.deleteShader(R),s.deleteShader(C),this.getUniforms=function(){return void 0===E&&(E=new Oc(s,M)),E},this.getAttributes=function(){return void 0===A&&(A=jc(s,M)),A},this.destroy=function(){s.deleteProgram(M),this.program=void 0},this.name=i.name,this.id=Nc++,this.code=r,this.usedTimes=1,this.program=M,this.vertexShader=R,this.fragmentShader=C,this}function Jc(t,e,r){var n=[],i={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},a=["precision","supportsVertexTextures","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function o(t,e){var r;return t?t.isTexture?r=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),r=t.texture.encoding):r=Ce,r===Ce&&e&&(r=Oe),r}this.getParameters=function(e,n,a,s,c,l,h){var u=i[e.type],p=h.isSkinnedMesh?function(t){var e=t.skeleton.bones;if(r.floatVertexTextures)return 1024;var n=r.maxVertexUniforms,i=Math.floor((n-20)/4),a=Math.min(i,e.length);return a<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+a+"."),0):a}(h):0,d=r.precision;null!==e.precision&&(d=r.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",d,"instead.");var f=t.getRenderTarget();return{shaderID:u,precision:d,supportsVertexTextures:r.vertexTextures,outputEncoding:o(f?f.texture:null,t.gammaOutput),map:!!e.map,mapEncoding:o(e.map,t.gammaInput),matcap:!!e.matcap,matcapEncoding:o(e.matcap,t.gammaInput),envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,envMapEncoding:o(e.envMap,t.gammaInput),envMapCubeUV:!!e.envMap&&(e.envMap.mapping===dt||e.envMap.mapping===ft),lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:o(e.emissiveMap,t.gammaInput),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===He,tangentSpaceNormalMap:e.normalMapType===Ue,clearcoatNormalMap:!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,sheen:!!e.sheen,combine:e.combine,vertexTangents:e.normalMap&&e.vertexTangents,vertexColors:e.vertexColors,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap),fog:!!s,useFog:e.fog,fogExp2:s&&s.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:r.logarithmicDepthBuffer,skinning:e.skinning&&p>0,maxBones:p,useVertexTexture:r.floatVertexTextures,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:n.directional.length,numPointLights:n.point.length,numSpotLights:n.spot.length,numRectAreaLights:n.rectArea.length,numHemiLights:n.hemi.length,numDirLightShadows:n.directionalShadowMap.length,numPointLightShadows:n.pointShadowMap.length,numSpotLightShadows:n.spotShadowMap.length,numClippingPlanes:c,numClipIntersection:l,dithering:e.dithering,shadowMapEnabled:t.shadowMap.enabled&&h.receiveShadow&&a.length>0,shadowMapType:t.shadowMap.type,toneMapping:e.toneMapped?t.toneMapping:et,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===v,flipSided:e.side===m,depthPacking:void 0!==e.depthPacking&&e.depthPacking}},this.getProgramCode=function(e,r){var n=[];if(r.shaderID?n.push(r.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(var i in e.defines)n.push(i),n.push(e.defines[i]);for(var o=0;o<a.length;o++)n.push(r[a[o]]);return n.push(e.onBeforeCompile.toString()),n.push(t.gammaOutput),n.push(t.gammaFactor),n.join()},this.acquireProgram=function(i,a,o,s){for(var c,l=0,h=n.length;l<h;l++){var u=n[l];if(u.code===s){++(c=u).usedTimes;break}}return void 0===c&&(c=new Zc(t,e,s,i,a,o,r),n.push(c)),c},this.releaseProgram=function(t){if(0==--t.usedTimes){var e=n.indexOf(t);n[e]=n[n.length-1],n.pop(),t.destroy()}},this.programs=n}function Qc(){var t=new WeakMap;return{get:function(e){var r=t.get(e);return void 0===r&&(r={},t.set(e,r)),r},remove:function(e){t.delete(e)},update:function(e,r,n){t.get(e)[r]=n},dispose:function(){t=new WeakMap}}}function Kc(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function $c(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function tl(){var t=[],e=0,r=[],n=[],i={id:-1};function a(r,n,a,o,s,c){var l=t[e];return void 0===l?(l={id:r.id,object:r,geometry:n,material:a,program:a.program||i,groupOrder:o,renderOrder:r.renderOrder,z:s,group:c},t[e]=l):(l.id=r.id,l.object=r,l.geometry=n,l.material=a,l.program=a.program||i,l.groupOrder=o,l.renderOrder=r.renderOrder,l.z=s,l.group=c),e++,l}return{opaque:r,transparent:n,init:function(){e=0,r.length=0,n.length=0},push:function(t,e,i,o,s,c){var l=a(t,e,i,o,s,c);(!0===i.transparent?n:r).push(l)},unshift:function(t,e,i,o,s,c){var l=a(t,e,i,o,s,c);(!0===i.transparent?n:r).unshift(l)},sort:function(){r.length>1&&r.sort(Kc),n.length>1&&n.sort($c)}}}function el(){var t=new WeakMap;function e(r){var n=r.target;n.removeEventListener("dispose",e),t.delete(n)}return{get:function(r,n){var i,a=t.get(r);return void 0===a?(i=new tl,t.set(r,new WeakMap),t.get(r).set(n,i),r.addEventListener("dispose",e)):void 0===(i=a.get(n))&&(i=new tl,a.set(n,i)),i},dispose:function(){t=new WeakMap}}}function rl(){var t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];var r;switch(e.type){case"DirectionalLight":r={direction:new ur,color:new Dn,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new sr};break;case"SpotLight":r={position:new ur,direction:new ur,color:new Dn,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new sr};break;case"PointLight":r={position:new ur,color:new Dn,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new sr,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":r={direction:new ur,skyColor:new Dn,groundColor:new Dn};break;case"RectAreaLight":r={color:new Dn,position:new ur,halfWidth:new ur,halfHeight:new ur}}return t[e.id]=r,r}}}var nl=0;function il(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function al(){for(var t=new rl,e={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},r=0;r<9;r++)e.probe.push(new ur);var n=new ur,i=new Lr,a=new Lr;return{setup:function(r,o,s){for(var c=0,l=0,h=0,u=0;u<9;u++)e.probe[u].set(0,0,0);var p=0,d=0,f=0,m=0,v=0,g=0,y=0,x=0,b=s.matrixWorldInverse;r.sort(il),u=0;for(var w=r.length;u<w;u++){var _=r[u],M=_.color,S=_.intensity,T=_.distance,E=_.shadow&&_.shadow.map?_.shadow.map.texture:null;if(_.isAmbientLight)c+=M.r*S,l+=M.g*S,h+=M.b*S;else if(_.isLightProbe)for(var A=0;A<9;A++)e.probe[A].addScaledVector(_.sh.coefficients[A],S);else if(_.isDirectionalLight){if((R=t.get(_)).color.copy(_.color).multiplyScalar(_.intensity),R.direction.setFromMatrixPosition(_.matrixWorld),n.setFromMatrixPosition(_.target.matrixWorld),R.direction.sub(n),R.direction.transformDirection(b),R.shadow=_.castShadow,_.castShadow){var L=_.shadow;R.shadowBias=L.bias,R.shadowRadius=L.radius,R.shadowMapSize=L.mapSize,e.directionalShadowMap[p]=E,e.directionalShadowMatrix[p]=_.shadow.matrix,g++}e.directional[p]=R,p++}else if(_.isSpotLight)(R=t.get(_)).position.setFromMatrixPosition(_.matrixWorld),R.position.applyMatrix4(b),R.color.copy(M).multiplyScalar(S),R.distance=T,R.direction.setFromMatrixPosition(_.matrixWorld),n.setFromMatrixPosition(_.target.matrixWorld),R.direction.sub(n),R.direction.transformDirection(b),R.coneCos=Math.cos(_.angle),R.penumbraCos=Math.cos(_.angle*(1-_.penumbra)),R.decay=_.decay,R.shadow=_.castShadow,_.castShadow&&(L=_.shadow,R.shadowBias=L.bias,R.shadowRadius=L.radius,R.shadowMapSize=L.mapSize,e.spotShadowMap[f]=E,e.spotShadowMatrix[f]=_.shadow.matrix,x++),e.spot[f]=R,f++;else if(_.isRectAreaLight)(R=t.get(_)).color.copy(M).multiplyScalar(S),R.position.setFromMatrixPosition(_.matrixWorld),R.position.applyMatrix4(b),a.identity(),i.copy(_.matrixWorld),i.premultiply(b),a.extractRotation(i),R.halfWidth.set(.5*_.width,0,0),R.halfHeight.set(0,.5*_.height,0),R.halfWidth.applyMatrix4(a),R.halfHeight.applyMatrix4(a),e.rectArea[m]=R,m++;else if(_.isPointLight)(R=t.get(_)).position.setFromMatrixPosition(_.matrixWorld),R.position.applyMatrix4(b),R.color.copy(_.color).multiplyScalar(_.intensity),R.distance=_.distance,R.decay=_.decay,R.shadow=_.castShadow,_.castShadow&&(L=_.shadow,R.shadowBias=L.bias,R.shadowRadius=L.radius,R.shadowMapSize=L.mapSize,R.shadowCameraNear=L.camera.near,R.shadowCameraFar=L.camera.far,e.pointShadowMap[d]=E,e.pointShadowMatrix[d]=_.shadow.matrix,y++),e.point[d]=R,d++;else if(_.isHemisphereLight){var R;(R=t.get(_)).direction.setFromMatrixPosition(_.matrixWorld),R.direction.transformDirection(b),R.direction.normalize(),R.skyColor.copy(_.color).multiplyScalar(S),R.groundColor.copy(_.groundColor).multiplyScalar(S),e.hemi[v]=R,v++}}e.ambient[0]=c,e.ambient[1]=l,e.ambient[2]=h;var C=e.hash;C.directionalLength===p&&C.pointLength===d&&C.spotLength===f&&C.rectAreaLength===m&&C.hemiLength===v&&C.numDirectionalShadows===g&&C.numPointShadows===y&&C.numSpotShadows===x||(e.directional.length=p,e.spot.length=f,e.rectArea.length=m,e.point.length=d,e.hemi.length=v,e.directionalShadowMap.length=g,e.pointShadowMap.length=y,e.spotShadowMap.length=x,e.directionalShadowMatrix.length=g,e.pointShadowMatrix.length=y,e.spotShadowMatrix.length=x,C.directionalLength=p,C.pointLength=d,C.spotLength=f,C.rectAreaLength=m,C.hemiLength=v,C.numDirectionalShadows=g,C.numPointShadows=y,C.numSpotShadows=x,e.version=nl++)},state:e}}function ol(){var t=new al,e=[],r=[];return{init:function(){e.length=0,r.length=0},state:{lightsArray:e,shadowsArray:r,lights:t},setupLights:function(n){t.setup(e,r,n)},pushLight:function(t){e.push(t)},pushShadow:function(t){r.push(t)}}}function sl(){var t=new WeakMap;function e(r){var n=r.target;n.removeEventListener("dispose",e),t.delete(n)}return{get:function(r,n){var i;return!1===t.has(r)?(i=new ol,t.set(r,new WeakMap),t.get(r).set(n,i),r.addEventListener("dispose",e)):!1===t.get(r).has(n)?(i=new ol,t.get(r).set(n,i)):i=t.get(r).get(n),i},dispose:function(){t=new WeakMap}}}function cl(t){Gn.call(this),this.type="MeshDepthMaterial",this.depthPacking=Fe,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(t)}function ll(t){Gn.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new ur,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(t)}cl.prototype=Object.create(Gn.prototype),cl.prototype.constructor=cl,cl.prototype.isMeshDepthMaterial=!0,cl.prototype.copy=function(t){return Gn.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},ll.prototype=Object.create(Gn.prototype),ll.prototype.constructor=ll,ll.prototype.isMeshDistanceMaterial=!0,ll.prototype.copy=function(t){return Gn.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};var hl="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n  \n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = decodeHalfRGBA ( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = pow( squared_mean - mean * mean, 0.5 );\n  gl_FragColor = encodeHalfRGBA( vec2( mean, std_dev ) );\n}",ul="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function pl(t,e,r){var n=new $i,i=new sr,a=new sr,o=new yr,s=1,c=2,l=1+(s|c),h=new Array(l),p=new Array(l),g={},y={0:m,1:f,2:v},x=new Gi({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new sr},radius:{value:4}},vertexShader:ul,fragmentShader:hl}),b=x.clone();b.defines.HORIZONAL_PASS=1;var w=new oi;w.addAttribute("position",new Hn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));for(var M=new Si(w,x),S=0;S!==l;++S){var T=0!=(S&s),E=0!=(S&c),A=new cl({depthPacking:Ge,morphTargets:T,skinning:E});h[S]=A;var L=new ll({morphTargets:T,skinning:E});p[S]=L}var R=this;function C(r,n){var i=e.update(M);x.uniforms.shadow_pass.value=r.map.texture,x.uniforms.resolution.value=r.mapSize,x.uniforms.radius.value=r.radius,t.setRenderTarget(r.mapPass),t.clear(),t.renderBufferDirect(n,null,i,x,M,null),b.uniforms.shadow_pass.value=r.mapPass.texture,b.uniforms.resolution.value=r.mapSize,b.uniforms.radius.value=r.radius,t.setRenderTarget(r.map),t.clear(),t.renderBufferDirect(n,null,i,b,M,null)}function P(e,r,n,i,a,o){var l=e.geometry,u=null,f=h,m=e.customDepthMaterial;if(n.isPointLight&&(f=p,m=e.customDistanceMaterial),m)u=m;else{var v=!1;r.morphTargets&&(l&&l.isBufferGeometry?v=l.morphAttributes&&l.morphAttributes.position&&l.morphAttributes.position.length>0:l&&l.isGeometry&&(v=l.morphTargets&&l.morphTargets.length>0)),e.isSkinnedMesh&&!1===r.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e);var x=e.isSkinnedMesh&&r.skinning,b=0;v&&(b|=s),x&&(b|=c),u=f[b]}if(t.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){var w=u.uuid,_=r.uuid,M=g[w];void 0===M&&(M={},g[w]=M);var S=M[_];void 0===S&&(S=u.clone(),M[_]=S),u=S}return u.visible=r.visible,u.wireframe=r.wireframe,u.side=o===d?null!=r.shadowSide?r.shadowSide:r.side:null!=r.shadowSide?r.shadowSide:y[r.side],u.clipShadows=r.clipShadows,u.clippingPlanes=r.clippingPlanes,u.clipIntersection=r.clipIntersection,u.wireframeLinewidth=r.wireframeLinewidth,u.linewidth=r.linewidth,n.isPointLight&&u.isMeshDistanceMaterial&&(u.referencePosition.setFromMatrixPosition(n.matrixWorld),u.nearDistance=i,u.farDistance=a),u}function O(r,i,a,o,s){if(!1!==r.visible){if(r.layers.test(i.layers)&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&s===d)&&(!r.frustumCulled||n.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,r.matrixWorld);var c=e.update(r),l=r.material;if(Array.isArray(l))for(var h=c.groups,u=0,p=h.length;u<p;u++){var f=h[u],m=l[f.materialIndex];if(m&&m.visible){var v=P(r,m,o,a.near,a.far,s);t.renderBufferDirect(a,null,c,v,r,f)}}else if(l.visible){v=P(r,l,o,a.near,a.far,s);t.renderBufferDirect(a,null,c,v,r,null)}}for(var g=r.children,y=0,x=g.length;y<x;y++)O(g[y],i,a,o,s)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=u,this.render=function(e,s,c){if(!1!==R.enabled&&(!1!==R.autoUpdate||!1!==R.needsUpdate)&&0!==e.length){var l=t.getRenderTarget(),h=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),p=t.state;p.setBlending(_),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);for(var f=0,m=e.length;f<m;f++){var v=e[f],g=v.shadow;if(void 0!==g){i.copy(g.mapSize);var y=g.getFrameExtents();if(i.multiply(y),a.copy(g.mapSize),(i.x>r||i.y>r)&&(console.warn("THREE.WebGLShadowMap:",v,"has shadow exceeding max texture size, reducing"),i.x>r&&(a.x=Math.floor(r/y.x),i.x=a.x*y.x,g.mapSize.x=a.x),i.y>r&&(a.y=Math.floor(r/y.y),i.y=a.y*y.y,g.mapSize.y=a.y)),null===g.map&&!g.isPointLightShadow&&this.type===d){var x={minFilter:Mt,magFilter:Mt,format:Vt};g.map=new xr(i.x,i.y,x),g.map.texture.name=v.name+".shadowMap",g.mapPass=new xr(i.x,i.y,x),g.camera.updateProjectionMatrix()}if(null===g.map){x={minFilter:yt,magFilter:yt,format:Vt};g.map=new xr(i.x,i.y,x),g.map.texture.name=v.name+".shadowMap",g.camera.updateProjectionMatrix()}t.setRenderTarget(g.map),t.clear();for(var b=g.getViewportCount(),w=0;w<b;w++){var M=g.getViewport(w);o.set(a.x*M.x,a.y*M.y,a.x*M.z,a.y*M.w),p.viewport(o),g.updateMatrices(v,c,w),n=g.getFrustum(),O(s,c,g.camera,v,this.type)}g.isPointLightShadow||this.type!==d||C(g,c)}else console.warn("THREE.WebGLShadowMap:",v,"has no shadow.")}R.needsUpdate=!1,t.setRenderTarget(l,h,u)}}}function dl(t,e,r,n){var s=new function(){var e=!1,r=new yr,n=null,i=new yr(0,0,0,0);return{setMask:function(r){n===r||e||(t.colorMask(r,r,r,r),n=r)},setLocked:function(t){e=t},setClear:function(e,n,a,o,s){!0===s&&(e*=o,n*=o,a*=o),r.set(e,n,a,o),!1===i.equals(r)&&(t.clearColor(e,n,a,o),i.copy(r))},reset:function(){e=!1,n=null,i.set(-1,0,0,0)}}},c=new function(){var e=!1,r=null,n=null,i=null;return{setTest:function(t){t?at(2929):ot(2929)},setMask:function(n){r===n||e||(t.depthMask(n),r=n)},setFunc:function(e){if(n!==e){if(e)switch(e){case k:t.depthFunc(512);break;case W:t.depthFunc(519);break;case q:t.depthFunc(513);break;case X:t.depthFunc(515);break;case Y:t.depthFunc(514);break;case Z:t.depthFunc(518);break;case J:t.depthFunc(516);break;case Q:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);n=e}},setLocked:function(t){e=t},setClear:function(e){i!==e&&(t.clearDepth(e),i=e)},reset:function(){e=!1,r=null,n=null,i=null}}},l=new function(){var e=!1,r=null,n=null,i=null,a=null,o=null,s=null,c=null,l=null;return{setTest:function(t){e||(t?at(2960):ot(2960))},setMask:function(n){r===n||e||(t.stencilMask(n),r=n)},setFunc:function(e,r,o){n===e&&i===r&&a===o||(t.stencilFunc(e,r,o),n=e,i=r,a=o)},setOp:function(e,r,n){o===e&&s===r&&c===n||(t.stencilOp(e,r,n),o=e,s=r,c=n)},setLocked:function(t){e=t},setClear:function(e){l!==e&&(t.clearStencil(e),l=e)},reset:function(){e=!1,r=null,n=null,i=null,a=null,o=null,s=null,c=null,l=null}}},h=t.getParameter(34921),u=new Uint8Array(h),p=new Uint8Array(h),d=new Uint8Array(h),f={},g=null,y=null,x=null,b=null,w=null,R=null,C=null,P=null,O=null,D=null,N=!1,I=null,B=null,z=null,F=null,G=null,U=t.getParameter(35661),H=!1,V=0,j=t.getParameter(7938);-1!==j.indexOf("WebGL")?(V=parseFloat(/^WebGL\ ([0-9])/.exec(j)[1]),H=V>=1):-1!==j.indexOf("OpenGL ES")&&(V=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(j)[1]),H=V>=2);var K=null,$={},tt=new yr,et=new yr;function rt(e,r,n){var i=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(var o=0;o<n;o++)t.texImage2D(r+o,0,6408,1,1,0,6408,5121,i);return a}var nt={};function it(r,i){(u[r]=1,0===p[r]&&(t.enableVertexAttribArray(r),p[r]=1),d[r]!==i)&&((n.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](r,i),d[r]=i)}function at(e){!0!==f[e]&&(t.enable(e),f[e]=!0)}function ot(e){!1!==f[e]&&(t.disable(e),f[e]=!1)}function st(e,n,i,a,o,s,c,l){if(e!==_){if(x||(at(3042),x=!0),e===A)o=o||n,s=s||i,c=c||a,n===w&&o===P||(t.blendEquationSeparate(r.convert(n),r.convert(o)),w=n,P=o),i===R&&a===C&&s===O&&c===D||(t.blendFuncSeparate(r.convert(i),r.convert(a),r.convert(s),r.convert(c)),R=i,C=a,O=s,D=c),b=e,N=null;else if(e!==b||l!==N){if(w===L&&P===L||(t.blendEquation(32774),w=L,P=L),l)switch(e){case M:t.blendFuncSeparate(1,771,1,771);break;case S:t.blendFunc(1,1);break;case T:t.blendFuncSeparate(0,0,769,771);break;case E:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case M:t.blendFuncSeparate(770,771,1,771);break;case S:t.blendFunc(770,1);break;case T:t.blendFunc(0,769);break;case E:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}R=null,C=null,O=null,D=null,b=e,N=l}}else x&&(ot(3042),x=!1)}function ct(e){I!==e&&(e?t.frontFace(2304):t.frontFace(2305),I=e)}function lt(e){e!==i?(at(2884),e!==B&&(e===a?t.cullFace(1029):e===o?t.cullFace(1028):t.cullFace(1032))):ot(2884),B=e}function ht(e,r,n){e?(at(32823),F===r&&G===n||(t.polygonOffset(r,n),F=r,G=n)):ot(32823)}function ut(e){void 0===e&&(e=33984+U-1),K!==e&&(t.activeTexture(e),K=e)}return nt[3553]=rt(3553,3553,1),nt[34067]=rt(34067,34069,6),s.setClear(0,0,0,1),c.setClear(1),l.setClear(0),at(2929),c.setFunc(X),ct(!1),lt(a),at(2884),st(_),{buffers:{color:s,depth:c,stencil:l},initAttributes:function(){for(var t=0,e=u.length;t<e;t++)u[t]=0},enableAttribute:function(t){it(t,0)},enableAttributeAndDivisor:it,disableUnusedAttributes:function(){for(var e=0,r=p.length;e!==r;++e)p[e]!==u[e]&&(t.disableVertexAttribArray(e),p[e]=0)},enable:at,disable:ot,getCompressedTextureFormats:function(){if(null===g&&(g=[],e.get("WEBGL_compressed_texture_pvrtc")||e.get("WEBGL_compressed_texture_s3tc")||e.get("WEBGL_compressed_texture_etc1")||e.get("WEBGL_compressed_texture_astc")))for(var r=t.getParameter(34467),n=0;n<r.length;n++)g.push(r[n]);return g},useProgram:function(e){return y!==e&&(t.useProgram(e),y=e,!0)},setBlending:st,setMaterial:function(t,e){t.side===v?ot(2884):at(2884);var r=t.side===m;e&&(r=!r),ct(r),t.blending===M&&!1===t.transparent?st(_):st(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),c.setFunc(t.depthFunc),c.setTest(t.depthTest),c.setMask(t.depthWrite),s.setMask(t.colorWrite);var n=t.stencilWrite;l.setTest(n),n&&(l.setFunc(t.stencilFunc,t.stencilRef,t.stencilMask),l.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),ht(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)},setFlipSided:ct,setCullFace:lt,setLineWidth:function(e){e!==z&&(H&&t.lineWidth(e),z=e)},setPolygonOffset:ht,setScissorTest:function(t){t?at(3089):ot(3089)},activeTexture:ut,bindTexture:function(e,r){null===K&&ut();var n=$[K];void 0===n&&(n={type:void 0,texture:void 0},$[K]=n),n.type===e&&n.texture===r||(t.bindTexture(e,r||nt[e]),n.type=e,n.texture=r)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(e){!1===tt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),tt.copy(e))},viewport:function(e){!1===et.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),et.copy(e))},reset:function(){for(var e=0;e<p.length;e++)1===p[e]&&(t.disableVertexAttribArray(e),p[e]=0);f={},g=null,K=null,$={},y=null,b=null,I=null,B=null,s.reset(),c.reset(),l.reset()}}}function fl(t,e,r,n,i,a,o){var s,c=new WeakMap,l="undefined"!=typeof OffscreenCanvas;function h(t,e){return l?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function u(t,e,r,n){var i=1;if((t.width>n||t.height>n)&&(i=n/Math.max(t.width,t.height)),i<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){var a=e?or.floorPowerOfTwo:Math.floor,o=a(i*t.width),c=a(i*t.height);void 0===s&&(s=h(o,c));var l=r?h(o,c):s;return l.width=o,l.height=c,l.getContext("2d").drawImage(t,0,0,o,c),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+o+"x"+c+")."),l}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function p(t){return or.isPowerOfTwo(t.width)&&or.isPowerOfTwo(t.height)}function d(t,e){return t.generateMipmaps&&e&&t.minFilter!==yt&&t.minFilter!==Mt}function f(e,r,i,a){t.generateMipmap(e),n.get(r).__maxMipLevel=Math.log(Math.max(i,a))*Math.LOG2E}function m(t,r){if(!i.isWebGL2)return t;var n=t;return 6403===t&&(5126===r&&(n=33326),5131===r&&(n=33325),5121===r&&(n=33321)),6407===t&&(5126===r&&(n=34837),5131===r&&(n=34843),5121===r&&(n=32849)),6408===t&&(5126===r&&(n=34836),5131===r&&(n=34842),5121===r&&(n=32856)),33325===n||33326===n||34842===n||34836===n?e.get("EXT_color_buffer_float"):34843!==n&&34837!==n||console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."),n}function v(t){return t===yt||t===xt||t===wt?9728:9729}function g(e){var r=e.target;r.removeEventListener("dispose",g),function(e){var r=n.get(e);if(void 0===r.__webglInit)return;t.deleteTexture(r.__webglTexture),n.remove(e)}(r),r.isVideoTexture&&c.delete(r),o.memory.textures--}function y(e){var r=e.target;r.removeEventListener("dispose",y),function(e){var r=n.get(e),i=n.get(e.texture);if(!e)return;void 0!==i.__webglTexture&&t.deleteTexture(i.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLRenderTargetCube)for(var a=0;a<6;a++)t.deleteFramebuffer(r.__webglFramebuffer[a]),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer[a]);else t.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer);n.remove(e.texture),n.remove(e)}(r),o.memory.textures--}var x=0;function b(t,e){var i=n.get(t);if(t.isVideoTexture&&function(t){var e=o.render.frame;c.get(t)!==e&&(c.set(t,e),t.update())}(t),t.version>0&&i.__version!==t.version){var a=t.image;if(void 0===a)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==a.complete)return void T(i,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}r.activeTexture(33984+e),r.bindTexture(3553,i.__webglTexture)}function w(e,o){if(6===e.image.length){var s=n.get(e);if(e.version>0&&s.__version!==e.version){S(s,e),r.activeTexture(33984+o),r.bindTexture(34067,s.__webglTexture),t.pixelStorei(37440,e.flipY);for(var c=e&&e.isCompressedTexture,l=e.image[0]&&e.image[0].isDataTexture,h=[],v=0;v<6;v++)h[v]=c||l?l?e.image[v].image:e.image[v]:u(e.image[v],!1,!0,i.maxCubemapSize);var g,y=h[0],x=p(y)||i.isWebGL2,b=a.convert(e.format),w=a.convert(e.type),_=m(b,w);if(M(34067,e,x),c){for(v=0;v<6;v++){g=h[v].mipmaps;for(var T=0;T<g.length;T++){var E=g[T];e.format!==Vt&&e.format!==Ht?r.getCompressedTextureFormats().indexOf(b)>-1?r.compressedTexImage2D(34069+v,T,_,E.width,E.height,0,E.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):r.texImage2D(34069+v,T,_,E.width,E.height,0,b,w,E.data)}}s.__maxMipLevel=g.length-1}else{g=e.mipmaps;for(v=0;v<6;v++)if(l){r.texImage2D(34069+v,0,_,h[v].width,h[v].height,0,b,w,h[v].data);for(T=0;T<g.length;T++){var A=(E=g[T]).image[v].image;r.texImage2D(34069+v,T+1,_,A.width,A.height,0,b,w,A.data)}}else{r.texImage2D(34069+v,0,_,b,w,h[v]);for(T=0;T<g.length;T++){E=g[T];r.texImage2D(34069+v,T+1,_,b,w,E.image[v])}}s.__maxMipLevel=g.length}d(e,x)&&f(34067,e,y.width,y.height),s.__version=e.version,e.onUpdate&&e.onUpdate(e)}else r.activeTexture(33984+o),r.bindTexture(34067,s.__webglTexture)}}function _(t,e){r.activeTexture(33984+e),r.bindTexture(34067,n.get(t).__webglTexture)}function M(r,o,s){var c;if(s?(t.texParameteri(r,10242,a.convert(o.wrapS)),t.texParameteri(r,10243,a.convert(o.wrapT)),32879!==r&&35866!==r||t.texParameteri(r,32882,a.convert(o.wrapR)),t.texParameteri(r,10240,a.convert(o.magFilter)),t.texParameteri(r,10241,a.convert(o.minFilter))):(t.texParameteri(r,10242,33071),t.texParameteri(r,10243,33071),32879!==r&&35866!==r||t.texParameteri(r,32882,33071),o.wrapS===vt&&o.wrapT===vt||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(r,10240,v(o.magFilter)),t.texParameteri(r,10241,v(o.minFilter)),o.minFilter!==yt&&o.minFilter!==Mt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),c=e.get("EXT_texture_filter_anisotropic")){if(o.type===Nt&&null===e.get("OES_texture_float_linear"))return;if(o.type===It&&null===(i.isWebGL2||e.get("OES_texture_half_float_linear")))return;(o.anisotropy>1||n.get(o).__currentAnisotropy)&&(t.texParameterf(r,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,i.getMaxAnisotropy())),n.get(o).__currentAnisotropy=o.anisotropy)}}function S(e,r){void 0===e.__webglInit&&(e.__webglInit=!0,r.addEventListener("dispose",g),e.__webglTexture=t.createTexture(),o.memory.textures++)}function T(e,n,o){var s=3553;n.isDataTexture2DArray&&(s=35866),n.isDataTexture3D&&(s=32879),S(e,n),r.activeTexture(33984+o),r.bindTexture(s,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment);var c=function(t){return!i.isWebGL2&&(t.wrapS!==vt||t.wrapT!==vt||t.minFilter!==yt&&t.minFilter!==Mt)}(n)&&!1===p(n.image),l=u(n.image,c,!1,i.maxTextureSize),h=p(l)||i.isWebGL2,v=a.convert(n.format),g=a.convert(n.type),y=m(v,g);M(s,n,h);var x,b=n.mipmaps;if(n.isDepthTexture){if(y=6402,n.type===Nt){if(!i.isWebGL2)throw new Error("Float Depth Texture only supported in WebGL2.0");y=36012}else i.isWebGL2&&(y=33189);n.format===qt&&6402===y&&n.type!==Pt&&n.type!==Dt&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=Pt,g=a.convert(n.type)),n.format===Xt&&(y=34041,n.type!==Gt&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=Gt,g=a.convert(n.type))),r.texImage2D(3553,0,y,l.width,l.height,0,v,g,null)}else if(n.isDataTexture)if(b.length>0&&h){for(var w=0,_=b.length;w<_;w++)x=b[w],r.texImage2D(3553,w,y,x.width,x.height,0,v,g,x.data);n.generateMipmaps=!1,e.__maxMipLevel=b.length-1}else r.texImage2D(3553,0,y,l.width,l.height,0,v,g,l.data),e.__maxMipLevel=0;else if(n.isCompressedTexture){for(w=0,_=b.length;w<_;w++)x=b[w],n.format!==Vt&&n.format!==Ht?r.getCompressedTextureFormats().indexOf(v)>-1?r.compressedTexImage2D(3553,w,y,x.width,x.height,0,x.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):r.texImage2D(3553,w,y,x.width,x.height,0,v,g,x.data);e.__maxMipLevel=b.length-1}else if(n.isDataTexture2DArray)r.texImage3D(35866,0,y,l.width,l.height,l.depth,0,v,g,l.data),e.__maxMipLevel=0;else if(n.isDataTexture3D)r.texImage3D(32879,0,y,l.width,l.height,l.depth,0,v,g,l.data),e.__maxMipLevel=0;else if(b.length>0&&h){for(w=0,_=b.length;w<_;w++)x=b[w],r.texImage2D(3553,w,y,v,g,x);n.generateMipmaps=!1,e.__maxMipLevel=b.length-1}else r.texImage2D(3553,0,y,v,g,l),e.__maxMipLevel=0;d(n,h)&&f(3553,n,l.width,l.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function E(e,i,o,s){var c=a.convert(i.texture.format),l=a.convert(i.texture.type),h=m(c,l);r.texImage2D(s,0,h,i.width,i.height,0,c,l,null),t.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,o,s,n.get(i.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function A(e,r,n){if(t.bindRenderbuffer(36161,e),r.depthBuffer&&!r.stencilBuffer){if(n){var i=R(r);t.renderbufferStorageMultisample(36161,i,33189,r.width,r.height)}else t.renderbufferStorage(36161,33189,r.width,r.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(r.depthBuffer&&r.stencilBuffer){if(n){i=R(r);t.renderbufferStorageMultisample(36161,i,35056,r.width,r.height)}else t.renderbufferStorage(36161,34041,r.width,r.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{var o=m(a.convert(r.texture.format),a.convert(r.texture.type));if(n){i=R(r);t.renderbufferStorageMultisample(36161,i,o,r.width,r.height)}else t.renderbufferStorage(36161,o,r.width,r.height)}t.bindRenderbuffer(36161,null)}function L(e){var r=n.get(e),i=!0===e.isWebGLRenderTargetCube;if(e.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,r){if(r&&r.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),b(r.depthTexture,0);var i=n.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===qt)t.framebufferTexture2D(36160,36096,3553,i,0);else{if(r.depthTexture.format!==Xt)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,i,0)}}(r.__webglFramebuffer,e)}else if(i){r.__webglDepthbuffer=[];for(var a=0;a<6;a++)t.bindFramebuffer(36160,r.__webglFramebuffer[a]),r.__webglDepthbuffer[a]=t.createRenderbuffer(),A(r.__webglDepthbuffer[a],e)}else t.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=t.createRenderbuffer(),A(r.__webglDepthbuffer,e);t.bindFramebuffer(36160,null)}function R(t){return i.isWebGL2&&t.isWebGLMultisampleRenderTarget?Math.min(i.maxSamples,t.samples):0}var C=!1,P=!1;this.allocateTextureUnit=function(){var t=x;return t>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+i.maxTextures),x+=1,t},this.resetTextureUnits=function(){x=0},this.setTexture2D=b,this.setTexture2DArray=function(t,e){var i=n.get(t);t.version>0&&i.__version!==t.version?T(i,t,e):(r.activeTexture(33984+e),r.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(t,e){var i=n.get(t);t.version>0&&i.__version!==t.version?T(i,t,e):(r.activeTexture(33984+e),r.bindTexture(32879,i.__webglTexture))},this.setTextureCube=w,this.setTextureCubeDynamic=_,this.setupRenderTarget=function(e){var s=n.get(e),c=n.get(e.texture);e.addEventListener("dispose",y),c.__webglTexture=t.createTexture(),o.memory.textures++;var l=!0===e.isWebGLRenderTargetCube,h=!0===e.isWebGLMultisampleRenderTarget,u=p(e)||i.isWebGL2;if(l){s.__webglFramebuffer=[];for(var v=0;v<6;v++)s.__webglFramebuffer[v]=t.createFramebuffer()}else if(s.__webglFramebuffer=t.createFramebuffer(),h)if(i.isWebGL2){s.__webglMultisampledFramebuffer=t.createFramebuffer(),s.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,s.__webglColorRenderbuffer);var g=m(a.convert(e.texture.format),a.convert(e.texture.type)),x=R(e);t.renderbufferStorageMultisample(36161,x,g,e.width,e.height),t.bindFramebuffer(36160,s.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,s.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(s.__webglDepthRenderbuffer=t.createRenderbuffer(),A(s.__webglDepthRenderbuffer,e,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(l){for(r.bindTexture(34067,c.__webglTexture),M(34067,e.texture,u),v=0;v<6;v++)E(s.__webglFramebuffer[v],e,36064,34069+v);d(e.texture,u)&&f(34067,e.texture,e.width,e.height),r.bindTexture(34067,null)}else r.bindTexture(3553,c.__webglTexture),M(3553,e.texture,u),E(s.__webglFramebuffer,e,36064,3553),d(e.texture,u)&&f(3553,e.texture,e.width,e.height),r.bindTexture(3553,null);e.depthBuffer&&L(e)},this.updateRenderTargetMipmap=function(t){var e=t.texture;if(d(e,p(t)||i.isWebGL2)){var a=t.isWebGLRenderTargetCube?34067:3553,o=n.get(e).__webglTexture;r.bindTexture(a,o),f(a,e,t.width,t.height),r.bindTexture(a,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(i.isWebGL2){var r=n.get(e);t.bindFramebuffer(36008,r.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,r.__webglFramebuffer);var a=e.width,o=e.height,s=16384;e.depthBuffer&&(s|=256),e.stencilBuffer&&(s|=1024),t.blitFramebuffer(0,0,a,o,0,0,a,o,s,9728)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===C&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),C=!0),t=t.texture),b(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLRenderTargetCube&&(!1===P&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),P=!0),t=t.texture),t&&t.isCubeTexture||Array.isArray(t.image)&&6===t.image.length?w(t,e):_(t,e)}}function ml(t,e,r){return{convert:function(t){var n;if(t===mt)return 10497;if(t===vt)return 33071;if(t===gt)return 33648;if(t===yt)return 9728;if(t===xt)return 9984;if(t===wt)return 9986;if(t===Mt)return 9729;if(t===St)return 9985;if(t===Et)return 9987;if(t===Lt)return 5121;if(t===Bt)return 32819;if(t===zt)return 32820;if(t===Ft)return 33635;if(t===Rt)return 5120;if(t===Ct)return 5122;if(t===Pt)return 5123;if(t===Ot)return 5124;if(t===Dt)return 5125;if(t===Nt)return 5126;if(t===It){if(r.isWebGL2)return 5131;if(null!==(n=e.get("OES_texture_half_float")))return n.HALF_FLOAT_OES}if(t===Ut)return 6406;if(t===Ht)return 6407;if(t===Vt)return 6408;if(t===jt)return 6409;if(t===kt)return 6410;if(t===qt)return 6402;if(t===Xt)return 34041;if(t===Yt)return 6403;if(t===L)return 32774;if(t===R)return 32778;if(t===C)return 32779;if(t===D)return 0;if(t===N)return 1;if(t===I)return 768;if(t===B)return 769;if(t===z)return 770;if(t===F)return 771;if(t===G)return 772;if(t===U)return 773;if(t===H)return 774;if(t===V)return 775;if(t===j)return 776;if((t===Zt||t===Jt||t===Qt||t===Kt)&&null!==(n=e.get("WEBGL_compressed_texture_s3tc"))){if(t===Zt)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Jt)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===Qt)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Kt)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((t===$t||t===te||t===ee||t===re)&&null!==(n=e.get("WEBGL_compressed_texture_pvrtc"))){if(t===$t)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===te)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===ee)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===re)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===ne&&null!==(n=e.get("WEBGL_compressed_texture_etc1")))return n.COMPRESSED_RGB_ETC1_WEBGL;if((t===ie||t===ae||t===oe||t===se||t===ce||t===le||t===he||t===ue||t===pe||t===de||t===fe||t===me||t===ve||t===ge)&&null!==(n=e.get("WEBGL_compressed_texture_astc")))return t;if(t===P||t===O){if(r.isWebGL2){if(t===P)return 32775;if(t===O)return 32776}if(null!==(n=e.get("EXT_blend_minmax"))){if(t===P)return n.MIN_EXT;if(t===O)return n.MAX_EXT}}if(t===Gt){if(r.isWebGL2)return 34042;if(null!==(n=e.get("WEBGL_depth_texture")))return n.UNSIGNED_INT_24_8_WEBGL}return 0}}}function vl(){qr.call(this),this.type="Group"}function gl(t){Hi.call(this),this.cameras=t||[]}vl.prototype=Object.assign(Object.create(qr.prototype),{constructor:vl,isGroup:!0}),gl.prototype=Object.assign(Object.create(Hi.prototype),{constructor:gl,isArrayCamera:!0});var yl,xl=new ur,bl=new ur;function wl(t,e,r){xl.setFromMatrixPosition(e.matrixWorld),bl.setFromMatrixPosition(r.matrixWorld);var n=xl.distanceTo(bl),i=e.projectionMatrix.elements,a=r.projectionMatrix.elements,o=i[14]/(i[10]-1),s=i[14]/(i[10]+1),c=(i[9]+1)/i[5],l=(i[9]-1)/i[5],h=(i[8]-1)/i[0],u=(a[8]+1)/a[0],p=o*h,d=o*u,f=n/(-h+u),m=f*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.getInverse(t.matrixWorld);var v=o+f,g=s+f,y=p-m,x=d+(n-m),b=c*s/g*v,w=l*s/g*v;t.projectionMatrix.makePerspective(y,x,b,w,v,g)}function _l(t){var e,r,n=this,i=null,a=null,o=null,s=[],c=new Lr,l=new Lr,h=1,u="local-floor";"undefined"!=typeof window&&"VRFrameData"in window&&(a=new window.VRFrameData,window.addEventListener("vrdisplaypresentchange",w,!1));var p=new Lr,d=new cr,f=new ur,m=new Hi;m.viewport=new yr,m.layers.enable(1);var v=new Hi;v.viewport=new yr,v.layers.enable(2);var g=new gl([m,v]);function y(){return null!==i&&!0===i.isPresenting}g.layers.enable(1),g.layers.enable(2);var x,b=new sr;function w(){if(y()){var a=i.getEyeParameters("left");e=2*a.renderWidth*h,r=a.renderHeight*h,x=t.getPixelRatio(),t.getSize(b),t.setDrawingBufferSize(e,r,1),m.viewport.set(0,0,e/2,r),v.viewport.set(e/2,0,e/2,r),T.start(),n.dispatchEvent({type:"sessionstart"})}else n.enabled&&t.setDrawingBufferSize(b.width,b.height,x),T.stop(),n.dispatchEvent({type:"sessionend"})}var _=[];function M(t){for(var e=navigator.getGamepads&&navigator.getGamepads(),r=0,n=0,i=e.length;r<i;r++){var a=e[r];if(a&&("Daydream Controller"===a.id||"Gear VR Controller"===a.id||"Oculus Go Controller"===a.id||"OpenVR Gamepad"===a.id||a.id.startsWith("Oculus Touch")||a.id.startsWith("HTC Vive Focus")||a.id.startsWith("Spatial Controller"))){if(n===t)return a;n++}}}function S(t,n){null!==n&&4===n.length&&t.set(n[0]*e,n[1]*r,n[2]*e,n[3]*r)}this.enabled=!1,this.getController=function(t){var e=s[t];return void 0===e&&((e=new vl).matrixAutoUpdate=!1,e.visible=!1,s[t]=e),e},this.getDevice=function(){return i},this.setDevice=function(t){void 0!==t&&(i=t),T.setContext(t)},this.setFramebufferScaleFactor=function(t){h=t},this.setReferenceSpaceType=function(t){u=t},this.setPoseTarget=function(t){void 0!==t&&(o=t)},this.getCamera=function(t){var e="local-floor"===u?1.6:0;if(!1===y())return t.position.set(0,e,0),t.rotation.set(0,0,0),t;if(i.depthNear=t.near,i.depthFar=t.far,i.getFrameData(a),"local-floor"===u){var r=i.stageParameters;r?c.fromArray(r.sittingToStandingTransform):c.makeTranslation(0,e,0)}var n=a.pose,h=null!==o?o:t;h.matrix.copy(c),h.matrix.decompose(h.position,h.quaternion,h.scale),null!==n.orientation&&(d.fromArray(n.orientation),h.quaternion.multiply(d)),null!==n.position&&(d.setFromRotationMatrix(c),f.fromArray(n.position),f.applyQuaternion(d),h.position.add(f)),h.updateMatrixWorld(),m.near=t.near,v.near=t.near,m.far=t.far,v.far=t.far,m.matrixWorldInverse.fromArray(a.leftViewMatrix),v.matrixWorldInverse.fromArray(a.rightViewMatrix),l.getInverse(c),"local-floor"===u&&(m.matrixWorldInverse.multiply(l),v.matrixWorldInverse.multiply(l));var x=h.parent;null!==x&&(p.getInverse(x.matrixWorld),m.matrixWorldInverse.multiply(p),v.matrixWorldInverse.multiply(p)),m.matrixWorld.getInverse(m.matrixWorldInverse),v.matrixWorld.getInverse(v.matrixWorldInverse),m.projectionMatrix.fromArray(a.leftProjectionMatrix),v.projectionMatrix.fromArray(a.rightProjectionMatrix),wl(g,m,v);var b=i.getLayers();if(b.length){var w=b[0];S(m.viewport,w.leftBounds),S(v.viewport,w.rightBounds)}return function(){for(var t=0;t<s.length;t++){var e=s[t],r=M(t);if(void 0!==r&&void 0!==r.pose){if(null===r.pose)return;var n=r.pose;!1===n.hasPosition&&e.position.set(.2,-.6,-.05),null!==n.position&&e.position.fromArray(n.position),null!==n.orientation&&e.quaternion.fromArray(n.orientation),e.matrix.compose(e.position,e.quaternion,e.scale),e.matrix.premultiply(c),e.matrix.decompose(e.position,e.quaternion,e.scale),e.matrixWorldNeedsUpdate=!0,e.visible=!0;var i="Daydream Controller"===r.id?0:1;void 0===_[t]&&(_[t]=!1),_[t]!==r.buttons[i].pressed&&(_[t]=r.buttons[i].pressed,!0===_[t]?e.dispatchEvent({type:"selectstart"}):(e.dispatchEvent({type:"selectend"}),e.dispatchEvent({type:"select"})))}else e.visible=!1}}(),g},this.getStandingMatrix=function(){return c},this.isPresenting=y;var T=new xs;this.setAnimationLoop=function(t){T.setAnimationLoop(t),y()&&T.start()},this.submitFrame=function(){y()&&i.submitFrame()},this.dispose=function(){"undefined"!=typeof window&&window.removeEventListener("vrdisplaypresentchange",w)},this.setFrameOfReferenceType=function(){console.warn("THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.")}}function Ml(t,e){var r=this,n=null,i=null,a="local-floor",o=null,s=[],c=[];function l(){return null!==n&&null!==i}var h=new Hi;h.layers.enable(1),h.viewport=new yr;var u=new Hi;u.layers.enable(2),u.viewport=new yr;var p=new gl([h,u]);function d(t){for(var e=0;e<s.length;e++)c[e]===t.inputSource&&s[e].dispatchEvent({type:t.type})}function f(){t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),y.stop(),r.dispatchEvent({type:"sessionend"})}function m(t){i=t,y.setContext(n),y.start(),r.dispatchEvent({type:"sessionstart"})}function v(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.getInverse(t.matrixWorld)}p.layers.enable(1),p.layers.enable(2),this.enabled=!1,this.getController=function(t){var e=s[t];return void 0===e&&((e=new vl).matrixAutoUpdate=!1,e.visible=!1,s[t]=e),e},this.setFramebufferScaleFactor=function(t){},this.setReferenceSpaceType=function(t){a=t},this.getSession=function(){return n},this.setSession=function(t){null!==(n=t)&&(n.addEventListener("select",d),n.addEventListener("selectstart",d),n.addEventListener("selectend",d),n.addEventListener("end",f),n.updateRenderState({baseLayer:new XRWebGLLayer(n,e)}),n.requestReferenceSpace(a).then(m),c=n.inputSources,n.addEventListener("inputsourceschange",function(){c=n.inputSources,console.log(c);for(var t=0;t<s.length;t++){s[t].userData.inputSource=c[t]}}))},this.getCamera=function(t){if(l()){var e=t.parent,r=p.cameras;v(p,e);for(var n=0;n<r.length;n++)v(r[n],e);t.matrixWorld.copy(p.matrixWorld);for(var i=t.children,a=(n=0,i.length);n<a;n++)i[n].updateMatrixWorld(!0);return wl(p,h,u),p}return t},this.isPresenting=l;var g=null;var y=new xs;y.setAnimationLoop(function(e,r){if(null!==(o=r.getViewerPose(i))){var a=o.views,l=n.renderState.baseLayer;t.setFramebuffer(l.framebuffer);for(var h=0;h<a.length;h++){var u=a[h],d=l.getViewport(u),f=u.transform.inverse.matrix,m=p.cameras[h];m.matrix.fromArray(f).getInverse(m.matrix),m.projectionMatrix.fromArray(u.projectionMatrix),m.viewport.set(d.x,d.y,d.width,d.height),0===h&&p.matrix.copy(m.matrix)}}for(h=0;h<s.length;h++){var v=s[h],y=c[h];if(y){var x=r.getPose(y.targetRaySpace,i);if(null!==x){v.matrix.fromArray(x.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.visible=!0;continue}}v.visible=!1}g&&g(e)}),this.setAnimationLoop=function(t){g=t},this.dispose=function(){},this.getStandingMatrix=function(){return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."),new Lr},this.getDevice=function(){console.warn("THREE.WebXRManager: getDevice() has been deprecated.")},this.setDevice=function(){console.warn("THREE.WebXRManager: setDevice() has been deprecated.")},this.setFrameOfReferenceType=function(){console.warn("THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.")},this.submitFrame=function(){}}function Sl(t){var e=void 0!==(t=t||{}).canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),r=void 0!==t.context?t.context:null,n=void 0!==t.alpha&&t.alpha,i=void 0===t.depth||t.depth,a=void 0===t.stencil||t.stencil,o=void 0!==t.antialias&&t.antialias,s=void 0===t.premultipliedAlpha||t.premultipliedAlpha,c=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,l=void 0!==t.powerPreference?t.powerPreference:"default",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat,u=null,p=null;this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=rt,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var d,f,v,g,y,x,b,w,_,M,S,T,E,A,L,R,C,P,O=this,D=!1,N=null,I=0,B=0,z=null,F=null,G=-1,U={geometry:null,program:null,wireframe:!1},H=null,V=null,j=new yr,k=new yr,W=null,q=e.width,X=e.height,Y=1,Z=new yr(0,0,q,X),J=new yr(0,0,q,X),Q=!1,K=new $i,$=new Es,tt=!1,et=!1,nt=new Lr,it=new ur;function at(){return null===z?Y:1}try{var ot={alpha:n,depth:i,stencil:a,antialias:o,premultipliedAlpha:s,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:h,xrCompatible:!0};if(e.addEventListener("webglcontextlost",ht,!1),e.addEventListener("webglcontextrestored",ut,!1),null===(d=r||e.getContext("webgl",ot)||e.getContext("experimental-webgl",ot)))throw null!==e.getContext("webgl")?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");void 0===d.getShaderPrecisionFormat&&(d.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(Mt){throw console.error("THREE.WebGLRenderer: "+Mt.message),Mt}function st(){f=new As(d),(v=new Ts(d,f,t)).isWebGL2||(f.get("WEBGL_depth_texture"),f.get("OES_texture_float"),f.get("OES_texture_half_float"),f.get("OES_texture_half_float_linear"),f.get("OES_standard_derivatives"),f.get("OES_element_index_uint"),f.get("ANGLE_instanced_arrays")),f.get("OES_texture_float_linear"),P=new ml(d,f,v),(g=new dl(d,f,P,v)).scissor(k.copy(J).multiplyScalar(Y).floor()),g.viewport(j.copy(Z).multiplyScalar(Y).floor()),y=new Cs(d),x=new Qc,b=new fl(d,f,g,x,v,P,y),w=new bs(d),_=new Ls(d,w,y),M=new Ds(_,y),L=new Os(d),S=new Jc(O,f,v),T=new el,E=new sl,A=new Ms(O,g,M,s),R=new Ss(d,f,y,v),C=new Rs(d,f,y,v),y.programs=S.programs,O.capabilities=v,O.extensions=f,O.properties=x,O.renderLists=T,O.state=g,O.info=y}st();var ct="undefined"!=typeof navigator&&"xr"in navigator&&"supportsSession"in navigator.xr?new Ml(O,d):new _l(O);this.vr=ct;var lt=new pl(O,M,v.maxTextureSize);function ht(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),D=!0}function ut(){console.log("THREE.WebGLRenderer: Context Restored."),D=!1,st()}function pt(t){var e=t.target;e.removeEventListener("dispose",pt),function(t){dt(t),x.remove(t)}(e)}function dt(t){var e=x.get(t).program;t.program=void 0,void 0!==e&&S.releaseProgram(e)}this.shadowMap=lt,this.getContext=function(){return d},this.getContextAttributes=function(){return d.getContextAttributes()},this.forceContextLoss=function(){var t=f.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){var t=f.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return Y},this.setPixelRatio=function(t){void 0!==t&&(Y=t,this.setSize(q,X,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new sr),t.set(q,X)},this.setSize=function(t,r,n){ct.isPresenting()?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(q=t,X=r,e.width=Math.floor(t*Y),e.height=Math.floor(r*Y),!1!==n&&(e.style.width=t+"px",e.style.height=r+"px"),this.setViewport(0,0,t,r))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new sr),t.set(q*Y,X*Y).floor()},this.setDrawingBufferSize=function(t,r,n){q=t,X=r,Y=n,e.width=Math.floor(t*n),e.height=Math.floor(r*n),this.setViewport(0,0,t,r)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new yr),t.copy(j)},this.getViewport=function(t){return t.copy(Z)},this.setViewport=function(t,e,r,n){t.isVector4?Z.set(t.x,t.y,t.z,t.w):Z.set(t,e,r,n),g.viewport(j.copy(Z).multiplyScalar(Y).floor())},this.getScissor=function(t){return t.copy(J)},this.setScissor=function(t,e,r,n){t.isVector4?J.set(t.x,t.y,t.z,t.w):J.set(t,e,r,n),g.scissor(k.copy(J).multiplyScalar(Y).floor())},this.getScissorTest=function(){return Q},this.setScissorTest=function(t){g.setScissorTest(Q=t)},this.getClearColor=function(){return A.getClearColor()},this.setClearColor=function(){A.setClearColor.apply(A,arguments)},this.getClearAlpha=function(){return A.getClearAlpha()},this.setClearAlpha=function(){A.setClearAlpha.apply(A,arguments)},this.clear=function(t,e,r){var n=0;(void 0===t||t)&&(n|=16384),(void 0===e||e)&&(n|=256),(void 0===r||r)&&(n|=1024),d.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",ht,!1),e.removeEventListener("webglcontextrestored",ut,!1),T.dispose(),E.dispose(),x.dispose(),M.dispose(),ct.dispose(),mt.stop()},this.renderBufferImmediate=function(t,e){g.initAttributes();var r=x.get(t);t.hasPositions&&!r.position&&(r.position=d.createBuffer()),t.hasNormals&&!r.normal&&(r.normal=d.createBuffer()),t.hasUvs&&!r.uv&&(r.uv=d.createBuffer()),t.hasColors&&!r.color&&(r.color=d.createBuffer());var n=e.getAttributes();t.hasPositions&&(d.bindBuffer(34962,r.position),d.bufferData(34962,t.positionArray,35048),g.enableAttribute(n.position),d.vertexAttribPointer(n.position,3,5126,!1,0,0)),t.hasNormals&&(d.bindBuffer(34962,r.normal),d.bufferData(34962,t.normalArray,35048),g.enableAttribute(n.normal),d.vertexAttribPointer(n.normal,3,5126,!1,0,0)),t.hasUvs&&(d.bindBuffer(34962,r.uv),d.bufferData(34962,t.uvArray,35048),g.enableAttribute(n.uv),d.vertexAttribPointer(n.uv,2,5126,!1,0,0)),t.hasColors&&(d.bindBuffer(34962,r.color),d.bufferData(34962,t.colorArray,35048),g.enableAttribute(n.color),d.vertexAttribPointer(n.color,3,5126,!1,0,0)),g.disableUnusedAttributes(),d.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,r,n,i,a){var o=i.isMesh&&i.matrixWorld.determinant()<0;g.setMaterial(n,o);var s=xt(t,e,n,i),c=!1;U.geometry===r.id&&U.program===s.id&&U.wireframe===(!0===n.wireframe)||(U.geometry=r.id,U.program=s.id,U.wireframe=!0===n.wireframe,c=!0),i.morphTargetInfluences&&(L.update(i,r,n,s),c=!0);var l,h=r.index,u=r.attributes.position,p=1;!0===n.wireframe&&(h=_.getWireframeAttribute(r),p=2);var m=R;null!==h&&(l=w.get(h),(m=C).setIndex(l)),c&&(!function(t,e,r){if(r&&r.isInstancedBufferGeometry&&!v.isWebGL2&&null===f.get("ANGLE_instanced_arrays"))return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");g.initAttributes();var n=r.attributes,i=e.getAttributes(),a=t.defaultAttributeValues;for(var o in i){var s=i[o];if(s>=0){var c=n[o];if(void 0!==c){var l=c.normalized,h=c.itemSize,u=w.get(c);if(void 0===u)continue;var p=u.buffer,m=u.type,y=u.bytesPerElement;if(c.isInterleavedBufferAttribute){var x=c.data,b=x.stride,_=c.offset;x&&x.isInstancedInterleavedBuffer?(g.enableAttributeAndDivisor(s,x.meshPerAttribute),void 0===r.maxInstancedCount&&(r.maxInstancedCount=x.meshPerAttribute*x.count)):g.enableAttribute(s),d.bindBuffer(34962,p),d.vertexAttribPointer(s,h,m,l,b*y,_*y)}else c.isInstancedBufferAttribute?(g.enableAttributeAndDivisor(s,c.meshPerAttribute),void 0===r.maxInstancedCount&&(r.maxInstancedCount=c.meshPerAttribute*c.count)):g.enableAttribute(s),d.bindBuffer(34962,p),d.vertexAttribPointer(s,h,m,l,0,0)}else if(void 0!==a){var M=a[o];if(void 0!==M)switch(M.length){case 2:d.vertexAttrib2fv(s,M);break;case 3:d.vertexAttrib3fv(s,M);break;case 4:d.vertexAttrib4fv(s,M);break;default:d.vertexAttrib1fv(s,M)}}}}g.disableUnusedAttributes()}(n,s,r),null!==h&&d.bindBuffer(34963,l.buffer));var y=1/0;null!==h?y=h.count:void 0!==u&&(y=u.count);var x=r.drawRange.start*p,b=r.drawRange.count*p,M=null!==a?a.start*p:0,S=null!==a?a.count*p:1/0,T=Math.max(x,M),E=Math.min(y,x+b,M+S)-1,A=Math.max(0,E-T+1);if(0!==A){if(i.isMesh)if(!0===n.wireframe)g.setLineWidth(n.wireframeLinewidth*at()),m.setMode(1);else switch(i.drawMode){case Ae:m.setMode(4);break;case Le:m.setMode(5);break;case Re:m.setMode(6)}else if(i.isLine){var P=n.linewidth;void 0===P&&(P=1),g.setLineWidth(P*at()),i.isLineSegments?m.setMode(1):i.isLineLoop?m.setMode(2):m.setMode(3)}else i.isPoints?m.setMode(0):i.isSprite&&m.setMode(4);r&&r.isInstancedBufferGeometry?r.maxInstancedCount>0&&m.renderInstances(r,T,A):m.render(T,A)}},this.compile=function(t,e){(p=E.get(t,e)).init(),t.traverse(function(t){t.isLight&&(p.pushLight(t),t.castShadow&&p.pushShadow(t))}),p.setupLights(e),t.traverse(function(e){if(e.material)if(Array.isArray(e.material))for(var r=0;r<e.material.length;r++)yt(e.material[r],t.fog,e);else yt(e.material,t.fog,e)})};var ft=null;var mt=new xs;function vt(t,e,r,n){for(var i=0,a=t.length;i<a;i++){var o=t[i],s=o.object,c=o.geometry,l=void 0===n?o.material:n,h=o.group;if(r.isArrayCamera){V=r;for(var u=r.cameras,d=0,f=u.length;d<f;d++){var m=u[d];s.layers.test(m.layers)&&(g.viewport(j.copy(m.viewport)),p.setupLights(m),gt(s,e,m,c,l,h))}}else V=null,gt(s,e,r,c,l,h)}}function gt(t,e,r,n,i,a){if(t.onBeforeRender(O,e,r,n,i,a),p=E.get(e,V||r),t.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){g.setMaterial(i);var o=xt(r,e.fog,i,t);U.geometry=null,U.program=null,U.wireframe=!1,function(t,e){t.render(function(t){O.renderBufferImmediate(t,e)})}(t,o)}else O.renderBufferDirect(r,e.fog,n,i,t,a);t.onAfterRender(O,e,r,n,i,a),p=E.get(e,V||r)}function yt(t,e,r){var n=x.get(t),i=p.state.lights,a=p.state.shadowsArray,o=i.state.version,s=S.getParameters(t,i.state,a,e,$.numPlanes,$.numIntersection,r),c=S.getProgramCode(t,s),l=n.program,h=!0;if(void 0===l)t.addEventListener("dispose",pt);else if(l.code!==c)dt(t);else if(n.lightsStateVersion!==o)n.lightsStateVersion=o,h=!1;else{if(void 0!==s.shaderID)return;h=!1}if(h){if(s.shaderID){var u=ys[s.shaderID];n.shader={name:t.type,uniforms:Ni(u.uniforms),vertexShader:u.vertexShader,fragmentShader:u.fragmentShader}}else n.shader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};t.onBeforeCompile(n.shader,O),c=S.getProgramCode(t,s),l=S.acquireProgram(t,n.shader,s,c),n.program=l,t.program=l}var d=l.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(var f=0;f<O.maxMorphTargets;f++)d["morphTarget"+f]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0;for(f=0;f<O.maxMorphNormals;f++)d["morphNormal"+f]>=0&&t.numSupportedMorphNormals++}var m=n.shader.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(n.numClippingPlanes=$.numPlanes,n.numIntersection=$.numIntersection,m.clippingPlanes=$.uniform),n.fog=e,n.lightsStateVersion=o,t.lights&&(m.ambientLightColor.value=i.state.ambient,m.lightProbe.value=i.state.probe,m.directionalLights.value=i.state.directional,m.spotLights.value=i.state.spot,m.rectAreaLights.value=i.state.rectArea,m.pointLights.value=i.state.point,m.hemisphereLights.value=i.state.hemi,m.directionalShadowMap.value=i.state.directionalShadowMap,m.directionalShadowMatrix.value=i.state.directionalShadowMatrix,m.spotShadowMap.value=i.state.spotShadowMap,m.spotShadowMatrix.value=i.state.spotShadowMatrix,m.pointShadowMap.value=i.state.pointShadowMap,m.pointShadowMatrix.value=i.state.pointShadowMatrix);var v=n.program.getUniforms(),g=Oc.seqWithValue(v.seq,m);n.uniformsList=g}function xt(t,e,r,n){b.resetTextureUnits();var i=x.get(r),a=p.state.lights;if(tt&&(et||t!==H)){var o=t===H&&r.id===G;$.setState(r.clippingPlanes,r.clipIntersection,r.clipShadows,t,i,o)}!1===r.needsUpdate&&(void 0===i.program?r.needsUpdate=!0:r.fog&&i.fog!==e?r.needsUpdate=!0:r.lights&&i.lightsStateVersion!==a.state.version?r.needsUpdate=!0:void 0===i.numClippingPlanes||i.numClippingPlanes===$.numPlanes&&i.numIntersection===$.numIntersection||(r.needsUpdate=!0)),r.needsUpdate&&(yt(r,e,n),r.needsUpdate=!1);var s,c,l=!1,h=!1,u=!1,f=i.program,y=f.getUniforms(),w=i.shader.uniforms;if(g.useProgram(f.program)&&(l=!0,h=!0,u=!0),r.id!==G&&(G=r.id,h=!0),l||H!==t){if(y.setValue(d,"projectionMatrix",t.projectionMatrix),v.logarithmicDepthBuffer&&y.setValue(d,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),H!==t&&(H=t,h=!0,u=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshStandardMaterial||r.envMap){var _=y.map.cameraPosition;void 0!==_&&_.setValue(d,it.setFromMatrixPosition(t.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.skinning)&&y.setValue(d,"viewMatrix",t.matrixWorldInverse)}if(r.skinning){y.setOptional(d,n,"bindMatrix"),y.setOptional(d,n,"bindMatrixInverse");var M=n.skeleton;if(M){var S=M.bones;if(v.floatVertexTextures){if(void 0===M.boneTexture){var T=Math.sqrt(4*S.length);T=or.ceilPowerOfTwo(T),T=Math.max(T,4);var E=new Float32Array(T*T*4);E.set(M.boneMatrices);var A=new qi(E,T,T,Vt,Nt);A.needsUpdate=!0,M.boneMatrices=E,M.boneTexture=A,M.boneTextureSize=T}y.setValue(d,"boneTexture",M.boneTexture,b),y.setValue(d,"boneTextureSize",M.boneTextureSize)}else y.setOptional(d,M,"boneMatrices")}}return h&&(y.setValue(d,"toneMappingExposure",O.toneMappingExposure),y.setValue(d,"toneMappingWhitePoint",O.toneMappingWhitePoint),r.lights&&(c=u,(s=w).ambientLightColor.needsUpdate=c,s.lightProbe.needsUpdate=c,s.directionalLights.needsUpdate=c,s.pointLights.needsUpdate=c,s.spotLights.needsUpdate=c,s.rectAreaLights.needsUpdate=c,s.hemisphereLights.needsUpdate=c),e&&r.fog&&function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}(w,e),r.isMeshBasicMaterial?bt(w,r):r.isMeshLambertMaterial?(bt(w,r),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(w,r)):r.isMeshPhongMaterial?(bt(w,r),r.isMeshToonMaterial?function(t,e){wt(t,e),e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(w,r):wt(w,r)):r.isMeshStandardMaterial?(bt(w,r),r.isMeshPhysicalMaterial?function(t,e){_t(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen);e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===m&&t.clearcoatNormalScale.value.negate());t.transparency.value=e.transparency}(w,r):_t(w,r)):r.isMeshMatcapMaterial?(bt(w,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(w,r)):r.isMeshDepthMaterial?(bt(w,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(w,r)):r.isMeshDistanceMaterial?(bt(w,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(w,r)):r.isMeshNormalMaterial?(bt(w,r),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(w,r)):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(w,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(w,r)):r.isPointsMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*Y,t.scale.value=.5*X,t.map.value=e.map,null!==e.map&&(!0===e.map.matrixAutoUpdate&&e.map.updateMatrix(),t.uvTransform.value.copy(e.map.matrix))}(w,r):r.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,t.map.value=e.map,null!==e.map&&(!0===e.map.matrixAutoUpdate&&e.map.updateMatrix(),t.uvTransform.value.copy(e.map.matrix))}(w,r):r.isShadowMaterial&&(w.color.value.copy(r.color),w.opacity.value=r.opacity),void 0!==w.ltc_1&&(w.ltc_1.value=gs.LTC_1),void 0!==w.ltc_2&&(w.ltc_2.value=gs.LTC_2),Oc.upload(d,i.uniformsList,w,b)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(Oc.upload(d,i.uniformsList,w,b),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&y.setValue(d,"center",n.center),y.setValue(d,"modelViewMatrix",n.modelViewMatrix),y.setValue(d,"normalMatrix",n.normalMatrix),y.setValue(d,"modelMatrix",n.matrixWorld),f}function bt(t,e){var r;t.opacity.value=e.opacity,e.color&&t.diffuse.value.copy(e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap),e.envMap&&(t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap.isCubeTexture?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio,t.maxMipLevel.value=x.get(e.envMap).__maxMipLevel),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity),e.map?r=e.map:e.specularMap?r=e.specularMap:e.displacementMap?r=e.displacementMap:e.normalMap?r=e.normalMap:e.bumpMap?r=e.bumpMap:e.roughnessMap?r=e.roughnessMap:e.metalnessMap?r=e.metalnessMap:e.alphaMap?r=e.alphaMap:e.emissiveMap&&(r=e.emissiveMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}function wt(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function _t(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}mt.setAnimationLoop(function(t){ct.isPresenting()||ft&&ft(t)}),"undefined"!=typeof window&&mt.setContext(window),this.setAnimationLoop=function(t){ft=t,ct.setAnimationLoop(t),mt.start()},this.render=function(t,e){var r,n;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),r=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),n=arguments[3]),e&&e.isCamera){if(!D){U.geometry=null,U.program=null,U.wireframe=!1,G=-1,H=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),ct.enabled&&(e=ct.getCamera(e)),(p=E.get(t,e)).init(),t.onBeforeRender(O,t,e,r||z),nt.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),K.setFromMatrix(nt),et=this.localClippingEnabled,tt=$.init(this.clippingPlanes,et,e),(u=T.get(t,e)).init(),function t(e,r,n,i){if(!1===e.visible)return;var a=e.layers.test(r.layers);if(a)if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(r);else if(e.isLight)p.pushLight(e),e.castShadow&&p.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||K.intersectsSprite(e)){i&&it.setFromMatrixPosition(e.matrixWorld).applyMatrix4(nt);var o=M.update(e),s=e.material;s.visible&&u.push(e,o,s,n,it.z,null)}}else if(e.isImmediateRenderObject)i&&it.setFromMatrixPosition(e.matrixWorld).applyMatrix4(nt),u.push(e,null,e.material,n,it.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.update(),!e.frustumCulled||K.intersectsObject(e))){i&&it.setFromMatrixPosition(e.matrixWorld).applyMatrix4(nt);var o=M.update(e),s=e.material;if(Array.isArray(s))for(var c=o.groups,l=0,h=c.length;l<h;l++){var d=c[l],f=s[d.materialIndex];f&&f.visible&&u.push(e,o,f,n,it.z,d)}else s.visible&&u.push(e,o,s,n,it.z,null)}var m=e.children;for(var l=0,h=m.length;l<h;l++)t(m[l],r,n,i)}(t,e,0,O.sortObjects),!0===O.sortObjects&&u.sort(),tt&&$.beginShadows();var i=p.state.shadowsArray;lt.render(i,t,e),p.setupLights(e),tt&&$.endShadows(),this.info.autoReset&&this.info.reset(),void 0!==r&&this.setRenderTarget(r),A.render(u,t,e,n);var a=u.opaque,o=u.transparent;if(t.overrideMaterial){var s=t.overrideMaterial;a.length&&vt(a,t,e,s),o.length&&vt(o,t,e,s)}else a.length&&vt(a,t,e),o.length&&vt(o,t,e);t.onAfterRender(O,t,e),null!==z&&(b.updateRenderTargetMipmap(z),b.updateMultisampleRenderTarget(z)),g.buffers.depth.setTest(!0),g.buffers.depth.setMask(!0),g.buffers.color.setMask(!0),g.setPolygonOffset(!1),ct.enabled&&ct.submitFrame(),u=null,p=null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.setFramebuffer=function(t){N!==t&&d.bindFramebuffer(36160,t),N=t},this.getActiveCubeFace=function(){return I},this.getActiveMipmapLevel=function(){return B},this.getRenderTarget=function(){return z},this.setRenderTarget=function(t,e,r){z=t,I=e,B=r,t&&void 0===x.get(t).__webglFramebuffer&&b.setupRenderTarget(t);var n=N,i=!1;if(t){var a=x.get(t).__webglFramebuffer;t.isWebGLRenderTargetCube?(n=a[e||0],i=!0):n=t.isWebGLMultisampleRenderTarget?x.get(t).__webglMultisampledFramebuffer:a,j.copy(t.viewport),k.copy(t.scissor),W=t.scissorTest}else j.copy(Z).multiplyScalar(Y).floor(),k.copy(J).multiplyScalar(Y).floor(),W=Q;if(F!==n&&(d.bindFramebuffer(36160,n),F=n),g.viewport(j),g.scissor(k),g.setScissorTest(W),i){var o=x.get(t.texture);d.framebufferTexture2D(36160,36064,34069+(e||0),o.__webglTexture,r||0)}},this.readRenderTargetPixels=function(t,e,r,n,i,a,o){if(t&&t.isWebGLRenderTarget){var s=x.get(t).__webglFramebuffer;if(t.isWebGLRenderTargetCube&&void 0!==o&&(s=s[o]),s){var c=!1;s!==F&&(d.bindFramebuffer(36160,s),c=!0);try{var l=t.texture,h=l.format,u=l.type;if(h!==Vt&&P.convert(h)!==d.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(u===Lt||P.convert(u)===d.getParameter(35738)||u===Nt&&(v.isWebGL2||f.get("OES_texture_float")||f.get("WEBGL_color_buffer_float"))||u===It&&(v.isWebGL2?f.get("EXT_color_buffer_float"):f.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===d.checkFramebufferStatus(36160)?e>=0&&e<=t.width-n&&r>=0&&r<=t.height-i&&d.readPixels(e,r,n,i,P.convert(h),P.convert(u),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{c&&d.bindFramebuffer(36160,F)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(t,e,r){var n=e.image.width,i=e.image.height,a=P.convert(e.format);b.setTexture2D(e,0),d.copyTexImage2D(3553,r||0,a,t.x,t.y,n,i,0)},this.copyTextureToTexture=function(t,e,r,n){var i=e.image.width,a=e.image.height,o=P.convert(r.format),s=P.convert(r.type);b.setTexture2D(r,0),e.isDataTexture?d.texSubImage2D(3553,n||0,t.x,t.y,i,a,o,s,e.image.data):d.texSubImage2D(3553,n||0,t.x,t.y,o,s,e.image)},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Tl(t,e){this.name="",this.color=new Dn(t),this.density=void 0!==e?e:25e-5}function El(t,e,r){this.name="",this.color=new Dn(t),this.near=void 0!==e?e:1,this.far=void 0!==r?r:1e3}function Al(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function Ll(t,e,r,n){this.data=t,this.itemSize=e,this.offset=r,this.normalized=!0===n}function Rl(t){Gn.call(this),this.type="SpriteMaterial",this.color=new Dn(16777215),this.map=null,this.rotation=0,this.sizeAttenuation=!0,this.lights=!1,this.transparent=!0,this.setValues(t)}Object.assign(_l.prototype,t.prototype),Object.assign(Ml.prototype,t.prototype),Object.assign(Tl.prototype,{isFogExp2:!0,clone:function(){return new Tl(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}),Object.assign(El.prototype,{isFog:!0,clone:function(){return new El(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}),Object.defineProperty(Al.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Al.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");return this.count=void 0!==t?t.length/this.stride:0,this.array=t,this},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.dynamic=t.dynamic,this},copyAt:function(t,e,r){t*=this.stride,r*=e.stride;for(var n=0,i=this.stride;n<i;n++)this.array[t+n]=e.array[r+n];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}}),Object.defineProperties(Ll.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(Ll.prototype,{isInterleavedBufferAttribute:!0,setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=r,this},setXYZ:function(t,e,r,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=r,this.data.array[t+2]=n,this},setXYZW:function(t,e,r,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=r,this.data.array[t+2]=n,this.data.array[t+3]=i,this}}),Rl.prototype=Object.create(Gn.prototype),Rl.prototype.constructor=Rl,Rl.prototype.isSpriteMaterial=!0,Rl.prototype.copy=function(t){return Gn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};var Cl=new ur,Pl=new ur,Ol=new ur,Dl=new sr,Nl=new sr,Il=new Lr,Bl=new ur,zl=new ur,Fl=new ur,Gl=new sr,Ul=new sr,Hl=new sr;function Vl(t){if(qr.call(this),this.type="Sprite",void 0===yl){yl=new oi;var e=new Al(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);yl.setIndex([0,1,2,0,2,3]),yl.addAttribute("position",new Ll(e,3,0,!1)),yl.addAttribute("uv",new Ll(e,2,3,!1))}this.geometry=yl,this.material=void 0!==t?t:new Rl,this.center=new sr(.5,.5)}function jl(t,e,r,n,i,a){Dl.subVectors(t,r).addScalar(.5).multiply(n),void 0!==i?(Nl.x=a*Dl.x-i*Dl.y,Nl.y=i*Dl.x+a*Dl.y):Nl.copy(Dl),t.copy(e),t.x+=Nl.x,t.y+=Nl.y,t.applyMatrix4(Il)}Vl.prototype=Object.assign(Object.create(qr.prototype),{constructor:Vl,isSprite:!0,raycast:function(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Pl.setFromMatrixScale(this.matrixWorld),Il.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Ol.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Pl.multiplyScalar(-Ol.z);var r,n,i=this.material.rotation;0!==i&&(n=Math.cos(i),r=Math.sin(i));var a=this.center;jl(Bl.set(-.5,-.5,0),Ol,a,Pl,r,n),jl(zl.set(.5,-.5,0),Ol,a,Pl,r,n),jl(Fl.set(.5,.5,0),Ol,a,Pl,r,n),Gl.set(0,0),Ul.set(1,0),Hl.set(1,1);var o=t.ray.intersectTriangle(Bl,zl,Fl,!1,Cl);if(null!==o||(jl(zl.set(-.5,.5,0),Ol,a,Pl,r,n),Ul.set(0,1),null!==(o=t.ray.intersectTriangle(Bl,Fl,zl,!1,Cl)))){var s=t.ray.origin.distanceTo(Cl);s<t.near||s>t.far||e.push({distance:s,point:Cl.clone(),uv:Rn.getUV(Cl,Bl,zl,Fl,Gl,Ul,Hl,new sr),face:null,object:this})}},clone:function(){return new this.constructor(this.material).copy(this)},copy:function(t){return qr.prototype.copy.call(this,t),void 0!==t.center&&this.center.copy(t.center),this}});var kl=new ur,Wl=new ur;function ql(){qr.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function Xl(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Si.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Lr,this.bindMatrixInverse=new Lr}ql.prototype=Object.assign(Object.create(qr.prototype),{constructor:ql,isLOD:!0,copy:function(t){qr.prototype.copy.call(this,t,!1);for(var e=t.levels,r=0,n=e.length;r<n;r++){var i=e[r];this.addLevel(i.object.clone(),i.distance)}return this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var r=this.levels,n=0;n<r.length&&!(e<r[n].distance);n++);return r.splice(n,0,{distance:e,object:t}),this.add(t),this},getObjectForDistance:function(t){for(var e=this.levels,r=1,n=e.length;r<n&&!(t<e[r].distance);r++);return e[r-1].object},raycast:function(t,e){kl.setFromMatrixPosition(this.matrixWorld);var r=t.ray.origin.distanceTo(kl);this.getObjectForDistance(r).raycast(t,e)},update:function(t){var e=this.levels;if(e.length>1){kl.setFromMatrixPosition(t.matrixWorld),Wl.setFromMatrixPosition(this.matrixWorld);var r=kl.distanceTo(Wl);e[0].object.visible=!0;for(var n=1,i=e.length;n<i&&r>=e[n].distance;n++)e[n-1].object.visible=!1,e[n].object.visible=!0;for(;n<i;n++)e[n].object.visible=!1}},toJSON:function(t){var e=qr.prototype.toJSON.call(this,t);e.object.levels=[];for(var r=this.levels,n=0,i=r.length;n<i;n++){var a=r[n];e.object.levels.push({object:a.object.uuid,distance:a.distance})}return e}}),Xl.prototype=Object.assign(Object.create(Si.prototype),{constructor:Xl,isSkinnedMesh:!0,bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var t=new yr,e=this.geometry.attributes.skinWeight,r=0,n=e.count;r<n;r++){t.x=e.getX(r),t.y=e.getY(r),t.z=e.getZ(r),t.w=e.getW(r);var i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(r,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){Si.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var Yl=new Lr,Zl=new Lr;function Jl(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var r=0,n=this.bones.length;r<n;r++)this.boneInverses.push(new Lr)}}function Ql(){qr.call(this),this.type="Bone"}function Kl(t){Gn.call(this),this.type="LineBasicMaterial",this.color=new Dn(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(t)}Object.assign(Jl.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var r=new Lr;this.bones[t]&&r.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(r)}},pose:function(){var t,e,r;for(e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){for(var t=this.bones,e=this.boneInverses,r=this.boneMatrices,n=this.boneTexture,i=0,a=t.length;i<a;i++){var o=t[i]?t[i].matrixWorld:Zl;Yl.multiplyMatrices(o,e[i]),Yl.toArray(r,16*i)}void 0!==n&&(n.needsUpdate=!0)},clone:function(){return new Jl(this.bones,this.boneInverses)},getBoneByName:function(t){for(var e=0,r=this.bones.length;e<r;e++){var n=this.bones[e];if(n.name===t)return n}}}),Ql.prototype=Object.assign(Object.create(qr.prototype),{constructor:Ql,isBone:!0}),Kl.prototype=Object.create(Gn.prototype),Kl.prototype.constructor=Kl,Kl.prototype.isLineBasicMaterial=!0,Kl.prototype.copy=function(t){return Gn.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this};var $l=new ur,th=new ur,eh=new Lr,rh=new yn,nh=new hn;function ih(t,e,r){1===r&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),qr.call(this),this.type="Line",this.geometry=void 0!==t?t:new oi,this.material=void 0!==e?e:new Kl({color:16777215*Math.random()})}ih.prototype=Object.assign(Object.create(qr.prototype),{constructor:ih,isLine:!0,computeLineDistances:function(){var t=this.geometry;if(t.isBufferGeometry)if(null===t.index){for(var e=t.attributes.position,r=[0],n=1,i=e.count;n<i;n++)$l.fromBufferAttribute(e,n-1),th.fromBufferAttribute(e,n),r[n]=r[n-1],r[n]+=$l.distanceTo(th);t.addAttribute("lineDistance",new Zn(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){var a=t.vertices;(r=t.lineDistances)[0]=0;for(n=1,i=a.length;n<i;n++)r[n]=r[n-1],r[n]+=a[n-1].distanceTo(a[n])}return this},raycast:function(t,e){var r=t.linePrecision,n=this.geometry,i=this.matrixWorld;if(null===n.boundingSphere&&n.computeBoundingSphere(),nh.copy(n.boundingSphere),nh.applyMatrix4(i),nh.radius+=r,!1!==t.ray.intersectsSphere(nh)){eh.getInverse(i),rh.copy(t.ray).applyMatrix4(eh);var a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,s=new ur,c=new ur,l=new ur,h=new ur,u=this&&this.isLineSegments?2:1;if(n.isBufferGeometry){var p=n.index,d=n.attributes.position.array;if(null!==p)for(var f=p.array,m=0,v=f.length-1;m<v;m+=u){var g=f[m],y=f[m+1];if(s.fromArray(d,3*g),c.fromArray(d,3*y),!(rh.distanceSqToSegment(s,c,h,l)>o))h.applyMatrix4(this.matrixWorld),(w=t.ray.origin.distanceTo(h))<t.near||w>t.far||e.push({distance:w,point:l.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}else for(m=0,v=d.length/3-1;m<v;m+=u){if(s.fromArray(d,3*m),c.fromArray(d,3*m+3),!(rh.distanceSqToSegment(s,c,h,l)>o))h.applyMatrix4(this.matrixWorld),(w=t.ray.origin.distanceTo(h))<t.near||w>t.far||e.push({distance:w,point:l.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){var x=n.vertices,b=x.length;for(m=0;m<b-1;m+=u){var w;if(!(rh.distanceSqToSegment(x[m],x[m+1],h,l)>o))h.applyMatrix4(this.matrixWorld),(w=t.ray.origin.distanceTo(h))<t.near||w>t.far||e.push({distance:w,point:l.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var ah=new ur,oh=new ur;function sh(t,e){ih.call(this,t,e),this.type="LineSegments"}function ch(t,e){ih.call(this,t,e),this.type="LineLoop"}function lh(t){Gn.call(this),this.type="PointsMaterial",this.color=new Dn(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.lights=!1,this.setValues(t)}sh.prototype=Object.assign(Object.create(ih.prototype),{constructor:sh,isLineSegments:!0,computeLineDistances:function(){var t=this.geometry;if(t.isBufferGeometry)if(null===t.index){for(var e=t.attributes.position,r=[],n=0,i=e.count;n<i;n+=2)ah.fromBufferAttribute(e,n),oh.fromBufferAttribute(e,n+1),r[n]=0===n?0:r[n-1],r[n+1]=r[n]+ah.distanceTo(oh);t.addAttribute("lineDistance",new Zn(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){var a=t.vertices;for(r=t.lineDistances,n=0,i=a.length;n<i;n+=2)ah.copy(a[n]),oh.copy(a[n+1]),r[n]=0===n?0:r[n-1],r[n+1]=r[n]+ah.distanceTo(oh)}return this}}),ch.prototype=Object.assign(Object.create(ih.prototype),{constructor:ch,isLineLoop:!0}),lh.prototype=Object.create(Gn.prototype),lh.prototype.constructor=lh,lh.prototype.isPointsMaterial=!0,lh.prototype.copy=function(t){return Gn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};var hh=new Lr,uh=new yn,ph=new hn,dh=new ur;function fh(t,e){qr.call(this),this.type="Points",this.geometry=void 0!==t?t:new oi,this.material=void 0!==e?e:new lh({color:16777215*Math.random()}),this.updateMorphTargets()}function mh(t,e,r,n,i,a,o){var s=uh.distanceSqToPoint(t);if(s<r){var c=new ur;uh.closestPointToPoint(t,c),c.applyMatrix4(n);var l=i.ray.origin.distanceTo(c);if(l<i.near||l>i.far)return;a.push({distance:l,distanceToRay:Math.sqrt(s),point:c,index:e,face:null,object:o})}}function vh(t,e,r,n,i,a,o,s,c){gr.call(this,t,e,r,n,i,a,o,s,c),this.format=void 0!==o?o:Ht,this.minFilter=void 0!==a?a:Mt,this.magFilter=void 0!==i?i:Mt,this.generateMipmaps=!1}function gh(t,e,r,n,i,a,o,s,c,l,h,u){gr.call(this,null,a,o,s,c,l,n,i,h,u),this.image={width:e,height:r},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function yh(t,e,r,n,i,a,o,s,c){gr.call(this,t,e,r,n,i,a,o,s,c),this.needsUpdate=!0}function xh(t,e,r,n,i,a,o,s,c,l){if((l=void 0!==l?l:qt)!==qt&&l!==Xt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===r&&l===qt&&(r=Pt),void 0===r&&l===Xt&&(r=Gt),gr.call(this,null,n,i,a,o,s,l,r,c),this.image={width:t,height:e},this.magFilter=void 0!==o?o:yt,this.minFilter=void 0!==s?s:yt,this.flipY=!1,this.generateMipmaps=!1}function bh(t){oi.call(this),this.type="WireframeGeometry";var e,r,n,i,a,o,s,c,l,h,u=[],p=[0,0],d={},f=["a","b","c"];if(t&&t.isGeometry){var m=t.faces;for(e=0,n=m.length;e<n;e++){var v=m[e];for(r=0;r<3;r++)s=v[f[r]],c=v[f[(r+1)%3]],p[0]=Math.min(s,c),p[1]=Math.max(s,c),void 0===d[l=p[0]+","+p[1]]&&(d[l]={index1:p[0],index2:p[1]})}for(l in d)o=d[l],h=t.vertices[o.index1],u.push(h.x,h.y,h.z),h=t.vertices[o.index2],u.push(h.x,h.y,h.z)}else if(t&&t.isBufferGeometry){var g,y,x,b,w,_,M;if(h=new ur,null!==t.index){for(g=t.attributes.position,y=t.index,0===(x=t.groups).length&&(x=[{start:0,count:y.count,materialIndex:0}]),i=0,a=x.length;i<a;++i)for(e=w=(b=x[i]).start,n=w+b.count;e<n;e+=3)for(r=0;r<3;r++)s=y.getX(e+r),c=y.getX(e+(r+1)%3),p[0]=Math.min(s,c),p[1]=Math.max(s,c),void 0===d[l=p[0]+","+p[1]]&&(d[l]={index1:p[0],index2:p[1]});for(l in d)o=d[l],h.fromBufferAttribute(g,o.index1),u.push(h.x,h.y,h.z),h.fromBufferAttribute(g,o.index2),u.push(h.x,h.y,h.z)}else for(e=0,n=(g=t.attributes.position).count/3;e<n;e++)for(r=0;r<3;r++)_=3*e+r,h.fromBufferAttribute(g,_),u.push(h.x,h.y,h.z),M=3*e+(r+1)%3,h.fromBufferAttribute(g,M),u.push(h.x,h.y,h.z)}this.addAttribute("position",new Zn(u,3))}function wh(t,e,r){Pi.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:r},this.fromBufferGeometry(new _h(t,e,r)),this.mergeVertices()}function _h(t,e,r){oi.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:r};var n,i,a=[],o=[],s=[],c=[],l=new ur,h=new ur,u=new ur,p=new ur,d=new ur;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var f=e+1;for(n=0;n<=r;n++){var m=n/r;for(i=0;i<=e;i++){var v=i/e;t(v,m,h),o.push(h.x,h.y,h.z),v-1e-5>=0?(t(v-1e-5,m,u),p.subVectors(h,u)):(t(v+1e-5,m,u),p.subVectors(u,h)),m-1e-5>=0?(t(v,m-1e-5,u),d.subVectors(h,u)):(t(v,m+1e-5,u),d.subVectors(u,h)),l.crossVectors(p,d).normalize(),s.push(l.x,l.y,l.z),c.push(v,m)}}for(n=0;n<r;n++)for(i=0;i<e;i++){var g=n*f+i,y=n*f+i+1,x=(n+1)*f+i+1,b=(n+1)*f+i;a.push(g,y,b),a.push(y,x,b)}this.setIndex(a),this.addAttribute("position",new Zn(o,3)),this.addAttribute("normal",new Zn(s,3)),this.addAttribute("uv",new Zn(c,2))}function Mh(t,e,r,n){Pi.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:r,detail:n},this.fromBufferGeometry(new Sh(t,e,r,n)),this.mergeVertices()}function Sh(t,e,r,n){oi.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:r,detail:n},r=r||1;var i=[],a=[];function o(t,e,r,n){var i,a,o=Math.pow(2,n),c=[];for(i=0;i<=o;i++){c[i]=[];var l=t.clone().lerp(r,i/o),h=e.clone().lerp(r,i/o),u=o-i;for(a=0;a<=u;a++)c[i][a]=0===a&&i===o?l:l.clone().lerp(h,a/u)}for(i=0;i<o;i++)for(a=0;a<2*(o-i)-1;a++){var p=Math.floor(a/2);a%2==0?(s(c[i][p+1]),s(c[i+1][p]),s(c[i][p])):(s(c[i][p+1]),s(c[i+1][p+1]),s(c[i+1][p]))}}function s(t){i.push(t.x,t.y,t.z)}function c(e,r){var n=3*e;r.x=t[n+0],r.y=t[n+1],r.z=t[n+2]}function l(t,e,r,n){n<0&&1===t.x&&(a[e]=t.x-1),0===r.x&&0===r.z&&(a[e]=n/2/Math.PI+.5)}function h(t){return Math.atan2(t.z,-t.x)}!function(t){for(var r=new ur,n=new ur,i=new ur,a=0;a<e.length;a+=3)c(e[a+0],r),c(e[a+1],n),c(e[a+2],i),o(r,n,i,t)}(n=n||0),function(t){for(var e=new ur,r=0;r<i.length;r+=3)e.x=i[r+0],e.y=i[r+1],e.z=i[r+2],e.normalize().multiplyScalar(t),i[r+0]=e.x,i[r+1]=e.y,i[r+2]=e.z}(r),function(){for(var t=new ur,e=0;e<i.length;e+=3){t.x=i[e+0],t.y=i[e+1],t.z=i[e+2];var r=h(t)/2/Math.PI+.5,n=(o=t,Math.atan2(-o.y,Math.sqrt(o.x*o.x+o.z*o.z))/Math.PI+.5);a.push(r,1-n)}var o;(function(){for(var t=new ur,e=new ur,r=new ur,n=new ur,o=new sr,s=new sr,c=new sr,u=0,p=0;u<i.length;u+=9,p+=6){t.set(i[u+0],i[u+1],i[u+2]),e.set(i[u+3],i[u+4],i[u+5]),r.set(i[u+6],i[u+7],i[u+8]),o.set(a[p+0],a[p+1]),s.set(a[p+2],a[p+3]),c.set(a[p+4],a[p+5]),n.copy(t).add(e).add(r).divideScalar(3);var d=h(n);l(o,p+0,t,d),l(s,p+2,e,d),l(c,p+4,r,d)}})(),function(){for(var t=0;t<a.length;t+=6){var e=a[t+0],r=a[t+2],n=a[t+4],i=Math.max(e,r,n),o=Math.min(e,r,n);i>.9&&o<.1&&(e<.2&&(a[t+0]+=1),r<.2&&(a[t+2]+=1),n<.2&&(a[t+4]+=1))}}()}(),this.addAttribute("position",new Zn(i,3)),this.addAttribute("normal",new Zn(i.slice(),3)),this.addAttribute("uv",new Zn(a,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}function Th(t,e){Pi.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Eh(t,e)),this.mergeVertices()}function Eh(t,e){Sh.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Ah(t,e){Pi.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Lh(t,e)),this.mergeVertices()}function Lh(t,e){Sh.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Rh(t,e){Pi.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ch(t,e)),this.mergeVertices()}function Ch(t,e){var r=(1+Math.sqrt(5))/2,n=[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1];Sh.call(this,n,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Ph(t,e){Pi.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Oh(t,e)),this.mergeVertices()}function Oh(t,e){var r=(1+Math.sqrt(5))/2,n=1/r,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-r,0,-n,r,0,n,-r,0,n,r,-n,-r,0,-n,r,0,n,-r,0,n,r,0,-r,0,-n,r,0,-n,-r,0,n,r,0,n];Sh.call(this,i,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Dh(t,e,r,n,i,a){Pi.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:r,radialSegments:n,closed:i},void 0!==a&&console.warn("THREE.TubeGeometry: taper has been removed.");var o=new Nh(t,e,r,n,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}function Nh(t,e,r,n,i){oi.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:r,radialSegments:n,closed:i},e=e||64,r=r||1,n=n||8,i=i||!1;var a=t.computeFrenetFrames(e,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;var o,s,c=new ur,l=new ur,h=new sr,u=new ur,p=[],d=[],f=[],m=[];function v(i){u=t.getPointAt(i/e,u);var o=a.normals[i],h=a.binormals[i];for(s=0;s<=n;s++){var f=s/n*Math.PI*2,m=Math.sin(f),v=-Math.cos(f);l.x=v*o.x+m*h.x,l.y=v*o.y+m*h.y,l.z=v*o.z+m*h.z,l.normalize(),d.push(l.x,l.y,l.z),c.x=u.x+r*l.x,c.y=u.y+r*l.y,c.z=u.z+r*l.z,p.push(c.x,c.y,c.z)}}!function(){for(o=0;o<e;o++)v(o);v(!1===i?e:0),function(){for(o=0;o<=e;o++)for(s=0;s<=n;s++)h.x=o/e,h.y=s/n,f.push(h.x,h.y)}(),function(){for(s=1;s<=e;s++)for(o=1;o<=n;o++){var t=(n+1)*(s-1)+(o-1),r=(n+1)*s+(o-1),i=(n+1)*s+o,a=(n+1)*(s-1)+o;m.push(t,r,a),m.push(r,i,a)}}()}(),this.setIndex(m),this.addAttribute("position",new Zn(p,3)),this.addAttribute("normal",new Zn(d,3)),this.addAttribute("uv",new Zn(f,2))}function Ih(t,e,r,n,i,a,o){Pi.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:r,radialSegments:n,p:i,q:a},void 0!==o&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new Bh(t,e,r,n,i,a)),this.mergeVertices()}function Bh(t,e,r,n,i,a){oi.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:r,radialSegments:n,p:i,q:a},t=t||1,e=e||.4,r=Math.floor(r)||64,n=Math.floor(n)||8,i=i||2,a=a||3;var o,s,c=[],l=[],h=[],u=[],p=new ur,d=new ur,f=new ur,m=new ur,v=new ur,g=new ur,y=new ur;for(o=0;o<=r;++o){var x=o/r*i*Math.PI*2;for(A(x,i,a,t,f),A(x+.01,i,a,t,m),g.subVectors(m,f),y.addVectors(m,f),v.crossVectors(g,y),y.crossVectors(v,g),v.normalize(),y.normalize(),s=0;s<=n;++s){var b=s/n*Math.PI*2,w=-e*Math.cos(b),_=e*Math.sin(b);p.x=f.x+(w*y.x+_*v.x),p.y=f.y+(w*y.y+_*v.y),p.z=f.z+(w*y.z+_*v.z),l.push(p.x,p.y,p.z),d.subVectors(p,f).normalize(),h.push(d.x,d.y,d.z),u.push(o/r),u.push(s/n)}}for(s=1;s<=r;s++)for(o=1;o<=n;o++){var M=(n+1)*(s-1)+(o-1),S=(n+1)*s+(o-1),T=(n+1)*s+o,E=(n+1)*(s-1)+o;c.push(M,S,E),c.push(S,T,E)}function A(t,e,r,n,i){var a=Math.cos(t),o=Math.sin(t),s=r/e*t,c=Math.cos(s);i.x=n*(2+c)*.5*a,i.y=n*(2+c)*o*.5,i.z=n*Math.sin(s)*.5}this.setIndex(c),this.addAttribute("position",new Zn(l,3)),this.addAttribute("normal",new Zn(h,3)),this.addAttribute("uv",new Zn(u,2))}function zh(t,e,r,n,i){Pi.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:n,arc:i},this.fromBufferGeometry(new Fh(t,e,r,n,i)),this.mergeVertices()}function Fh(t,e,r,n,i){oi.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:n,arc:i},t=t||1,e=e||.4,r=Math.floor(r)||8,n=Math.floor(n)||6,i=i||2*Math.PI;var a,o,s=[],c=[],l=[],h=[],u=new ur,p=new ur,d=new ur;for(a=0;a<=r;a++)for(o=0;o<=n;o++){var f=o/n*i,m=a/r*Math.PI*2;p.x=(t+e*Math.cos(m))*Math.cos(f),p.y=(t+e*Math.cos(m))*Math.sin(f),p.z=e*Math.sin(m),c.push(p.x,p.y,p.z),u.x=t*Math.cos(f),u.y=t*Math.sin(f),d.subVectors(p,u).normalize(),l.push(d.x,d.y,d.z),h.push(o/n),h.push(a/r)}for(a=1;a<=r;a++)for(o=1;o<=n;o++){var v=(n+1)*a+o-1,g=(n+1)*(a-1)+o-1,y=(n+1)*(a-1)+o,x=(n+1)*a+o;s.push(v,g,x),s.push(g,y,x)}this.setIndex(s),this.addAttribute("position",new Zn(c,3)),this.addAttribute("normal",new Zn(l,3)),this.addAttribute("uv",new Zn(h,2))}fh.prototype=Object.assign(Object.create(qr.prototype),{constructor:fh,isPoints:!0,raycast:function(t,e){var r=this.geometry,n=this.matrixWorld,i=t.params.Points.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),ph.copy(r.boundingSphere),ph.applyMatrix4(n),ph.radius+=i,!1!==t.ray.intersectsSphere(ph)){hh.getInverse(n),uh.copy(t.ray).applyMatrix4(hh);var a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a;if(r.isBufferGeometry){var s=r.index,c=r.attributes.position.array;if(null!==s)for(var l=s.array,h=0,u=l.length;h<u;h++){var p=l[h];dh.fromArray(c,3*p),mh(dh,p,o,n,t,e,this)}else{h=0;for(var d=c.length/3;h<d;h++)dh.fromArray(c,3*h),mh(dh,h,o,n,t,e,this)}}else{var f=r.vertices;for(h=0,d=f.length;h<d;h++)mh(f[h],h,o,n,t,e,this)}}},updateMorphTargets:function(){var t,e,r,n=this.geometry;if(n.isBufferGeometry){var i=n.morphAttributes,a=Object.keys(i);if(a.length>0){var o=i[a[0]];if(void 0!==o)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=o.length;t<e;t++)r=o[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}else{var s=n.morphTargets;void 0!==s&&s.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),vh.prototype=Object.assign(Object.create(gr.prototype),{constructor:vh,isVideoTexture:!0,update:function(){var t=this.image;t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),gh.prototype=Object.create(gr.prototype),gh.prototype.constructor=gh,gh.prototype.isCompressedTexture=!0,yh.prototype=Object.create(gr.prototype),yh.prototype.constructor=yh,yh.prototype.isCanvasTexture=!0,xh.prototype=Object.create(gr.prototype),xh.prototype.constructor=xh,xh.prototype.isDepthTexture=!0,bh.prototype=Object.create(oi.prototype),bh.prototype.constructor=bh,wh.prototype=Object.create(Pi.prototype),wh.prototype.constructor=wh,_h.prototype=Object.create(oi.prototype),_h.prototype.constructor=_h,Mh.prototype=Object.create(Pi.prototype),Mh.prototype.constructor=Mh,Sh.prototype=Object.create(oi.prototype),Sh.prototype.constructor=Sh,Th.prototype=Object.create(Pi.prototype),Th.prototype.constructor=Th,Eh.prototype=Object.create(Sh.prototype),Eh.prototype.constructor=Eh,Ah.prototype=Object.create(Pi.prototype),Ah.prototype.constructor=Ah,Lh.prototype=Object.create(Sh.prototype),Lh.prototype.constructor=Lh,Rh.prototype=Object.create(Pi.prototype),Rh.prototype.constructor=Rh,Ch.prototype=Object.create(Sh.prototype),Ch.prototype.constructor=Ch,Ph.prototype=Object.create(Pi.prototype),Ph.prototype.constructor=Ph,Oh.prototype=Object.create(Sh.prototype),Oh.prototype.constructor=Oh,Dh.prototype=Object.create(Pi.prototype),Dh.prototype.constructor=Dh,Nh.prototype=Object.create(oi.prototype),Nh.prototype.constructor=Nh,Nh.prototype.toJSON=function(){var t=oi.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t},Ih.prototype=Object.create(Pi.prototype),Ih.prototype.constructor=Ih,Bh.prototype=Object.create(oi.prototype),Bh.prototype.constructor=Bh,zh.prototype=Object.create(Pi.prototype),zh.prototype.constructor=zh,Fh.prototype=Object.create(oi.prototype),Fh.prototype.constructor=Fh;var Gh={triangulate:function(t,e,r){r=r||2;var n,i,a,o,s,c,l,h=e&&e.length,u=h?e[0]*r:t.length,p=Uh(t,0,u,r,!0),d=[];if(!p||p.next===p.prev)return d;if(h&&(p=Xh(t,e,p,r)),t.length>80*r){n=a=t[0],i=o=t[1];for(var f=r;f<u;f+=r)(s=t[f])<n&&(n=s),(c=t[f+1])<i&&(i=c),s>a&&(a=s),c>o&&(o=c);l=0!==(l=Math.max(a-n,o-i))?1/l:0}return Vh(p,d,r,n,i,l),d}};function Uh(t,e,r,n,i){var a,o;if(i===du(t,e,r,n)>0)for(a=e;a<r;a+=n)o=hu(a,t[a],t[a+1],o);else for(a=r-n;a>=e;a-=n)o=hu(a,t[a],t[a+1],o);return o&&iu(o,o.next)&&(uu(o),o=o.next),o}function Hh(t,e){if(!t)return t;e||(e=t);var r,n=t;do{if(r=!1,n.steiner||!iu(n,n.next)&&0!==nu(n.prev,n,n.next))n=n.next;else{if(uu(n),(n=e=n.prev)===n.next)break;r=!0}}while(r||n!==e);return e}function Vh(t,e,r,n,i,a,o){if(t){!o&&a&&Qh(t,n,i,a);for(var s,c,l=t;t.prev!==t.next;)if(s=t.prev,c=t.next,a?kh(t,n,i,a):jh(t))e.push(s.i/r),e.push(t.i/r),e.push(c.i/r),uu(t),t=c.next,l=c.next;else if((t=c)===l){o?1===o?Vh(t=Wh(t,e,r),e,r,n,i,a,2):2===o&&qh(t,e,r,n,i,a):Vh(Hh(t),e,r,n,i,a,1);break}}}function jh(t){var e=t.prev,r=t,n=t.next;if(nu(e,r,n)>=0)return!1;for(var i=t.next.next;i!==t.prev;){if(eu(e.x,e.y,r.x,r.y,n.x,n.y,i.x,i.y)&&nu(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function kh(t,e,r,n){var i=t.prev,a=t,o=t.next;if(nu(i,a,o)>=0)return!1;for(var s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,c=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,l=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,h=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y,u=$h(s,c,e,r,n),p=$h(l,h,e,r,n),d=t.prevZ,f=t.nextZ;d&&d.z>=u&&f&&f.z<=p;){if(d!==t.prev&&d!==t.next&&eu(i.x,i.y,a.x,a.y,o.x,o.y,d.x,d.y)&&nu(d.prev,d,d.next)>=0)return!1;if(d=d.prevZ,f!==t.prev&&f!==t.next&&eu(i.x,i.y,a.x,a.y,o.x,o.y,f.x,f.y)&&nu(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;d&&d.z>=u;){if(d!==t.prev&&d!==t.next&&eu(i.x,i.y,a.x,a.y,o.x,o.y,d.x,d.y)&&nu(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;f&&f.z<=p;){if(f!==t.prev&&f!==t.next&&eu(i.x,i.y,a.x,a.y,o.x,o.y,f.x,f.y)&&nu(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function Wh(t,e,r){var n=t;do{var i=n.prev,a=n.next.next;!iu(i,a)&&au(i,n,n.next,a)&&su(i,a)&&su(a,i)&&(e.push(i.i/r),e.push(n.i/r),e.push(a.i/r),uu(n),uu(n.next),n=t=a),n=n.next}while(n!==t);return n}function qh(t,e,r,n,i,a){var o=t;do{for(var s=o.next.next;s!==o.prev;){if(o.i!==s.i&&ru(o,s)){var c=lu(o,s);return o=Hh(o,o.next),c=Hh(c,c.next),Vh(o,e,r,n,i,a),void Vh(c,e,r,n,i,a)}s=s.next}o=o.next}while(o!==t)}function Xh(t,e,r,n){var i,a,o,s=[];for(i=0,a=e.length;i<a;i++)(o=Uh(t,e[i]*n,i<a-1?e[i+1]*n:t.length,n,!1))===o.next&&(o.steiner=!0),s.push(tu(o));for(s.sort(Yh),i=0;i<s.length;i++)Zh(s[i],r),r=Hh(r,r.next);return r}function Yh(t,e){return t.x-e.x}function Zh(t,e){if(e=Jh(t,e)){var r=lu(e,t);Hh(r,r.next)}}function Jh(t,e){var r,n=e,i=t.x,a=t.y,o=-1/0;do{if(a<=n.y&&a>=n.next.y&&n.next.y!==n.y){var s=n.x+(a-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(s<=i&&s>o){if(o=s,s===i){if(a===n.y)return n;if(a===n.next.y)return n.next}r=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!r)return null;if(i===o)return r.prev;var c,l=r,h=r.x,u=r.y,p=1/0;for(n=r.next;n!==l;)i>=n.x&&n.x>=h&&i!==n.x&&eu(a<u?i:o,a,h,u,a<u?o:i,a,n.x,n.y)&&((c=Math.abs(a-n.y)/(i-n.x))<p||c===p&&n.x>r.x)&&su(n,t)&&(r=n,p=c),n=n.next;return r}function Qh(t,e,r,n){var i=t;do{null===i.z&&(i.z=$h(i.x,i.y,e,r,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,Kh(i)}function Kh(t){var e,r,n,i,a,o,s,c,l=1;do{for(r=t,t=null,a=null,o=0;r;){for(o++,n=r,s=0,e=0;e<l&&(s++,n=n.nextZ);e++);for(c=l;s>0||c>0&&n;)0!==s&&(0===c||!n||r.z<=n.z)?(i=r,r=r.nextZ,s--):(i=n,n=n.nextZ,c--),a?a.nextZ=i:t=i,i.prevZ=a,a=i;r=n}a.nextZ=null,l*=2}while(o>1);return t}function $h(t,e,r,n,i){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*i)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function tu(t){var e=t,r=t;do{(e.x<r.x||e.x===r.x&&e.y<r.y)&&(r=e),e=e.next}while(e!==t);return r}function eu(t,e,r,n,i,a,o,s){return(i-o)*(e-s)-(t-o)*(a-s)>=0&&(t-o)*(n-s)-(r-o)*(e-s)>=0&&(r-o)*(a-s)-(i-o)*(n-s)>=0}function ru(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!ou(t,e)&&su(t,e)&&su(e,t)&&cu(t,e)}function nu(t,e,r){return(e.y-t.y)*(r.x-e.x)-(e.x-t.x)*(r.y-e.y)}function iu(t,e){return t.x===e.x&&t.y===e.y}function au(t,e,r,n){return!!(iu(t,r)&&iu(e,n)||iu(t,n)&&iu(r,e))||nu(t,e,r)>0!=nu(t,e,n)>0&&nu(r,n,t)>0!=nu(r,n,e)>0}function ou(t,e){var r=t;do{if(r.i!==t.i&&r.next.i!==t.i&&r.i!==e.i&&r.next.i!==e.i&&au(r,r.next,t,e))return!0;r=r.next}while(r!==t);return!1}function su(t,e){return nu(t.prev,t,t.next)<0?nu(t,e,t.next)>=0&&nu(t,t.prev,e)>=0:nu(t,e,t.prev)<0||nu(t,t.next,e)<0}function cu(t,e){var r=t,n=!1,i=(t.x+e.x)/2,a=(t.y+e.y)/2;do{r.y>a!=r.next.y>a&&r.next.y!==r.y&&i<(r.next.x-r.x)*(a-r.y)/(r.next.y-r.y)+r.x&&(n=!n),r=r.next}while(r!==t);return n}function lu(t,e){var r=new pu(t.i,t.x,t.y),n=new pu(e.i,e.x,e.y),i=t.next,a=e.prev;return t.next=e,e.prev=t,r.next=i,i.prev=r,n.next=r,r.prev=n,a.next=n,n.prev=a,n}function hu(t,e,r,n){var i=new pu(t,e,r);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function uu(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function pu(t,e,r){this.i=t,this.x=e,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function du(t,e,r,n){for(var i=0,a=e,o=r-n;a<r;a+=n)i+=(t[o]-t[a])*(t[a+1]+t[o+1]),o=a;return i}var fu={area:function(t){for(var e=t.length,r=0,n=e-1,i=0;i<e;n=i++)r+=t[n].x*t[i].y-t[i].x*t[n].y;return.5*r},isClockWise:function(t){return fu.area(t)<0},triangulateShape:function(t,e){var r=[],n=[],i=[];mu(t),vu(r,t);var a=t.length;e.forEach(mu);for(var o=0;o<e.length;o++)n.push(a),a+=e[o].length,vu(r,e[o]);var s=Gh.triangulate(r,n);for(o=0;o<s.length;o+=3)i.push(s.slice(o,o+3));return i}};function mu(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function vu(t,e){for(var r=0;r<e.length;r++)t.push(e[r].x),t.push(e[r].y)}function gu(t,e){Pi.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new yu(t,e)),this.mergeVertices()}function yu(t,e){oi.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];for(var r=this,n=[],i=[],a=0,o=t.length;a<o;a++){s(t[a])}function s(t){var a=[],o=void 0!==e.curveSegments?e.curveSegments:12,s=void 0!==e.steps?e.steps:1,c=void 0!==e.depth?e.depth:100,l=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:6,u=void 0!==e.bevelSize?e.bevelSize:h-2,p=void 0!==e.bevelOffset?e.bevelOffset:0,d=void 0!==e.bevelSegments?e.bevelSegments:3,f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:xu;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),c=e.amount);var v,g,y,x,b,w,_,M,S=!1;f&&(v=f.getSpacedPoints(s),S=!0,l=!1,g=f.computeFrenetFrames(s,!1),y=new ur,x=new ur,b=new ur),l||(d=0,h=0,u=0,p=0);var T=t.extractPoints(o),E=T.shape,A=T.holes;if(!fu.isClockWise(E))for(E=E.reverse(),_=0,M=A.length;_<M;_++)w=A[_],fu.isClockWise(w)&&(A[_]=w.reverse());var L=fu.triangulateShape(E,A),R=E;for(_=0,M=A.length;_<M;_++)w=A[_],E=E.concat(w);function C(t,e,r){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(r).add(t)}var P,O,D,N,I,B,z=E.length,F=L.length;function G(t,e,r){var n,i,a,o=t.x-e.x,s=t.y-e.y,c=r.x-t.x,l=r.y-t.y,h=o*o+s*s,u=o*l-s*c;if(Math.abs(u)>Number.EPSILON){var p=Math.sqrt(h),d=Math.sqrt(c*c+l*l),f=e.x-s/p,m=e.y+o/p,v=((r.x-l/d-f)*l-(r.y+c/d-m)*c)/(o*l-s*c),g=(n=f+o*v-t.x)*n+(i=m+s*v-t.y)*i;if(g<=2)return new sr(n,i);a=Math.sqrt(g/2)}else{var y=!1;o>Number.EPSILON?c>Number.EPSILON&&(y=!0):o<-Number.EPSILON?c<-Number.EPSILON&&(y=!0):Math.sign(s)===Math.sign(l)&&(y=!0),y?(n=-s,i=o,a=Math.sqrt(h)):(n=o,i=s,a=Math.sqrt(h/2))}return new sr(n/a,i/a)}for(var U=[],H=0,V=R.length,j=V-1,k=H+1;H<V;H++,j++,k++)j===V&&(j=0),k===V&&(k=0),U[H]=G(R[H],R[j],R[k]);var W,q,X=[],Y=U.concat();for(_=0,M=A.length;_<M;_++){for(w=A[_],W=[],H=0,j=(V=w.length)-1,k=H+1;H<V;H++,j++,k++)j===V&&(j=0),k===V&&(k=0),W[H]=G(w[H],w[j],w[k]);X.push(W),Y=Y.concat(W)}for(P=0;P<d;P++){for(D=P/d,N=h*Math.cos(D*Math.PI/2),O=u*Math.sin(D*Math.PI/2)+p,H=0,V=R.length;H<V;H++)J((I=C(R[H],U[H],O)).x,I.y,-N);for(_=0,M=A.length;_<M;_++)for(w=A[_],W=X[_],H=0,V=w.length;H<V;H++)J((I=C(w[H],W[H],O)).x,I.y,-N)}for(O=u+p,H=0;H<z;H++)I=l?C(E[H],Y[H],O):E[H],S?(x.copy(g.normals[0]).multiplyScalar(I.x),y.copy(g.binormals[0]).multiplyScalar(I.y),b.copy(v[0]).add(x).add(y),J(b.x,b.y,b.z)):J(I.x,I.y,0);for(q=1;q<=s;q++)for(H=0;H<z;H++)I=l?C(E[H],Y[H],O):E[H],S?(x.copy(g.normals[q]).multiplyScalar(I.x),y.copy(g.binormals[q]).multiplyScalar(I.y),b.copy(v[q]).add(x).add(y),J(b.x,b.y,b.z)):J(I.x,I.y,c/s*q);for(P=d-1;P>=0;P--){for(D=P/d,N=h*Math.cos(D*Math.PI/2),O=u*Math.sin(D*Math.PI/2)+p,H=0,V=R.length;H<V;H++)J((I=C(R[H],U[H],O)).x,I.y,c+N);for(_=0,M=A.length;_<M;_++)for(w=A[_],W=X[_],H=0,V=w.length;H<V;H++)I=C(w[H],W[H],O),S?J(I.x,I.y+v[s-1].y,v[s-1].x+N):J(I.x,I.y,c+N)}function Z(t,e){var r,n;for(H=t.length;--H>=0;){r=H,(n=H-1)<0&&(n=t.length-1);var i=0,a=s+2*d;for(i=0;i<a;i++){var o=z*i,c=z*(i+1);K(e+r+o,e+n+o,e+n+c,e+r+c)}}}function J(t,e,r){a.push(t),a.push(e),a.push(r)}function Q(t,e,i){$(t),$(e),$(i);var a=n.length/3,o=m.generateTopUV(r,n,a-3,a-2,a-1);tt(o[0]),tt(o[1]),tt(o[2])}function K(t,e,i,a){$(t),$(e),$(a),$(e),$(i),$(a);var o=n.length/3,s=m.generateSideWallUV(r,n,o-6,o-3,o-2,o-1);tt(s[0]),tt(s[1]),tt(s[3]),tt(s[1]),tt(s[2]),tt(s[3])}function $(t){n.push(a[3*t+0]),n.push(a[3*t+1]),n.push(a[3*t+2])}function tt(t){i.push(t.x),i.push(t.y)}!function(){var t=n.length/3;if(l){var e=0,i=z*e;for(H=0;H<F;H++)Q((B=L[H])[2]+i,B[1]+i,B[0]+i);for(i=z*(e=s+2*d),H=0;H<F;H++)Q((B=L[H])[0]+i,B[1]+i,B[2]+i)}else{for(H=0;H<F;H++)Q((B=L[H])[2],B[1],B[0]);for(H=0;H<F;H++)Q((B=L[H])[0]+z*s,B[1]+z*s,B[2]+z*s)}r.addGroup(t,n.length/3-t,0)}(),function(){var t=n.length/3,e=0;for(Z(R,e),e+=R.length,_=0,M=A.length;_<M;_++)Z(w=A[_],e),e+=w.length;r.addGroup(t,n.length/3-t,1)}()}this.addAttribute("position",new Zn(n,3)),this.addAttribute("uv",new Zn(i,2)),this.computeVertexNormals()}exports.ShapeUtils=fu,gu.prototype=Object.create(Pi.prototype),gu.prototype.constructor=gu,gu.prototype.toJSON=function(){var t=Pi.prototype.toJSON.call(this);return bu(this.parameters.shapes,this.parameters.options,t)},yu.prototype=Object.create(oi.prototype),yu.prototype.constructor=yu,yu.prototype.toJSON=function(){var t=oi.prototype.toJSON.call(this);return bu(this.parameters.shapes,this.parameters.options,t)};var xu={generateTopUV:function(t,e,r,n,i){var a=e[3*r],o=e[3*r+1],s=e[3*n],c=e[3*n+1],l=e[3*i],h=e[3*i+1];return[new sr(a,o),new sr(s,c),new sr(l,h)]},generateSideWallUV:function(t,e,r,n,i,a){var o=e[3*r],s=e[3*r+1],c=e[3*r+2],l=e[3*n],h=e[3*n+1],u=e[3*n+2],p=e[3*i],d=e[3*i+1],f=e[3*i+2],m=e[3*a],v=e[3*a+1],g=e[3*a+2];return Math.abs(s-h)<.01?[new sr(o,1-c),new sr(l,1-u),new sr(p,1-f),new sr(m,1-g)]:[new sr(s,1-c),new sr(h,1-u),new sr(d,1-f),new sr(v,1-g)]}};function bu(t,e,r){if(r.shapes=[],Array.isArray(t))for(var n=0,i=t.length;n<i;n++){var a=t[n];r.shapes.push(a.uuid)}else r.shapes.push(t.uuid);return void 0!==e.extrudePath&&(r.options.extrudePath=e.extrudePath.toJSON()),r}function wu(t,e){Pi.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new _u(t,e)),this.mergeVertices()}function _u(t,e){var r=(e=e||{}).font;if(!r||!r.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Pi;var n=r.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),yu.call(this,n,e),this.type="TextBufferGeometry"}function Mu(t,e,r,n,i,a,o){Pi.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:r,phiStart:n,phiLength:i,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new Su(t,e,r,n,i,a,o)),this.mergeVertices()}function Su(t,e,r,n,i,a,o){oi.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:r,phiStart:n,phiLength:i,thetaStart:a,thetaLength:o},t=t||1,e=Math.max(3,Math.floor(e)||8),r=Math.max(2,Math.floor(r)||6),n=void 0!==n?n:0,i=void 0!==i?i:2*Math.PI,a=void 0!==a?a:0,o=void 0!==o?o:Math.PI;var s,c,l=Math.min(a+o,Math.PI),h=0,u=[],p=new ur,d=new ur,f=[],m=[],v=[],g=[];for(c=0;c<=r;c++){var y=[],x=c/r,b=0;for(0==c&&0==a?b=.5/e:c==r&&l==Math.PI&&(b=-.5/e),s=0;s<=e;s++){var w=s/e;p.x=-t*Math.cos(n+w*i)*Math.sin(a+x*o),p.y=t*Math.cos(a+x*o),p.z=t*Math.sin(n+w*i)*Math.sin(a+x*o),m.push(p.x,p.y,p.z),d.copy(p).normalize(),v.push(d.x,d.y,d.z),g.push(w+b,1-x),y.push(h++)}u.push(y)}for(c=0;c<r;c++)for(s=0;s<e;s++){var _=u[c][s+1],M=u[c][s],S=u[c+1][s],T=u[c+1][s+1];(0!==c||a>0)&&f.push(_,M,T),(c!==r-1||l<Math.PI)&&f.push(M,S,T)}this.setIndex(f),this.addAttribute("position",new Zn(m,3)),this.addAttribute("normal",new Zn(v,3)),this.addAttribute("uv",new Zn(g,2))}function Tu(t,e,r,n,i,a){Pi.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:a},this.fromBufferGeometry(new Eu(t,e,r,n,i,a)),this.mergeVertices()}function Eu(t,e,r,n,i,a){oi.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:a},t=t||.5,e=e||1,i=void 0!==i?i:0,a=void 0!==a?a:2*Math.PI,r=void 0!==r?Math.max(3,r):8;var o,s,c,l=[],h=[],u=[],p=[],d=t,f=(e-t)/(n=void 0!==n?Math.max(1,n):1),m=new ur,v=new sr;for(s=0;s<=n;s++){for(c=0;c<=r;c++)o=i+c/r*a,m.x=d*Math.cos(o),m.y=d*Math.sin(o),h.push(m.x,m.y,m.z),u.push(0,0,1),v.x=(m.x/e+1)/2,v.y=(m.y/e+1)/2,p.push(v.x,v.y);d+=f}for(s=0;s<n;s++){var g=s*(r+1);for(c=0;c<r;c++){var y=o=c+g,x=o+r+1,b=o+r+2,w=o+1;l.push(y,x,w),l.push(x,b,w)}}this.setIndex(l),this.addAttribute("position",new Zn(h,3)),this.addAttribute("normal",new Zn(u,3)),this.addAttribute("uv",new Zn(p,2))}function Au(t,e,r,n){Pi.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:r,phiLength:n},this.fromBufferGeometry(new Lu(t,e,r,n)),this.mergeVertices()}function Lu(t,e,r,n){oi.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:r,phiLength:n},e=Math.floor(e)||12,r=r||0,n=n||2*Math.PI,n=or.clamp(n,0,2*Math.PI);var i,a,o,s=[],c=[],l=[],h=1/e,u=new ur,p=new sr;for(a=0;a<=e;a++){var d=r+a*h*n,f=Math.sin(d),m=Math.cos(d);for(o=0;o<=t.length-1;o++)u.x=t[o].x*f,u.y=t[o].y,u.z=t[o].x*m,c.push(u.x,u.y,u.z),p.x=a/e,p.y=o/(t.length-1),l.push(p.x,p.y)}for(a=0;a<e;a++)for(o=0;o<t.length-1;o++){var v=i=o+a*t.length,g=i+t.length,y=i+t.length+1,x=i+1;s.push(v,g,x),s.push(g,y,x)}if(this.setIndex(s),this.addAttribute("position",new Zn(c,3)),this.addAttribute("uv",new Zn(l,2)),this.computeVertexNormals(),n===2*Math.PI){var b=this.attributes.normal.array,w=new ur,_=new ur,M=new ur;for(i=e*t.length*3,a=0,o=0;a<t.length;a++,o+=3)w.x=b[o+0],w.y=b[o+1],w.z=b[o+2],_.x=b[i+o+0],_.y=b[i+o+1],_.z=b[i+o+2],M.addVectors(w,_).normalize(),b[o+0]=b[i+o+0]=M.x,b[o+1]=b[i+o+1]=M.y,b[o+2]=b[i+o+2]=M.z}}function Ru(t,e){Pi.call(this),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new Cu(t,e)),this.mergeVertices()}function Cu(t,e){oi.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;var r=[],n=[],i=[],a=[],o=0,s=0;if(!1===Array.isArray(t))l(t);else for(var c=0;c<t.length;c++)l(t[c]),this.addGroup(o,s,c),o+=s,s=0;function l(t){var o,c,l,h=n.length/3,u=t.extractPoints(e),p=u.shape,d=u.holes;for(!1===fu.isClockWise(p)&&(p=p.reverse()),o=0,c=d.length;o<c;o++)l=d[o],!0===fu.isClockWise(l)&&(d[o]=l.reverse());var f=fu.triangulateShape(p,d);for(o=0,c=d.length;o<c;o++)l=d[o],p=p.concat(l);for(o=0,c=p.length;o<c;o++){var m=p[o];n.push(m.x,m.y,0),i.push(0,0,1),a.push(m.x,m.y)}for(o=0,c=f.length;o<c;o++){var v=f[o],g=v[0]+h,y=v[1]+h,x=v[2]+h;r.push(g,y,x),s+=3}}this.setIndex(r),this.addAttribute("position",new Zn(n,3)),this.addAttribute("normal",new Zn(i,3)),this.addAttribute("uv",new Zn(a,2))}function Pu(t,e){if(e.shapes=[],Array.isArray(t))for(var r=0,n=t.length;r<n;r++){var i=t[r];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}function Ou(t,e){oi.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;var r,n,i,a,o=[],s=Math.cos(or.DEG2RAD*e),c=[0,0],l={},h=["a","b","c"];t.isBufferGeometry?(a=new Pi).fromBufferGeometry(t):a=t.clone(),a.mergeVertices(),a.computeFaceNormals();for(var u=a.vertices,p=a.faces,d=0,f=p.length;d<f;d++)for(var m=p[d],v=0;v<3;v++)r=m[h[v]],n=m[h[(v+1)%3]],c[0]=Math.min(r,n),c[1]=Math.max(r,n),void 0===l[i=c[0]+","+c[1]]?l[i]={index1:c[0],index2:c[1],face1:d,face2:void 0}:l[i].face2=d;for(i in l){var g=l[i];if(void 0===g.face2||p[g.face1].normal.dot(p[g.face2].normal)<=s){var y=u[g.index1];o.push(y.x,y.y,y.z),y=u[g.index2],o.push(y.x,y.y,y.z)}}this.addAttribute("position",new Zn(o,3))}function Du(t,e,r,n,i,a,o,s){Pi.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:r,radialSegments:n,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new Nu(t,e,r,n,i,a,o,s)),this.mergeVertices()}function Nu(t,e,r,n,i,a,o,s){oi.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:r,radialSegments:n,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s};var c=this;t=void 0!==t?t:1,e=void 0!==e?e:1,r=r||1,n=Math.floor(n)||8,i=Math.floor(i)||1,a=void 0!==a&&a,o=void 0!==o?o:0,s=void 0!==s?s:2*Math.PI;var l=[],h=[],u=[],p=[],d=0,f=[],m=r/2,v=0;function g(r){var i,a,f,g=new sr,y=new ur,x=0,b=!0===r?t:e,w=!0===r?1:-1;for(a=d,i=1;i<=n;i++)h.push(0,m*w,0),u.push(0,w,0),p.push(.5,.5),d++;for(f=d,i=0;i<=n;i++){var _=i/n*s+o,M=Math.cos(_),S=Math.sin(_);y.x=b*S,y.y=m*w,y.z=b*M,h.push(y.x,y.y,y.z),u.push(0,w,0),g.x=.5*M+.5,g.y=.5*S*w+.5,p.push(g.x,g.y),d++}for(i=0;i<n;i++){var T=a+i,E=f+i;!0===r?l.push(E,E+1,T):l.push(E+1,E,T),x+=3}c.addGroup(v,x,!0===r?1:2),v+=x}!function(){var a,g,y=new ur,x=new ur,b=0,w=(e-t)/r;for(g=0;g<=i;g++){var _=[],M=g/i,S=M*(e-t)+t;for(a=0;a<=n;a++){var T=a/n,E=T*s+o,A=Math.sin(E),L=Math.cos(E);x.x=S*A,x.y=-M*r+m,x.z=S*L,h.push(x.x,x.y,x.z),y.set(A,w,L).normalize(),u.push(y.x,y.y,y.z),p.push(T,1-M),_.push(d++)}f.push(_)}for(a=0;a<n;a++)for(g=0;g<i;g++){var R=f[g][a],C=f[g+1][a],P=f[g+1][a+1],O=f[g][a+1];l.push(R,C,O),l.push(C,P,O),b+=6}c.addGroup(v,b,0),v+=b}(),!1===a&&(t>0&&g(!0),e>0&&g(!1)),this.setIndex(l),this.addAttribute("position",new Zn(h,3)),this.addAttribute("normal",new Zn(u,3)),this.addAttribute("uv",new Zn(p,2))}function Iu(t,e,r,n,i,a,o){Du.call(this,0,t,e,r,n,i,a,o),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:a,thetaLength:o}}function Bu(t,e,r,n,i,a,o){Nu.call(this,0,t,e,r,n,i,a,o),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:a,thetaLength:o}}function zu(t,e,r,n){Pi.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:n},this.fromBufferGeometry(new Fu(t,e,r,n)),this.mergeVertices()}function Fu(t,e,r,n){oi.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:n},t=t||1,e=void 0!==e?Math.max(3,e):8,r=void 0!==r?r:0,n=void 0!==n?n:2*Math.PI;var i,a,o=[],s=[],c=[],l=[],h=new ur,u=new sr;for(s.push(0,0,0),c.push(0,0,1),l.push(.5,.5),a=0,i=3;a<=e;a++,i+=3){var p=r+a/e*n;h.x=t*Math.cos(p),h.y=t*Math.sin(p),s.push(h.x,h.y,h.z),c.push(0,0,1),u.x=(s[i]/t+1)/2,u.y=(s[i+1]/t+1)/2,l.push(u.x,u.y)}for(i=1;i<=e;i++)o.push(i,i+1,0);this.setIndex(o),this.addAttribute("position",new Zn(s,3)),this.addAttribute("normal",new Zn(c,3)),this.addAttribute("uv",new Zn(l,2))}wu.prototype=Object.create(Pi.prototype),wu.prototype.constructor=wu,_u.prototype=Object.create(yu.prototype),_u.prototype.constructor=_u,Mu.prototype=Object.create(Pi.prototype),Mu.prototype.constructor=Mu,Su.prototype=Object.create(oi.prototype),Su.prototype.constructor=Su,Tu.prototype=Object.create(Pi.prototype),Tu.prototype.constructor=Tu,Eu.prototype=Object.create(oi.prototype),Eu.prototype.constructor=Eu,Au.prototype=Object.create(Pi.prototype),Au.prototype.constructor=Au,Lu.prototype=Object.create(oi.prototype),Lu.prototype.constructor=Lu,Ru.prototype=Object.create(Pi.prototype),Ru.prototype.constructor=Ru,Ru.prototype.toJSON=function(){var t=Pi.prototype.toJSON.call(this);return Pu(this.parameters.shapes,t)},Cu.prototype=Object.create(oi.prototype),Cu.prototype.constructor=Cu,Cu.prototype.toJSON=function(){var t=oi.prototype.toJSON.call(this);return Pu(this.parameters.shapes,t)},Ou.prototype=Object.create(oi.prototype),Ou.prototype.constructor=Ou,Du.prototype=Object.create(Pi.prototype),Du.prototype.constructor=Du,Nu.prototype=Object.create(oi.prototype),Nu.prototype.constructor=Nu,Iu.prototype=Object.create(Du.prototype),Iu.prototype.constructor=Iu,Bu.prototype=Object.create(Nu.prototype),Bu.prototype.constructor=Bu,zu.prototype=Object.create(Pi.prototype),zu.prototype.constructor=zu,Fu.prototype=Object.create(oi.prototype),Fu.prototype.constructor=Fu;var Gu=Object.freeze({WireframeGeometry:bh,ParametricGeometry:wh,ParametricBufferGeometry:_h,TetrahedronGeometry:Th,TetrahedronBufferGeometry:Eh,OctahedronGeometry:Ah,OctahedronBufferGeometry:Lh,IcosahedronGeometry:Rh,IcosahedronBufferGeometry:Ch,DodecahedronGeometry:Ph,DodecahedronBufferGeometry:Oh,PolyhedronGeometry:Mh,PolyhedronBufferGeometry:Sh,TubeGeometry:Dh,TubeBufferGeometry:Nh,TorusKnotGeometry:Ih,TorusKnotBufferGeometry:Bh,TorusGeometry:zh,TorusBufferGeometry:Fh,TextGeometry:wu,TextBufferGeometry:_u,SphereGeometry:Mu,SphereBufferGeometry:Su,RingGeometry:Tu,RingBufferGeometry:Eu,PlaneGeometry:ws,PlaneBufferGeometry:_s,LatheGeometry:Au,LatheBufferGeometry:Lu,ShapeGeometry:Ru,ShapeBufferGeometry:Cu,ExtrudeGeometry:gu,ExtrudeBufferGeometry:yu,EdgesGeometry:Ou,ConeGeometry:Iu,ConeBufferGeometry:Bu,CylinderGeometry:Du,CylinderBufferGeometry:Nu,CircleGeometry:zu,CircleBufferGeometry:Fu,BoxGeometry:Oi,BoxBufferGeometry:Di});function Uu(t){Gn.call(this),this.type="ShadowMaterial",this.color=new Dn(0),this.transparent=!0,this.setValues(t)}function Hu(t){Gi.call(this,t),this.type="RawShaderMaterial"}function Vu(t){Gn.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Dn(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Dn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ue,this.normalScale=new sr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function ju(t){Vu.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearcoat=0,this.clearcoatRoughness=0,this.sheen=null,this.clearcoatNormalScale=new sr(1,1),this.clearcoatNormalMap=null,this.transparency=0,this.setValues(t)}function ku(t){Gn.call(this),this.type="MeshPhongMaterial",this.color=new Dn(16777215),this.specular=new Dn(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Dn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ue,this.normalScale=new sr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=K,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Wu(t){ku.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(t)}function qu(t){Gn.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ue,this.normalScale=new sr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Xu(t){Gn.call(this),this.type="MeshLambertMaterial",this.color=new Dn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Dn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=K,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Yu(t){Gn.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Dn(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ue,this.normalScale=new sr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.lights=!1,this.setValues(t)}function Zu(t){Kl.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}Uu.prototype=Object.create(Gn.prototype),Uu.prototype.constructor=Uu,Uu.prototype.isShadowMaterial=!0,Uu.prototype.copy=function(t){return Gn.prototype.copy.call(this,t),this.color.copy(t.color),this},Hu.prototype=Object.create(Gi.prototype),Hu.prototype.constructor=Hu,Hu.prototype.isRawShaderMaterial=!0,Vu.prototype=Object.create(Gn.prototype),Vu.prototype.constructor=Vu,Vu.prototype.isMeshStandardMaterial=!0,Vu.prototype.copy=function(t){return Gn.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},ju.prototype=Object.create(Vu.prototype),ju.prototype.constructor=ju,ju.prototype.isMeshPhysicalMaterial=!0,ju.prototype.copy=function(t){return Vu.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.reflectivity=t.reflectivity,this.clearcoat=t.clearcoat,this.clearcoatRoughness=t.clearcoatRoughness,t.sheen?this.sheen=(this.sheen||new Dn).copy(t.sheen):this.sheen=null,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.transparency=t.transparency,this},ku.prototype=Object.create(Gn.prototype),ku.prototype.constructor=ku,ku.prototype.isMeshPhongMaterial=!0,ku.prototype.copy=function(t){return Gn.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Wu.prototype=Object.create(ku.prototype),Wu.prototype.constructor=Wu,Wu.prototype.isMeshToonMaterial=!0,Wu.prototype.copy=function(t){return ku.prototype.copy.call(this,t),this.gradientMap=t.gradientMap,this},qu.prototype=Object.create(Gn.prototype),qu.prototype.constructor=qu,qu.prototype.isMeshNormalMaterial=!0,qu.prototype.copy=function(t){return Gn.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Xu.prototype=Object.create(Gn.prototype),Xu.prototype.constructor=Xu,Xu.prototype.isMeshLambertMaterial=!0,Xu.prototype.copy=function(t){return Gn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Yu.prototype=Object.create(Gn.prototype),Yu.prototype.constructor=Yu,Yu.prototype.isMeshMatcapMaterial=!0,Yu.prototype.copy=function(t){return Gn.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Zu.prototype=Object.create(Kl.prototype),Zu.prototype.constructor=Zu,Zu.prototype.isLineDashedMaterial=!0,Zu.prototype.copy=function(t){return Kl.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Ju=Object.freeze({ShadowMaterial:Uu,SpriteMaterial:Rl,RawShaderMaterial:Hu,ShaderMaterial:Gi,PointsMaterial:lh,MeshPhysicalMaterial:ju,MeshStandardMaterial:Vu,MeshPhongMaterial:ku,MeshToonMaterial:Wu,MeshNormalMaterial:qu,MeshLambertMaterial:Xu,MeshDepthMaterial:cl,MeshDistanceMaterial:ll,MeshBasicMaterial:Un,MeshMatcapMaterial:Yu,LineDashedMaterial:Zu,LineBasicMaterial:Kl,Material:Gn}),Qu={arraySlice:function(t,e,r){return Qu.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==r?r:t.length)):t.slice(e,r)},convertArray:function(t,e,r){return!t||!r&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){for(var e=t.length,r=new Array(e),n=0;n!==e;++n)r[n]=n;return r.sort(function(e,r){return t[e]-t[r]}),r},sortedArray:function(t,e,r){for(var n=t.length,i=new t.constructor(n),a=0,o=0;o!==n;++a)for(var s=r[a]*e,c=0;c!==e;++c)i[o++]=t[s+c];return i},flattenJSON:function(t,e,r,n){for(var i=1,a=t[0];void 0!==a&&void 0===a[n];)a=t[i++];if(void 0!==a){var o=a[n];if(void 0!==o)if(Array.isArray(o))do{void 0!==(o=a[n])&&(e.push(a.time),r.push.apply(r,o)),a=t[i++]}while(void 0!==a);else if(void 0!==o.toArray)do{void 0!==(o=a[n])&&(e.push(a.time),o.toArray(r,r.length)),a=t[i++]}while(void 0!==a);else do{void 0!==(o=a[n])&&(e.push(a.time),r.push(o)),a=t[i++]}while(void 0!==a)}}};function Ku(t,e,r,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(r),this.sampleValues=e,this.valueSize=r}function $u(t,e,r,n){Ku.call(this,t,e,r,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function tp(t,e,r,n){Ku.call(this,t,e,r,n)}function ep(t,e,r,n){Ku.call(this,t,e,r,n)}function rp(t,e,r,n){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Qu.convertArray(e,this.TimeBufferType),this.values=Qu.convertArray(r,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}function np(t,e,r){rp.call(this,t,e,r)}function ip(t,e,r,n){rp.call(this,t,e,r,n)}function ap(t,e,r,n){rp.call(this,t,e,r,n)}function op(t,e,r,n){Ku.call(this,t,e,r,n)}function sp(t,e,r,n){rp.call(this,t,e,r,n)}function cp(t,e,r,n){rp.call(this,t,e,r,n)}function lp(t,e,r,n){rp.call(this,t,e,r,n)}function hp(t,e,r){this.name=t,this.tracks=r,this.duration=void 0!==e?e:-1,this.uuid=or.generateUUID(),this.duration<0&&this.resetDuration()}function up(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ap;case"vector":case"vector2":case"vector3":case"vector4":return lp;case"color":return ip;case"quaternion":return sp;case"bool":case"boolean":return np;case"string":return cp}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function pp(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var e=up(t.type);if(void 0===t.times){var r=[],n=[];Qu.flattenJSON(t.keys,r,n,"value"),t.times=r,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}exports.AnimationUtils=Qu,Object.assign(Ku.prototype,{evaluate:function(t){var e=this.parameterPositions,r=this._cachedIndex,n=e[r],i=e[r-1];t:{e:{var a;r:{n:if(!(t<n)){for(var o=r+2;;){if(void 0===n){if(t<i)break n;return r=e.length,this._cachedIndex=r,this.afterEnd_(r-1,t,i)}if(r===o)break;if(i=n,t<(n=e[++r]))break e}a=e.length;break r}if(t>=i)break t;var s=e[1];t<s&&(r=2,i=s);for(o=r-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,n);if(r===o)break;if(n=i,t>=(i=e[--r-1]))break e}a=r,r=0}for(;r<a;){var c=r+a>>>1;t<e[c]?a=c:r=c+1}if(n=e[r],void 0===(i=e[r-1]))return this._cachedIndex=0,this.beforeStart_(0,t,n);if(void 0===n)return r=e.length,this._cachedIndex=r,this.afterEnd_(r-1,i,t)}this._cachedIndex=r,this.intervalChanged_(r,i,n)}return this.interpolate_(r,i,t,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,r=this.sampleValues,n=this.valueSize,i=t*n,a=0;a!==n;++a)e[a]=r[i+a];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Ku.prototype,{beforeStart_:Ku.prototype.copySampleValue_,afterEnd_:Ku.prototype.copySampleValue_}),$u.prototype=Object.assign(Object.create(Ku.prototype),{constructor:$u,DefaultSettings_:{endingStart:Se,endingEnd:Se},intervalChanged_:function(t,e,r){var n=this.parameterPositions,i=t-2,a=t+1,o=n[i],s=n[a];if(void 0===o)switch(this.getSettings_().endingStart){case Te:i=t,o=2*e-r;break;case Ee:o=e+n[i=n.length-2]-n[i+1];break;default:i=t,o=r}if(void 0===s)switch(this.getSettings_().endingEnd){case Te:a=t,s=2*r-e;break;case Ee:a=1,s=r+n[1]-n[0];break;default:a=t-1,s=e}var c=.5*(r-e),l=this.valueSize;this._weightPrev=c/(e-o),this._weightNext=c/(s-r),this._offsetPrev=i*l,this._offsetNext=a*l},interpolate_:function(t,e,r,n){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,p=this._weightNext,d=(r-e)/(n-e),f=d*d,m=f*d,v=-u*m+2*u*f-u*d,g=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*d+1,y=(-1-p)*m+(1.5+p)*f+.5*d,x=p*m-p*f,b=0;b!==o;++b)i[b]=v*a[l+b]+g*a[c+b]+y*a[s+b]+x*a[h+b];return i}}),tp.prototype=Object.assign(Object.create(Ku.prototype),{constructor:tp,interpolate_:function(t,e,r,n){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,l=(r-e)/(n-e),h=1-l,u=0;u!==o;++u)i[u]=a[c+u]*h+a[s+u]*l;return i}}),ep.prototype=Object.assign(Object.create(Ku.prototype),{constructor:ep,interpolate_:function(t){return this.copySampleValue_(t-1)}}),Object.assign(rp,{toJSON:function(t){var e,r=t.constructor;if(void 0!==r.toJSON)e=r.toJSON(t);else{e={name:t.name,times:Qu.convertArray(t.times,Array),values:Qu.convertArray(t.values,Array)};var n=t.getInterpolation();n!==t.DefaultInterpolation&&(e.interpolation=n)}return e.type=t.ValueTypeName,e}}),Object.assign(rp.prototype,{constructor:rp,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:_e,InterpolantFactoryMethodDiscrete:function(t){return new ep(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new tp(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new $u(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case we:e=this.InterpolantFactoryMethodDiscrete;break;case _e:e=this.InterpolantFactoryMethodLinear;break;case Me:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){var r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(r);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",r),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return we;case this.InterpolantFactoryMethodLinear:return _e;case this.InterpolantFactoryMethodSmooth:return Me}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t)for(var e=this.times,r=0,n=e.length;r!==n;++r)e[r]+=t;return this},scale:function(t){if(1!==t)for(var e=this.times,r=0,n=e.length;r!==n;++r)e[r]*=t;return this},trim:function(t,e){for(var r=this.times,n=r.length,i=0,a=n-1;i!==n&&r[i]<t;)++i;for(;-1!==a&&r[a]>e;)--a;if(++a,0!==i||a!==n){i>=a&&(i=(a=Math.max(a,1))-1);var o=this.getValueSize();this.times=Qu.arraySlice(r,i,a),this.values=Qu.arraySlice(this.values,i*o,a*o)}return this},validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);var r=this.times,n=this.values,i=r.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);for(var a=null,o=0;o!==i;o++){var s=r[o];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,s),t=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,s,a),t=!1;break}a=s}if(void 0!==n&&Qu.isTypedArray(n)){o=0;for(var c=n.length;o!==c;++o){var l=n[o];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,l),t=!1;break}}}return t},optimize:function(){for(var t=this.times,e=this.values,r=this.getValueSize(),n=this.getInterpolation()===Me,i=1,a=t.length-1,o=1;o<a;++o){var s=!1,c=t[o];if(c!==t[o+1]&&(1!==o||c!==c[0]))if(n)s=!0;else for(var l=o*r,h=l-r,u=l+r,p=0;p!==r;++p){var d=e[l+p];if(d!==e[h+p]||d!==e[u+p]){s=!0;break}}if(s){if(o!==i){t[i]=t[o];var f=o*r,m=i*r;for(p=0;p!==r;++p)e[m+p]=e[f+p]}++i}}if(a>0){t[i]=t[a];for(f=a*r,m=i*r,p=0;p!==r;++p)e[m+p]=e[f+p];++i}return i!==t.length&&(this.times=Qu.arraySlice(t,0,i),this.values=Qu.arraySlice(e,0,i*r)),this},clone:function(){var t=Qu.arraySlice(this.times,0),e=Qu.arraySlice(this.values,0),r=new(0,this.constructor)(this.name,t,e);return r.createInterpolant=this.createInterpolant,r}}),np.prototype=Object.assign(Object.create(rp.prototype),{constructor:np,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:we,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),ip.prototype=Object.assign(Object.create(rp.prototype),{constructor:ip,ValueTypeName:"color"}),ap.prototype=Object.assign(Object.create(rp.prototype),{constructor:ap,ValueTypeName:"number"}),op.prototype=Object.assign(Object.create(Ku.prototype),{constructor:op,interpolate_:function(t,e,r,n){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=(r-e)/(n-e),l=s+o;s!==l;s+=4)cr.slerpFlat(i,0,a,s-o,a,s,c);return i}}),sp.prototype=Object.assign(Object.create(rp.prototype),{constructor:sp,ValueTypeName:"quaternion",DefaultInterpolation:_e,InterpolantFactoryMethodLinear:function(t){return new op(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),cp.prototype=Object.assign(Object.create(rp.prototype),{constructor:cp,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:we,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),lp.prototype=Object.assign(Object.create(rp.prototype),{constructor:lp,ValueTypeName:"vector"}),Object.assign(hp,{parse:function(t){for(var e=[],r=t.tracks,n=1/(t.fps||1),i=0,a=r.length;i!==a;++i)e.push(pp(r[i]).scale(n));return new hp(t.name,t.duration,e)},toJSON:function(t){for(var e=[],r=t.tracks,n={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid},i=0,a=r.length;i!==a;++i)e.push(rp.toJSON(r[i]));return n},CreateFromMorphTargetSequence:function(t,e,r,n){for(var i=e.length,a=[],o=0;o<i;o++){var s=[],c=[];s.push((o+i-1)%i,o,(o+1)%i),c.push(0,1,0);var l=Qu.getKeyframeOrder(s);s=Qu.sortedArray(s,1,l),c=Qu.sortedArray(c,1,l),n||0!==s[0]||(s.push(i),c.push(c[0])),a.push(new ap(".morphTargetInfluences["+e[o].name+"]",s,c).scale(1/r))}return new hp(t,-1,a)},findByName:function(t,e){var r=t;if(!Array.isArray(t)){var n=t;r=n.geometry&&n.geometry.animations||n.animations}for(var i=0;i<r.length;i++)if(r[i].name===e)return r[i];return null},CreateClipsFromMorphTargetSequences:function(t,e,r){for(var n={},i=/^([\w-]*?)([\d]+)$/,a=0,o=t.length;a<o;a++){var s=t[a],c=s.name.match(i);if(c&&c.length>1){var l=n[u=c[1]];l||(n[u]=l=[]),l.push(s)}}var h=[];for(var u in n)h.push(hp.CreateFromMorphTargetSequence(u,n[u],e,r));return h},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var r=function(t,e,r,n,i){if(0!==r.length){var a=[],o=[];Qu.flattenJSON(r,a,o,n),0!==a.length&&i.push(new t(e,a,o))}},n=[],i=t.name||"default",a=t.length||-1,o=t.fps||30,s=t.hierarchy||[],c=0;c<s.length;c++){var l=s[c].keys;if(l&&0!==l.length)if(l[0].morphTargets){for(var h={},u=0;u<l.length;u++)if(l[u].morphTargets)for(var p=0;p<l[u].morphTargets.length;p++)h[l[u].morphTargets[p]]=-1;for(var d in h){var f=[],m=[];for(p=0;p!==l[u].morphTargets.length;++p){var v=l[u];f.push(v.time),m.push(v.morphTarget===d?1:0)}n.push(new ap(".morphTargetInfluence["+d+"]",f,m))}a=h.length*(o||1)}else{var g=".bones["+e[c].name+"]";r(lp,g+".position",l,"pos",n),r(sp,g+".quaternion",l,"rot",n),r(lp,g+".scale",l,"scl",n)}}return 0===n.length?null:new hp(i,a,n)}}),Object.assign(hp.prototype,{resetDuration:function(){for(var t=0,e=0,r=this.tracks.length;e!==r;++e){var n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){for(var t=!0,e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){for(var t=[],e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new hp(this.name,this.duration,t)}});var dp={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function fp(t,e,r){var n=this,i=!1,a=0,o=0,s=void 0;this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=r,this.itemStart=function(t){o++,!1===i&&void 0!==n.onStart&&n.onStart(t,a,o),i=!0},this.itemEnd=function(t){a++,void 0!==n.onProgress&&n.onProgress(t,a,o),a===o&&(i=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)},this.resolveURL=function(t){return s?s(t):t},this.setURLModifier=function(t){return s=t,this}}exports.Cache=dp;var mp=new fp;function vp(t){this.manager=void 0!==t?t:mp,this.crossOrigin="anonymous",this.path="",this.resourcePath=""}exports.DefaultLoadingManager=mp,Object.assign(vp.prototype,{load:function(){},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this}}),vp.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=this.handlers,r=0,n=e.length;r<n;r+=2){var i=e[r],a=e[r+1];if(i.test(t))return a}return null}};var gp={};function yp(t){vp.call(this,t)}function xp(t){vp.call(this,t)}function bp(t){vp.call(this,t),this._parser=null}function wp(t){vp.call(this,t),this._parser=null}function _p(t){vp.call(this,t)}function Mp(t){vp.call(this,t)}function Sp(t){vp.call(this,t)}function Tp(){this.type="Curve",this.arcLengthDivisions=200}function Ep(t,e,r,n,i,a,o,s){Tp.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=r||1,this.yRadius=n||1,this.aStartAngle=i||0,this.aEndAngle=a||2*Math.PI,this.aClockwise=o||!1,this.aRotation=s||0}function Ap(t,e,r,n,i,a){Ep.call(this,t,e,r,r,n,i,a),this.type="ArcCurve"}function Lp(){var t=0,e=0,r=0,n=0;function i(i,a,o,s){t=i,e=o,r=-3*i+3*a-2*o-s,n=2*i-2*a+o+s}return{initCatmullRom:function(t,e,r,n,a){i(e,r,a*(r-t),a*(n-e))},initNonuniformCatmullRom:function(t,e,r,n,a,o,s){var c=(e-t)/a-(r-t)/(a+o)+(r-e)/o,l=(r-e)/o-(n-e)/(o+s)+(n-r)/s;i(e,r,c*=o,l*=o)},calc:function(i){var a=i*i;return t+e*i+r*a+n*(a*i)}}}yp.prototype=Object.assign(Object.create(vp.prototype),{constructor:yp,load:function(t,e,r,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var i=this,a=dp.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){e&&e(a),i.manager.itemEnd(t)},0),a;if(void 0===gp[t]){var o=t.match(/^data:(.*?)(;base64)?,(.*)$/);if(o){var s=o[1],c=!!o[2],l=o[3];l=decodeURIComponent(l),c&&(l=atob(l));try{var h,u=(this.responseType||"").toLowerCase();switch(u){case"arraybuffer":case"blob":for(var p=new Uint8Array(l.length),d=0;d<l.length;d++)p[d]=l.charCodeAt(d);h="blob"===u?new Blob([p.buffer],{type:s}):p.buffer;break;case"document":var f=new DOMParser;h=f.parseFromString(l,s);break;case"json":h=JSON.parse(l);break;default:h=l}setTimeout(function(){e&&e(h),i.manager.itemEnd(t)},0)}catch(g){setTimeout(function(){n&&n(g),i.manager.itemError(t),i.manager.itemEnd(t)},0)}}else{gp[t]=[],gp[t].push({onLoad:e,onProgress:r,onError:n});var m=new XMLHttpRequest;for(var v in m.open("GET",t,!0),m.addEventListener("load",function(e){var r=this.response;dp.add(t,r);var n=gp[t];if(delete gp[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received.");for(var a=0,o=n.length;a<o;a++){(s=n[a]).onLoad&&s.onLoad(r)}i.manager.itemEnd(t)}else{for(a=0,o=n.length;a<o;a++){var s;(s=n[a]).onError&&s.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)}},!1),m.addEventListener("progress",function(e){for(var r=gp[t],n=0,i=r.length;n<i;n++){var a=r[n];a.onProgress&&a.onProgress(e)}},!1),m.addEventListener("error",function(e){var r=gp[t];delete gp[t];for(var n=0,a=r.length;n<a;n++){var o=r[n];o.onError&&o.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)},!1),m.addEventListener("abort",function(e){var r=gp[t];delete gp[t];for(var n=0,a=r.length;n<a;n++){var o=r[n];o.onError&&o.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)},!1),void 0!==this.responseType&&(m.responseType=this.responseType),void 0!==this.withCredentials&&(m.withCredentials=this.withCredentials),m.overrideMimeType&&m.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)m.setRequestHeader(v,this.requestHeader[v]);m.send(null)}return i.manager.itemStart(t),m}gp[t].push({onLoad:e,onProgress:r,onError:n})},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}}),xp.prototype=Object.assign(Object.create(vp.prototype),{constructor:xp,load:function(t,e,r,n){var i=this,a=new yp(i.manager);a.setPath(i.path),a.load(t,function(t){e(i.parse(JSON.parse(t)))},r,n)},parse:function(t){for(var e=[],r=0;r<t.length;r++){var n=hp.parse(t[r]);e.push(n)}return e}}),bp.prototype=Object.assign(Object.create(vp.prototype),{constructor:bp,load:function(t,e,r,n){var i=this,a=[],o=new gh;o.image=a;var s=new yp(this.manager);function c(c){s.load(t[c],function(t){var r=i._parser(t,!0);a[c]={width:r.width,height:r.height,format:r.format,mipmaps:r.mipmaps},6===(l+=1)&&(1===r.mipmapCount&&(o.minFilter=Mt),o.format=r.format,o.needsUpdate=!0,e&&e(o))},r,n)}if(s.setPath(this.path),s.setResponseType("arraybuffer"),Array.isArray(t))for(var l=0,h=0,u=t.length;h<u;++h)c(h);else s.load(t,function(t){var r=i._parser(t,!0);if(r.isCubemap)for(var n=r.mipmaps.length/r.mipmapCount,s=0;s<n;s++){a[s]={mipmaps:[]};for(var c=0;c<r.mipmapCount;c++)a[s].mipmaps.push(r.mipmaps[s*r.mipmapCount+c]),a[s].format=r.format,a[s].width=r.width,a[s].height=r.height}else o.image.width=r.width,o.image.height=r.height,o.mipmaps=r.mipmaps;1===r.mipmapCount&&(o.minFilter=Mt),o.format=r.format,o.needsUpdate=!0,e&&e(o)},r,n);return o}}),wp.prototype=Object.assign(Object.create(vp.prototype),{constructor:wp,load:function(t,e,r,n){var i=this,a=new qi,o=new yp(this.manager);return o.setResponseType("arraybuffer"),o.setPath(this.path),o.load(t,function(t){var r=i._parser(t);r&&(void 0!==r.image?a.image=r.image:void 0!==r.data&&(a.image.width=r.width,a.image.height=r.height,a.image.data=r.data),a.wrapS=void 0!==r.wrapS?r.wrapS:vt,a.wrapT=void 0!==r.wrapT?r.wrapT:vt,a.magFilter=void 0!==r.magFilter?r.magFilter:Mt,a.minFilter=void 0!==r.minFilter?r.minFilter:Et,a.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,void 0!==r.format&&(a.format=r.format),void 0!==r.type&&(a.type=r.type),void 0!==r.mipmaps&&(a.mipmaps=r.mipmaps),1===r.mipmapCount&&(a.minFilter=Mt),a.needsUpdate=!0,e&&e(a,r))},r,n),a}}),_p.prototype=Object.assign(Object.create(vp.prototype),{constructor:_p,load:function(t,e,r,n){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var i=this,a=dp.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){e&&e(a),i.manager.itemEnd(t)},0),a;var o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function s(){o.removeEventListener("load",s,!1),o.removeEventListener("error",c,!1),dp.add(t,this),e&&e(this),i.manager.itemEnd(t)}function c(e){o.removeEventListener("load",s,!1),o.removeEventListener("error",c,!1),n&&n(e),i.manager.itemError(t),i.manager.itemEnd(t)}return o.addEventListener("load",s,!1),o.addEventListener("error",c,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(t),o.src=t,o}}),Mp.prototype=Object.assign(Object.create(vp.prototype),{constructor:Mp,load:function(t,e,r,n){var i=new Ns,a=new _p(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);var o=0;function s(r){a.load(t[r],function(t){i.images[r]=t,6===++o&&(i.needsUpdate=!0,e&&e(i))},void 0,n)}for(var c=0;c<t.length;++c)s(c);return i}}),Sp.prototype=Object.assign(Object.create(vp.prototype),{constructor:Sp,load:function(t,e,r,n){var i=new gr,a=new _p(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(r){i.image=r;var n=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);i.format=n?Ht:Vt,i.needsUpdate=!0,void 0!==e&&e(i)},r,n),i}}),Object.assign(Tp.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){var r=this.getUtoTmapping(t);return this.getPoint(r,e)},getPoints:function(t){void 0===t&&(t=5);for(var e=[],r=0;r<=t;r++)e.push(this.getPoint(r/t));return e},getSpacedPoints:function(t){void 0===t&&(t=5);for(var e=[],r=0;r<=t;r++)e.push(this.getPointAt(r/t));return e},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,r,n=[],i=this.getPoint(0),a=0;for(n.push(0),r=1;r<=t;r++)a+=(e=this.getPoint(r/t)).distanceTo(i),n.push(a),i=e;return this.cacheArcLengths=n,n},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var r,n=this.getLengths(),i=0,a=n.length;r=e||t*n[a-1];for(var o,s=0,c=a-1;s<=c;)if((o=n[i=Math.floor(s+(c-s)/2)]-r)<0)s=i+1;else{if(!(o>0)){c=i;break}c=i-1}if(n[i=c]===r)return i/(a-1);var l=n[i];return(i+(r-l)/(n[i+1]-l))/(a-1)},getTangent:function(t){var e=t-1e-4,r=t+1e-4;e<0&&(e=0),r>1&&(r=1);var n=this.getPoint(e);return this.getPoint(r).clone().sub(n).normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){var r,n,i,a=new ur,o=[],s=[],c=[],l=new ur,h=new Lr;for(r=0;r<=t;r++)n=r/t,o[r]=this.getTangentAt(n),o[r].normalize();s[0]=new ur,c[0]=new ur;var u=Number.MAX_VALUE,p=Math.abs(o[0].x),d=Math.abs(o[0].y),f=Math.abs(o[0].z);for(p<=u&&(u=p,a.set(1,0,0)),d<=u&&(u=d,a.set(0,1,0)),f<=u&&a.set(0,0,1),l.crossVectors(o[0],a).normalize(),s[0].crossVectors(o[0],l),c[0].crossVectors(o[0],s[0]),r=1;r<=t;r++)s[r]=s[r-1].clone(),c[r]=c[r-1].clone(),l.crossVectors(o[r-1],o[r]),l.length()>Number.EPSILON&&(l.normalize(),i=Math.acos(or.clamp(o[r-1].dot(o[r]),-1,1)),s[r].applyMatrix4(h.makeRotationAxis(l,i))),c[r].crossVectors(o[r],s[r]);if(!0===e)for(i=Math.acos(or.clamp(s[0].dot(s[t]),-1,1)),i/=t,o[0].dot(l.crossVectors(s[0],s[t]))>0&&(i=-i),r=1;r<=t;r++)s[r].applyMatrix4(h.makeRotationAxis(o[r],i*r)),c[r].crossVectors(o[r],s[r]);return{tangents:o,normals:s,binormals:c}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){var t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),Ep.prototype=Object.create(Tp.prototype),Ep.prototype.constructor=Ep,Ep.prototype.isEllipseCurve=!0,Ep.prototype.getPoint=function(t,e){for(var r=e||new sr,n=2*Math.PI,i=this.aEndAngle-this.aStartAngle,a=Math.abs(i)<Number.EPSILON;i<0;)i+=n;for(;i>n;)i-=n;i<Number.EPSILON&&(i=a?0:n),!0!==this.aClockwise||a||(i===n?i=-n:i-=n);var o=this.aStartAngle+t*i,s=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){var l=Math.cos(this.aRotation),h=Math.sin(this.aRotation),u=s-this.aX,p=c-this.aY;s=u*l-p*h+this.aX,c=u*h+p*l+this.aY}return r.set(s,c)},Ep.prototype.copy=function(t){return Tp.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},Ep.prototype.toJSON=function(){var t=Tp.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},Ep.prototype.fromJSON=function(t){return Tp.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},Ap.prototype=Object.create(Ep.prototype),Ap.prototype.constructor=Ap,Ap.prototype.isArcCurve=!0;var Rp=new ur,Cp=new Lp,Pp=new Lp,Op=new Lp;function Dp(t,e,r,n){Tp.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=r||"centripetal",this.tension=n||.5}function Np(t,e,r,n,i){var a=.5*(n-e),o=.5*(i-r),s=t*t;return(2*r-2*n+a+o)*(t*s)+(-3*r+3*n-2*a-o)*s+a*t+r}function Ip(t,e){var r=1-t;return r*r*e}function Bp(t,e){return 2*(1-t)*t*e}function zp(t,e){return t*t*e}function Fp(t,e,r,n){return Ip(t,e)+Bp(t,r)+zp(t,n)}function Gp(t,e){var r=1-t;return r*r*r*e}function Up(t,e){var r=1-t;return 3*r*r*t*e}function Hp(t,e){return 3*(1-t)*t*t*e}function Vp(t,e){return t*t*t*e}function jp(t,e,r,n,i){return Gp(t,e)+Up(t,r)+Hp(t,n)+Vp(t,i)}function kp(t,e,r,n){Tp.call(this),this.type="CubicBezierCurve",this.v0=t||new sr,this.v1=e||new sr,this.v2=r||new sr,this.v3=n||new sr}function Wp(t,e,r,n){Tp.call(this),this.type="CubicBezierCurve3",this.v0=t||new ur,this.v1=e||new ur,this.v2=r||new ur,this.v3=n||new ur}function qp(t,e){Tp.call(this),this.type="LineCurve",this.v1=t||new sr,this.v2=e||new sr}function Xp(t,e){Tp.call(this),this.type="LineCurve3",this.v1=t||new ur,this.v2=e||new ur}function Yp(t,e,r){Tp.call(this),this.type="QuadraticBezierCurve",this.v0=t||new sr,this.v1=e||new sr,this.v2=r||new sr}function Zp(t,e,r){Tp.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new ur,this.v1=e||new ur,this.v2=r||new ur}function Jp(t){Tp.call(this),this.type="SplineCurve",this.points=t||[]}Dp.prototype=Object.create(Tp.prototype),Dp.prototype.constructor=Dp,Dp.prototype.isCatmullRomCurve3=!0,Dp.prototype.getPoint=function(t,e){var r,n,i,a,o=e||new ur,s=this.points,c=s.length,l=(c-(this.closed?0:1))*t,h=Math.floor(l),u=l-h;if(this.closed?h+=h>0?0:(Math.floor(Math.abs(h)/c)+1)*c:0===u&&h===c-1&&(h=c-2,u=1),this.closed||h>0?r=s[(h-1)%c]:(Rp.subVectors(s[0],s[1]).add(s[0]),r=Rp),n=s[h%c],i=s[(h+1)%c],this.closed||h+2<c?a=s[(h+2)%c]:(Rp.subVectors(s[c-1],s[c-2]).add(s[c-1]),a=Rp),"centripetal"===this.curveType||"chordal"===this.curveType){var p="chordal"===this.curveType?.5:.25,d=Math.pow(r.distanceToSquared(n),p),f=Math.pow(n.distanceToSquared(i),p),m=Math.pow(i.distanceToSquared(a),p);f<1e-4&&(f=1),d<1e-4&&(d=f),m<1e-4&&(m=f),Cp.initNonuniformCatmullRom(r.x,n.x,i.x,a.x,d,f,m),Pp.initNonuniformCatmullRom(r.y,n.y,i.y,a.y,d,f,m),Op.initNonuniformCatmullRom(r.z,n.z,i.z,a.z,d,f,m)}else"catmullrom"===this.curveType&&(Cp.initCatmullRom(r.x,n.x,i.x,a.x,this.tension),Pp.initCatmullRom(r.y,n.y,i.y,a.y,this.tension),Op.initCatmullRom(r.z,n.z,i.z,a.z,this.tension));return o.set(Cp.calc(u),Pp.calc(u),Op.calc(u)),o},Dp.prototype.copy=function(t){Tp.prototype.copy.call(this,t),this.points=[];for(var e=0,r=t.points.length;e<r;e++){var n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},Dp.prototype.toJSON=function(){var t=Tp.prototype.toJSON.call(this);t.points=[];for(var e=0,r=this.points.length;e<r;e++){var n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},Dp.prototype.fromJSON=function(t){Tp.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,r=t.points.length;e<r;e++){var n=t.points[e];this.points.push((new ur).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},kp.prototype=Object.create(Tp.prototype),kp.prototype.constructor=kp,kp.prototype.isCubicBezierCurve=!0,kp.prototype.getPoint=function(t,e){var r=e||new sr,n=this.v0,i=this.v1,a=this.v2,o=this.v3;return r.set(jp(t,n.x,i.x,a.x,o.x),jp(t,n.y,i.y,a.y,o.y)),r},kp.prototype.copy=function(t){return Tp.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},kp.prototype.toJSON=function(){var t=Tp.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},kp.prototype.fromJSON=function(t){return Tp.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},Wp.prototype=Object.create(Tp.prototype),Wp.prototype.constructor=Wp,Wp.prototype.isCubicBezierCurve3=!0,Wp.prototype.getPoint=function(t,e){var r=e||new ur,n=this.v0,i=this.v1,a=this.v2,o=this.v3;return r.set(jp(t,n.x,i.x,a.x,o.x),jp(t,n.y,i.y,a.y,o.y),jp(t,n.z,i.z,a.z,o.z)),r},Wp.prototype.copy=function(t){return Tp.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Wp.prototype.toJSON=function(){var t=Tp.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Wp.prototype.fromJSON=function(t){return Tp.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},qp.prototype=Object.create(Tp.prototype),qp.prototype.constructor=qp,qp.prototype.isLineCurve=!0,qp.prototype.getPoint=function(t,e){var r=e||new sr;return 1===t?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(t).add(this.v1)),r},qp.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},qp.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},qp.prototype.copy=function(t){return Tp.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},qp.prototype.toJSON=function(){var t=Tp.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},qp.prototype.fromJSON=function(t){return Tp.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Xp.prototype=Object.create(Tp.prototype),Xp.prototype.constructor=Xp,Xp.prototype.isLineCurve3=!0,Xp.prototype.getPoint=function(t,e){var r=e||new ur;return 1===t?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(t).add(this.v1)),r},Xp.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Xp.prototype.copy=function(t){return Tp.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Xp.prototype.toJSON=function(){var t=Tp.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Xp.prototype.fromJSON=function(t){return Tp.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Yp.prototype=Object.create(Tp.prototype),Yp.prototype.constructor=Yp,Yp.prototype.isQuadraticBezierCurve=!0,Yp.prototype.getPoint=function(t,e){var r=e||new sr,n=this.v0,i=this.v1,a=this.v2;return r.set(Fp(t,n.x,i.x,a.x),Fp(t,n.y,i.y,a.y)),r},Yp.prototype.copy=function(t){return Tp.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Yp.prototype.toJSON=function(){var t=Tp.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Yp.prototype.fromJSON=function(t){return Tp.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Zp.prototype=Object.create(Tp.prototype),Zp.prototype.constructor=Zp,Zp.prototype.isQuadraticBezierCurve3=!0,Zp.prototype.getPoint=function(t,e){var r=e||new ur,n=this.v0,i=this.v1,a=this.v2;return r.set(Fp(t,n.x,i.x,a.x),Fp(t,n.y,i.y,a.y),Fp(t,n.z,i.z,a.z)),r},Zp.prototype.copy=function(t){return Tp.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Zp.prototype.toJSON=function(){var t=Tp.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Zp.prototype.fromJSON=function(t){return Tp.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Jp.prototype=Object.create(Tp.prototype),Jp.prototype.constructor=Jp,Jp.prototype.isSplineCurve=!0,Jp.prototype.getPoint=function(t,e){var r=e||new sr,n=this.points,i=(n.length-1)*t,a=Math.floor(i),o=i-a,s=n[0===a?a:a-1],c=n[a],l=n[a>n.length-2?n.length-1:a+1],h=n[a>n.length-3?n.length-1:a+2];return r.set(Np(o,s.x,c.x,l.x,h.x),Np(o,s.y,c.y,l.y,h.y)),r},Jp.prototype.copy=function(t){Tp.prototype.copy.call(this,t),this.points=[];for(var e=0,r=t.points.length;e<r;e++){var n=t.points[e];this.points.push(n.clone())}return this},Jp.prototype.toJSON=function(){var t=Tp.prototype.toJSON.call(this);t.points=[];for(var e=0,r=this.points.length;e<r;e++){var n=this.points[e];t.points.push(n.toArray())}return t},Jp.prototype.fromJSON=function(t){Tp.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,r=t.points.length;e<r;e++){var n=t.points[e];this.points.push((new sr).fromArray(n))}return this};var Qp=Object.freeze({ArcCurve:Ap,CatmullRomCurve3:Dp,CubicBezierCurve:kp,CubicBezierCurve3:Wp,EllipseCurve:Ep,LineCurve:qp,LineCurve3:Xp,QuadraticBezierCurve:Yp,QuadraticBezierCurve3:Zp,SplineCurve:Jp});function Kp(){Tp.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function $p(t){Kp.call(this),this.type="Path",this.currentPoint=new sr,t&&this.setFromPoints(t)}function td(t){$p.call(this,t),this.uuid=or.generateUUID(),this.type="Shape",this.holes=[]}function ed(t,e){qr.call(this),this.type="Light",this.color=new Dn(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}function rd(t,e,r){ed.call(this,t,r),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(qr.DefaultUp),this.updateMatrix(),this.groundColor=new Dn(e)}function nd(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new sr(512,512),this.map=null,this.mapPass=null,this.matrix=new Lr,this._frustum=new $i,this._frameExtents=new sr(1,1),this._viewportCount=1,this._viewports=[new yr(0,0,1,1)]}function id(){nd.call(this,new Hi(50,1,.5,500))}function ad(t,e,r,n,i,a){ed.call(this,t,e),this.type="SpotLight",this.position.copy(qr.DefaultUp),this.updateMatrix(),this.target=new qr,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==r?r:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==i?i:0,this.decay=void 0!==a?a:1,this.shadow=new id}function od(){nd.call(this,new Hi(90,1,.5,500)),this._frameExtents=new sr(4,2),this._viewportCount=6,this._viewports=[new yr(2,1,1,1),new yr(0,1,1,1),new yr(3,1,1,1),new yr(1,1,1,1),new yr(3,0,1,1),new yr(1,0,1,1)],this._cubeDirections=[new ur(1,0,0),new ur(-1,0,0),new ur(0,0,1),new ur(0,0,-1),new ur(0,1,0),new ur(0,-1,0)],this._cubeUps=[new ur(0,1,0),new ur(0,1,0),new ur(0,1,0),new ur(0,1,0),new ur(0,0,1),new ur(0,0,-1)]}function sd(t,e,r,n){ed.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==r?r:0,this.decay=void 0!==n?n:1,this.shadow=new od}function cd(t,e,r,n,i,a){Ui.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==t?t:-1,this.right=void 0!==e?e:1,this.top=void 0!==r?r:1,this.bottom=void 0!==n?n:-1,this.near=void 0!==i?i:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()}function ld(){nd.call(this,new cd(-5,5,5,-5,.5,500))}function hd(t,e){ed.call(this,t,e),this.type="DirectionalLight",this.position.copy(qr.DefaultUp),this.updateMatrix(),this.target=new qr,this.shadow=new ld}function ud(t,e){ed.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}function pd(t,e,r,n){ed.call(this,t,e),this.type="RectAreaLight",this.width=void 0!==r?r:10,this.height=void 0!==n?n:10}function dd(t){vp.call(this,t),this.textures={}}Kp.prototype=Object.assign(Object.create(Tp.prototype),{constructor:Kp,add:function(t){this.curves.push(t)},closePath:function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new qp(e,t))},getPoint:function(t){for(var e=t*this.getLength(),r=this.getCurveLengths(),n=0;n<r.length;){if(r[n]>=e){var i=r[n]-e,a=this.curves[n],o=a.getLength(),s=0===o?0:1-i/o;return a.getPointAt(s)}n++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,r=0,n=this.curves.length;r<n;r++)e+=this.curves[r].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){void 0===t&&(t=40);for(var e=[],r=0;r<=t;r++)e.push(this.getPoint(r/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e,r=[],n=0,i=this.curves;n<i.length;n++)for(var a=i[n],o=a&&a.isEllipseCurve?2*t:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?t*a.points.length:t,s=a.getPoints(o),c=0;c<s.length;c++){var l=s[c];e&&e.equals(l)||(r.push(l),e=l)}return this.autoClose&&r.length>1&&!r[r.length-1].equals(r[0])&&r.push(r[0]),r},copy:function(t){Tp.prototype.copy.call(this,t),this.curves=[];for(var e=0,r=t.curves.length;e<r;e++){var n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){var t=Tp.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(var e=0,r=this.curves.length;e<r;e++){var n=this.curves[e];t.curves.push(n.toJSON())}return t},fromJSON:function(t){Tp.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(var e=0,r=t.curves.length;e<r;e++){var n=t.curves[e];this.curves.push((new Qp[n.type]).fromJSON(n))}return this}}),$p.prototype=Object.assign(Object.create(Kp.prototype),{constructor:$p,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,r=t.length;e<r;e++)this.lineTo(t[e].x,t[e].y)},moveTo:function(t,e){this.currentPoint.set(t,e)},lineTo:function(t,e){var r=new qp(this.currentPoint.clone(),new sr(t,e));this.curves.push(r),this.currentPoint.set(t,e)},quadraticCurveTo:function(t,e,r,n){var i=new Yp(this.currentPoint.clone(),new sr(t,e),new sr(r,n));this.curves.push(i),this.currentPoint.set(r,n)},bezierCurveTo:function(t,e,r,n,i,a){var o=new kp(this.currentPoint.clone(),new sr(t,e),new sr(r,n),new sr(i,a));this.curves.push(o),this.currentPoint.set(i,a)},splineThru:function(t){var e=new Jp([this.currentPoint.clone()].concat(t));this.curves.push(e),this.currentPoint.copy(t[t.length-1])},arc:function(t,e,r,n,i,a){var o=this.currentPoint.x,s=this.currentPoint.y;this.absarc(t+o,e+s,r,n,i,a)},absarc:function(t,e,r,n,i,a){this.absellipse(t,e,r,r,n,i,a)},ellipse:function(t,e,r,n,i,a,o,s){var c=this.currentPoint.x,l=this.currentPoint.y;this.absellipse(t+c,e+l,r,n,i,a,o,s)},absellipse:function(t,e,r,n,i,a,o,s){var c=new Ep(t,e,r,n,i,a,o,s);if(this.curves.length>0){var l=c.getPoint(0);l.equals(this.currentPoint)||this.lineTo(l.x,l.y)}this.curves.push(c);var h=c.getPoint(1);this.currentPoint.copy(h)},copy:function(t){return Kp.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){var t=Kp.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return Kp.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}}),td.prototype=Object.assign(Object.create($p.prototype),{constructor:td,getPointsHoles:function(t){for(var e=[],r=0,n=this.holes.length;r<n;r++)e[r]=this.holes[r].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){$p.prototype.copy.call(this,t),this.holes=[];for(var e=0,r=t.holes.length;e<r;e++){var n=t.holes[e];this.holes.push(n.clone())}return this},toJSON:function(){var t=$p.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(var e=0,r=this.holes.length;e<r;e++){var n=this.holes[e];t.holes.push(n.toJSON())}return t},fromJSON:function(t){$p.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(var e=0,r=t.holes.length;e<r;e++){var n=t.holes[e];this.holes.push((new $p).fromJSON(n))}return this}}),ed.prototype=Object.assign(Object.create(qr.prototype),{constructor:ed,isLight:!0,copy:function(t){return qr.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=qr.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),rd.prototype=Object.assign(Object.create(ed.prototype),{constructor:rd,isHemisphereLight:!0,copy:function(t){return ed.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(nd.prototype,{_projScreenMatrix:new Lr,_lightPositionWorld:new ur,_lookTarget:new ur,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){var e=this.camera,r=this.matrix,n=this._projScreenMatrix,i=this._lookTarget,a=this._lightPositionWorld;a.setFromMatrixPosition(t.matrixWorld),e.position.copy(a),i.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(i),e.updateMatrixWorld(),n.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromMatrix(n),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(e.projectionMatrix),r.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t={};return 0!==this.bias&&(t.bias=this.bias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),id.prototype=Object.assign(Object.create(nd.prototype),{constructor:id,isSpotLightShadow:!0,updateMatrices:function(t,e,r){var n=this.camera,i=2*or.RAD2DEG*t.angle,a=this.mapSize.width/this.mapSize.height,o=t.distance||n.far;i===n.fov&&a===n.aspect&&o===n.far||(n.fov=i,n.aspect=a,n.far=o,n.updateProjectionMatrix()),nd.prototype.updateMatrices.call(this,t,e,r)}}),ad.prototype=Object.assign(Object.create(ed.prototype),{constructor:ad,isSpotLight:!0,copy:function(t){return ed.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),od.prototype=Object.assign(Object.create(nd.prototype),{constructor:od,isPointLightShadow:!0,updateMatrices:function(t,e,r){var n=this.camera,i=this.matrix,a=this._lightPositionWorld,o=this._lookTarget,s=this._projScreenMatrix;a.setFromMatrixPosition(t.matrixWorld),n.position.copy(a),o.copy(n.position),o.add(this._cubeDirections[r]),n.up.copy(this._cubeUps[r]),n.lookAt(o),n.updateMatrixWorld(),i.makeTranslation(-a.x,-a.y,-a.z),s.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromMatrix(s)}}),sd.prototype=Object.assign(Object.create(ed.prototype),{constructor:sd,isPointLight:!0,copy:function(t){return ed.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),cd.prototype=Object.assign(Object.create(Ui.prototype),{constructor:cd,isOrthographicCamera:!0,copy:function(t,e){return Ui.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,r,n,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,n=(this.top+this.bottom)/2,i=r-t,a=r+t,o=n+e,s=n-e;if(null!==this.view&&this.view.enabled){var c=this.zoom/(this.view.width/this.view.fullWidth),l=this.zoom/(this.view.height/this.view.fullHeight),h=(this.right-this.left)/this.view.width,u=(this.top-this.bottom)/this.view.height;a=(i+=h*(this.view.offsetX/c))+h*(this.view.width/c),s=(o-=u*(this.view.offsetY/l))-u*(this.view.height/l)}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=qr.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),ld.prototype=Object.assign(Object.create(nd.prototype),{constructor:ld,isDirectionalLightShadow:!0,updateMatrices:function(t,e,r){nd.prototype.updateMatrices.call(this,t,e,r)}}),hd.prototype=Object.assign(Object.create(ed.prototype),{constructor:hd,isDirectionalLight:!0,copy:function(t){return ed.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),ud.prototype=Object.assign(Object.create(ed.prototype),{constructor:ud,isAmbientLight:!0}),pd.prototype=Object.assign(Object.create(ed.prototype),{constructor:pd,isRectAreaLight:!0,copy:function(t){return ed.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){var e=ed.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}}),dd.prototype=Object.assign(Object.create(vp.prototype),{constructor:dd,load:function(t,e,r,n){var i=this,a=new yp(i.manager);a.setPath(i.path),a.load(t,function(t){e(i.parse(JSON.parse(t)))},r,n)},parse:function(t){var e=this.textures;function r(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}var n=new Ju[t.type];if(void 0!==t.uuid&&(n.uuid=t.uuid),void 0!==t.name&&(n.name=t.name),void 0!==t.color&&n.color.setHex(t.color),void 0!==t.roughness&&(n.roughness=t.roughness),void 0!==t.metalness&&(n.metalness=t.metalness),void 0!==t.emissive&&n.emissive.setHex(t.emissive),void 0!==t.specular&&n.specular.setHex(t.specular),void 0!==t.shininess&&(n.shininess=t.shininess),void 0!==t.clearcoat&&(n.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(n.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.vertexColors&&(n.vertexColors=t.vertexColors),void 0!==t.fog&&(n.fog=t.fog),void 0!==t.flatShading&&(n.flatShading=t.flatShading),void 0!==t.blending&&(n.blending=t.blending),void 0!==t.combine&&(n.combine=t.combine),void 0!==t.side&&(n.side=t.side),void 0!==t.opacity&&(n.opacity=t.opacity),void 0!==t.transparent&&(n.transparent=t.transparent),void 0!==t.alphaTest&&(n.alphaTest=t.alphaTest),void 0!==t.depthTest&&(n.depthTest=t.depthTest),void 0!==t.depthWrite&&(n.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(n.colorWrite=t.colorWrite),void 0!==t.wireframe&&(n.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(n.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(n.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(n.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(n.rotation=t.rotation),1!==t.linewidth&&(n.linewidth=t.linewidth),void 0!==t.dashSize&&(n.dashSize=t.dashSize),void 0!==t.gapSize&&(n.gapSize=t.gapSize),void 0!==t.scale&&(n.scale=t.scale),void 0!==t.polygonOffset&&(n.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(n.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(n.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(n.skinning=t.skinning),void 0!==t.morphTargets&&(n.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(n.morphNormals=t.morphNormals),void 0!==t.dithering&&(n.dithering=t.dithering),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.toneMapped&&(n.toneMapped=t.toneMapped),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.uniforms)for(var i in t.uniforms){var a=t.uniforms[i];switch(n.uniforms[i]={},a.type){case"t":n.uniforms[i].value=r(a.value);break;case"c":n.uniforms[i].value=(new Dn).setHex(a.value);break;case"v2":n.uniforms[i].value=(new sr).fromArray(a.value);break;case"v3":n.uniforms[i].value=(new ur).fromArray(a.value);break;case"v4":n.uniforms[i].value=(new yr).fromArray(a.value);break;case"m3":n.uniforms[i].value=(new fr).fromArray(a.value);case"m4":n.uniforms[i].value=(new Lr).fromArray(a.value);break;default:n.uniforms[i].value=a.value}}if(void 0!==t.defines&&(n.defines=t.defines),void 0!==t.vertexShader&&(n.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(n.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(var o in t.extensions)n.extensions[o]=t.extensions[o];if(void 0!==t.shading&&(n.flatShading=1===t.shading),void 0!==t.size&&(n.size=t.size),void 0!==t.sizeAttenuation&&(n.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(n.map=r(t.map)),void 0!==t.matcap&&(n.matcap=r(t.matcap)),void 0!==t.alphaMap&&(n.alphaMap=r(t.alphaMap),n.transparent=!0),void 0!==t.bumpMap&&(n.bumpMap=r(t.bumpMap)),void 0!==t.bumpScale&&(n.bumpScale=t.bumpScale),void 0!==t.normalMap&&(n.normalMap=r(t.normalMap)),void 0!==t.normalMapType&&(n.normalMapType=t.normalMapType),void 0!==t.normalScale){var s=t.normalScale;!1===Array.isArray(s)&&(s=[s,s]),n.normalScale=(new sr).fromArray(s)}return void 0!==t.displacementMap&&(n.displacementMap=r(t.displacementMap)),void 0!==t.displacementScale&&(n.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(n.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(n.roughnessMap=r(t.roughnessMap)),void 0!==t.metalnessMap&&(n.metalnessMap=r(t.metalnessMap)),void 0!==t.emissiveMap&&(n.emissiveMap=r(t.emissiveMap)),void 0!==t.emissiveIntensity&&(n.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(n.specularMap=r(t.specularMap)),void 0!==t.envMap&&(n.envMap=r(t.envMap)),void 0!==t.envMapIntensity&&(n.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(n.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(n.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(n.lightMap=r(t.lightMap)),void 0!==t.lightMapIntensity&&(n.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(n.aoMap=r(t.aoMap)),void 0!==t.aoMapIntensity&&(n.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(n.gradientMap=r(t.gradientMap)),void 0!==t.clearcoatNormalMap&&(n.clearcoatNormalMap=r(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(n.clearcoatNormalScale=(new sr).fromArray(t.clearcoatNormalScale)),n},setTextures:function(t){return this.textures=t,this}});var fd={decodeText:function(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);for(var e="",r=0,n=t.length;r<n;r++)e+=String.fromCharCode(t[r]);try{return decodeURIComponent(escape(e))}catch(i){return e}},extractUrlBase:function(t){var e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}};function md(){oi.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}function vd(t,e,r,n){"number"==typeof r&&(n=r,r=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Hn.call(this,t,e,r),this.meshPerAttribute=n||1}function gd(t){vp.call(this,t)}exports.LoaderUtils=fd,md.prototype=Object.assign(Object.create(oi.prototype),{constructor:md,isInstancedBufferGeometry:!0,copy:function(t){return oi.prototype.copy.call(this,t),this.maxInstancedCount=t.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t=oi.prototype.toJSON.call(this);return t.maxInstancedCount=this.maxInstancedCount,t.isInstancedBufferGeometry=!0,t}}),vd.prototype=Object.assign(Object.create(Hn.prototype),{constructor:vd,isInstancedBufferAttribute:!0,copy:function(t){return Hn.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){var t=Hn.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}),gd.prototype=Object.assign(Object.create(vp.prototype),{constructor:gd,load:function(t,e,r,n){var i=this,a=new yp(i.manager);a.setPath(i.path),a.load(t,function(t){e(i.parse(JSON.parse(t)))},r,n)},parse:function(t){var e=t.isInstancedBufferGeometry?new md:new oi,r=t.data.index;if(void 0!==r){var n=new yd[r.type](r.array);e.setIndex(new Hn(n,1))}var i=t.data.attributes;for(var a in i){var o=i[a],s=(n=new yd[o.type](o.array),new(o.isInstancedBufferAttribute?vd:Hn)(n,o.itemSize,o.normalized));void 0!==o.name&&(s.name=o.name),e.addAttribute(a,s)}var c=t.data.morphAttributes;if(c)for(var a in c){for(var l=c[a],h=[],u=0,p=l.length;u<p;u++){o=l[u],s=new Hn(n=new yd[o.type](o.array),o.itemSize,o.normalized);void 0!==o.name&&(s.name=o.name),h.push(s)}e.morphAttributes[a]=h}var d=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==d){u=0;for(var f=d.length;u!==f;++u){var m=d[u];e.addGroup(m.start,m.count,m.materialIndex)}}var v=t.data.boundingSphere;if(void 0!==v){var g=new ur;void 0!==v.center&&g.fromArray(v.center),e.boundingSphere=new hn(g,v.radius)}return t.name&&(e.name=t.name),t.userData&&(e.userData=t.userData),e}});var yd={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function xd(t){vp.call(this,t)}xd.prototype=Object.assign(Object.create(vp.prototype),{constructor:xd,load:function(t,e,r,n){var i=this,a=""===this.path?fd.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||a;var o=new yp(i.manager);o.setPath(this.path),o.load(t,function(r){var a=null;try{a=JSON.parse(r)}catch(s){return void 0!==n&&n(s),void console.error("THREE:ObjectLoader: Can't parse "+t+".",s.message)}var o=a.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?i.parse(a,e):console.error("THREE.ObjectLoader: Can't load "+t)},r,n)},parse:function(t,e){var r=this.parseShape(t.shapes),n=this.parseGeometries(t.geometries,r),i=this.parseImages(t.images,function(){void 0!==e&&e(s)}),a=this.parseTextures(t.textures,i),o=this.parseMaterials(t.materials,a),s=this.parseObject(t.object,n,o);return t.animations&&(s.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(s),s},parseShape:function(t){var e={};if(void 0!==t)for(var r=0,n=t.length;r<n;r++){var i=(new td).fromJSON(t[r]);e[i.uuid]=i}return e},parseGeometries:function(t,e){var r={};if(void 0!==t)for(var n=new gd,i=0,a=t.length;i<a;i++){var o,s=t[i];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new Gu[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new Gu[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new Gu[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new Gu[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new Gu[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new Gu[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new Gu[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new Gu[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new Gu[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new Gu[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"TubeGeometry":case"TubeBufferGeometry":o=new Gu[s.type]((new Qp[s.path.type]).fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);break;case"LatheGeometry":case"LatheBufferGeometry":o=new Gu[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new Gu[s.type](s.vertices,s.indices,s.radius,s.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var c=[],l=0,h=s.shapes.length;l<h;l++){var u=e[s.shapes[l]];c.push(u)}o=new Gu[s.type](c,s.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(c=[],l=0,h=s.shapes.length;l<h;l++){u=e[s.shapes[l]];c.push(u)}var p=s.options.extrudePath;void 0!==p&&(s.options.extrudePath=(new Qp[p.type]).fromJSON(p)),o=new Gu[s.type](c,s.options);break;case"BufferGeometry":case"InstancedBufferGeometry":o=n.parse(s);break;case"Geometry":if("THREE"in window&&"LegacyJSONLoader"in THREE)o=(new THREE.LegacyJSONLoader).parse(s,this.resourcePath).geometry;else console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),!0===o.isBufferGeometry&&void 0!==s.userData&&(o.userData=s.userData),r[s.uuid]=o}return r},parseMaterials:function(t,e){var r={},n={};if(void 0!==t){var i=new dd;i.setTextures(e);for(var a=0,o=t.length;a<o;a++){var s=t[a];if("MultiMaterial"===s.type){for(var c=[],l=0;l<s.materials.length;l++){var h=s.materials[l];void 0===r[h.uuid]&&(r[h.uuid]=i.parse(h)),c.push(r[h.uuid])}n[s.uuid]=c}else void 0===r[s.uuid]&&(r[s.uuid]=i.parse(s)),n[s.uuid]=r[s.uuid]}}return n},parseAnimations:function(t){for(var e=[],r=0;r<t.length;r++){var n=t[r],i=hp.parse(n);void 0!==n.uuid&&(i.uuid=n.uuid),e.push(i)}return e},parseImages:function(t,e){var r=this,n={};function i(t){return r.manager.itemStart(t),a.load(t,function(){r.manager.itemEnd(t)},void 0,function(){r.manager.itemError(t),r.manager.itemEnd(t)})}if(void 0!==t&&t.length>0){var a=new _p(new fp(e));a.setCrossOrigin(this.crossOrigin);for(var o=0,s=t.length;o<s;o++){var c=t[o],l=c.url;if(Array.isArray(l)){n[c.uuid]=[];for(var h=0,u=l.length;h<u;h++){var p=l[h],d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(p)?p:r.resourcePath+p;n[c.uuid].push(i(d))}}else{d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:r.resourcePath+c.url;n[c.uuid]=i(d)}}}return n},parseTextures:function(t,e){function r(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}var n={};if(void 0!==t)for(var i=0,a=t.length;i<a;i++){var o,s=t[i];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===e[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image),(o=Array.isArray(e[s.image])?new Ns(e[s.image]):new gr(e[s.image])).needsUpdate=!0,o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),void 0!==s.mapping&&(o.mapping=r(s.mapping,wd)),void 0!==s.offset&&o.offset.fromArray(s.offset),void 0!==s.repeat&&o.repeat.fromArray(s.repeat),void 0!==s.center&&o.center.fromArray(s.center),void 0!==s.rotation&&(o.rotation=s.rotation),void 0!==s.wrap&&(o.wrapS=r(s.wrap[0],_d),o.wrapT=r(s.wrap[1],_d)),void 0!==s.format&&(o.format=s.format),void 0!==s.type&&(o.type=s.type),void 0!==s.encoding&&(o.encoding=s.encoding),void 0!==s.minFilter&&(o.minFilter=r(s.minFilter,Md)),void 0!==s.magFilter&&(o.magFilter=r(s.magFilter,Md)),void 0!==s.anisotropy&&(o.anisotropy=s.anisotropy),void 0!==s.flipY&&(o.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(o.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(o.unpackAlignment=s.unpackAlignment),n[s.uuid]=o}return n},parseObject:function(t,e,r){var n;function i(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function a(t){if(void 0!==t){if(Array.isArray(t)){for(var e=[],n=0,i=t.length;n<i;n++){var a=t[n];void 0===r[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),e.push(r[a])}return e}return void 0===r[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),r[t]}}switch(t.type){case"Scene":n=new Xr,void 0!==t.background&&Number.isInteger(t.background)&&(n.background=new Dn(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?n.fog=new El(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(n.fog=new Tl(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":n=new Hi(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(n.focus=t.focus),void 0!==t.zoom&&(n.zoom=t.zoom),void 0!==t.filmGauge&&(n.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(n.filmOffset=t.filmOffset),void 0!==t.view&&(n.view=Object.assign({},t.view));break;case"OrthographicCamera":n=new cd(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(n.zoom=t.zoom),void 0!==t.view&&(n.view=Object.assign({},t.view));break;case"AmbientLight":n=new ud(t.color,t.intensity);break;case"DirectionalLight":n=new hd(t.color,t.intensity);break;case"PointLight":n=new sd(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":n=new pd(t.color,t.intensity,t.width,t.height);break;case"SpotLight":n=new ad(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":n=new rd(t.color,t.groundColor,t.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var o=i(t.geometry),s=a(t.material);n=o.bones&&o.bones.length>0?new Xl(o,s):new Si(o,s),void 0!==t.drawMode&&n.setDrawMode(t.drawMode);break;case"LOD":n=new ql;break;case"Line":n=new ih(i(t.geometry),a(t.material),t.mode);break;case"LineLoop":n=new ch(i(t.geometry),a(t.material));break;case"LineSegments":n=new sh(i(t.geometry),a(t.material));break;case"PointCloud":case"Points":n=new fh(i(t.geometry),a(t.material));break;case"Sprite":n=new Vl(a(t.material));break;case"Group":n=new vl;break;default:n=new qr}if(n.uuid=t.uuid,void 0!==t.name&&(n.name=t.name),void 0!==t.matrix?(n.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(n.matrixAutoUpdate=t.matrixAutoUpdate),n.matrixAutoUpdate&&n.matrix.decompose(n.position,n.quaternion,n.scale)):(void 0!==t.position&&n.position.fromArray(t.position),void 0!==t.rotation&&n.rotation.fromArray(t.rotation),void 0!==t.quaternion&&n.quaternion.fromArray(t.quaternion),void 0!==t.scale&&n.scale.fromArray(t.scale)),void 0!==t.castShadow&&(n.castShadow=t.castShadow),void 0!==t.receiveShadow&&(n.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(n.shadow.bias=t.shadow.bias),void 0!==t.shadow.radius&&(n.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&n.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(n.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.frustumCulled&&(n.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(n.renderOrder=t.renderOrder),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.layers&&(n.layers.mask=t.layers),void 0!==t.children)for(var c=t.children,l=0;l<c.length;l++)n.add(this.parseObject(c[l],e,r));if("LOD"===t.type)for(var h=t.levels,u=0;u<h.length;u++){var p=h[u],d=n.getObjectByProperty("uuid",p.object);void 0!==d&&n.addLevel(d,p.distance)}return n}});var bd,wd={UVMapping:st,CubeReflectionMapping:ct,CubeRefractionMapping:lt,EquirectangularReflectionMapping:ht,EquirectangularRefractionMapping:ut,SphericalReflectionMapping:pt,CubeUVReflectionMapping:dt,CubeUVRefractionMapping:ft},_d={RepeatWrapping:mt,ClampToEdgeWrapping:vt,MirroredRepeatWrapping:gt},Md={NearestFilter:yt,NearestMipmapNearestFilter:xt,NearestMipmapLinearFilter:wt,LinearFilter:Mt,LinearMipmapNearestFilter:St,LinearMipmapLinearFilter:Et};function Sd(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),vp.call(this,t),this.options=void 0}function Td(){this.type="ShapePath",this.color=new Dn,this.subPaths=[],this.currentPath=null}function Ed(t){this.type="Font",this.data=t}function Ad(t,e,r){for(var n=Array.from?Array.from(t):String(t).split(""),i=e/r.resolution,a=(r.boundingBox.yMax-r.boundingBox.yMin+r.underlineThickness)*i,o=[],s=0,c=0,l=0;l<n.length;l++){var h=n[l];if("\n"===h)s=0,c-=a;else{var u=Ld(h,i,s,c,r);s+=u.offsetX,o.push(u.path)}}return o}function Ld(t,e,r,n,i){var a=i.glyphs[t]||i.glyphs["?"];if(a){var o,s,c,l,h,u,p,d,f=new Td;if(a.o)for(var m=a._cachedOutline||(a._cachedOutline=a.o.split(" ")),v=0,g=m.length;v<g;){switch(m[v++]){case"m":o=m[v++]*e+r,s=m[v++]*e+n,f.moveTo(o,s);break;case"l":o=m[v++]*e+r,s=m[v++]*e+n,f.lineTo(o,s);break;case"q":c=m[v++]*e+r,l=m[v++]*e+n,h=m[v++]*e+r,u=m[v++]*e+n,f.quadraticCurveTo(h,u,c,l);break;case"b":c=m[v++]*e+r,l=m[v++]*e+n,h=m[v++]*e+r,u=m[v++]*e+n,p=m[v++]*e+r,d=m[v++]*e+n,f.bezierCurveTo(h,u,p,d,c,l)}}return{offsetX:a.ha*e,path:f}}console.error('THREE.Font: character "'+t+'" does not exists in font family '+i.familyName+".")}function Rd(t){vp.call(this,t)}Sd.prototype=Object.assign(Object.create(vp.prototype),{constructor:Sd,setOptions:function(t){return this.options=t,this},load:function(t,e,r,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var i=this,a=dp.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){e&&e(a),i.manager.itemEnd(t)},0),a;fetch(t).then(function(t){return t.blob()}).then(function(t){return void 0===i.options?createImageBitmap(t):createImageBitmap(t,i.options)}).then(function(r){dp.add(t,r),e&&e(r),i.manager.itemEnd(t)}).catch(function(e){n&&n(e),i.manager.itemError(t),i.manager.itemEnd(t)}),i.manager.itemStart(t)}}),Object.assign(Td.prototype,{moveTo:function(t,e){this.currentPath=new $p,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e)},lineTo:function(t,e){this.currentPath.lineTo(t,e)},quadraticCurveTo:function(t,e,r,n){this.currentPath.quadraticCurveTo(t,e,r,n)},bezierCurveTo:function(t,e,r,n,i,a){this.currentPath.bezierCurveTo(t,e,r,n,i,a)},splineThru:function(t){this.currentPath.splineThru(t)},toShapes:function(t,e){function r(t){for(var e=[],r=0,n=t.length;r<n;r++){var i=t[r],a=new td;a.curves=i.curves,e.push(a)}return e}function n(t,e){for(var r=e.length,n=!1,i=r-1,a=0;a<r;i=a++){var o=e[i],s=e[a],c=s.x-o.x,l=s.y-o.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(o=e[a],c=-c,s=e[i],l=-l),t.y<o.y||t.y>s.y)continue;if(t.y===o.y){if(t.x===o.x)return!0}else{var h=l*(t.x-o.x)-c*(t.y-o.y);if(0===h)return!0;if(h<0)continue;n=!n}}else{if(t.y!==o.y)continue;if(s.x<=t.x&&t.x<=o.x||o.x<=t.x&&t.x<=s.x)return!0}}return n}var i=fu.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===e)return r(a);var o,s,c,l=[];if(1===a.length)return s=a[0],(c=new td).curves=s.curves,l.push(c),l;var h=!i(a[0].getPoints());h=t?!h:h;var u,p,d=[],f=[],m=[],v=0;f[v]=void 0,m[v]=[];for(var g=0,y=a.length;g<y;g++)o=i(u=(s=a[g]).getPoints()),(o=t?!o:o)?(!h&&f[v]&&v++,f[v]={s:new td,p:u},f[v].s.curves=s.curves,h&&v++,m[v]=[]):m[v].push({h:s,p:u[0]});if(!f[0])return r(a);if(f.length>1){for(var x=!1,b=[],w=0,_=f.length;w<_;w++)d[w]=[];for(w=0,_=f.length;w<_;w++)for(var M=m[w],S=0;S<M.length;S++){for(var T=M[S],E=!0,A=0;A<f.length;A++)n(T.p,f[A].p)&&(w!==A&&b.push({froms:w,tos:A,hole:S}),E?(E=!1,d[A].push(T)):x=!0);E&&d[w].push(T)}b.length>0&&(x||(m=d))}g=0;for(var L=f.length;g<L;g++){c=f[g].s,l.push(c);for(var R=0,C=(p=m[g]).length;R<C;R++)c.holes.push(p[R].h)}return l}}),Object.assign(Ed.prototype,{isFont:!0,generateShapes:function(t,e){void 0===e&&(e=100);for(var r=[],n=Ad(t,e,this.data),i=0,a=n.length;i<a;i++)Array.prototype.push.apply(r,n[i].toShapes());return r}}),Rd.prototype=Object.assign(Object.create(vp.prototype),{constructor:Rd,load:function(t,e,r,n){var i=this,a=new yp(this.manager);a.setPath(this.path),a.load(t,function(t){var r;try{r=JSON.parse(t)}catch(a){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),r=JSON.parse(t.substring(65,t.length-2))}var n=i.parse(r);e&&e(n)},r,n)},parse:function(t){return new Ed(t)}});var Cd={getContext:function(){return void 0===bd&&(bd=new(window.AudioContext||window.webkitAudioContext)),bd},setContext:function(t){bd=t}};function Pd(t){vp.call(this,t)}function Od(){this.coefficients=[];for(var t=0;t<9;t++)this.coefficients.push(new ur)}function Dd(t,e){ed.call(this,void 0,e),this.sh=void 0!==t?t:new Od}function Nd(t,e,r){Dd.call(this,void 0,r);var n=(new Dn).set(t),i=(new Dn).set(e),a=new ur(n.r,n.g,n.b),o=new ur(i.r,i.g,i.b),s=Math.sqrt(Math.PI),c=s*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(s),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(c)}function Id(t,e){Dd.call(this,void 0,e);var r=(new Dn).set(t);this.sh.coefficients[0].set(r.r,r.g,r.b).multiplyScalar(2*Math.sqrt(Math.PI))}exports.AudioContext=Cd,Pd.prototype=Object.assign(Object.create(vp.prototype),{constructor:Pd,load:function(t,e,r,n){var i=new yp(this.manager);i.setResponseType("arraybuffer"),i.setPath(this.path),i.load(t,function(t){var r=t.slice(0);Cd.getContext().decodeAudioData(r,function(t){e(t)})},r,n)}}),Object.assign(Od.prototype,{isSphericalHarmonics3:!0,set:function(t){for(var e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this},zero:function(){for(var t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this},getAt:function(t,e){var r=t.x,n=t.y,i=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.282095),e.addScale(a[1],.488603*n),e.addScale(a[2],.488603*i),e.addScale(a[3],.488603*r),e.addScale(a[4],r*n*1.092548),e.addScale(a[5],n*i*1.092548),e.addScale(a[6],.315392*(3*i*i-1)),e.addScale(a[7],r*i*1.092548),e.addScale(a[8],.546274*(r*r-n*n)),e},getIrradianceAt:function(t,e){var r=t.x,n=t.y,i=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.886227),e.addScale(a[1],1.023328*n),e.addScale(a[2],1.023328*i),e.addScale(a[3],1.023328*r),e.addScale(a[4],.858086*r*n),e.addScale(a[5],.858086*n*i),e.addScale(a[6],.743125*i*i-.247708),e.addScale(a[7],.858086*r*i),e.addScale(a[8],.429043*(r*r-n*n)),e},add:function(t){for(var e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this},scale:function(t){for(var e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this},lerp:function(t,e){for(var r=0;r<9;r++)this.coefficients[r].lerp(t.coefficients[r],e);return this},equals:function(t){for(var e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0},copy:function(t){return this.set(t.coefficients)},clone:function(){return(new this.constructor).copy(this)},fromArray:function(t,e){void 0===e&&(e=0);for(var r=this.coefficients,n=0;n<9;n++)r[n].fromArray(t,e+3*n);return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);for(var r=this.coefficients,n=0;n<9;n++)r[n].toArray(t,e+3*n);return t}}),Object.assign(Od,{getBasisAt:function(t,e){var r=t.x,n=t.y,i=t.z;e[0]=.282095,e[1]=.488603*n,e[2]=.488603*i,e[3]=.488603*r,e[4]=1.092548*r*n,e[5]=1.092548*n*i,e[6]=.315392*(3*i*i-1),e[7]=1.092548*r*i,e[8]=.546274*(r*r-n*n)}}),Dd.prototype=Object.assign(Object.create(ed.prototype),{constructor:Dd,isLightProbe:!0,copy:function(t){return ed.prototype.copy.call(this,t),this.sh.copy(t.sh),this.intensity=t.intensity,this},toJSON:function(t){return ed.prototype.toJSON.call(this,t)}}),Nd.prototype=Object.assign(Object.create(Dd.prototype),{constructor:Nd,isHemisphereLightProbe:!0,copy:function(t){return Dd.prototype.copy.call(this,t),this},toJSON:function(t){return Dd.prototype.toJSON.call(this,t)}}),Id.prototype=Object.assign(Object.create(Dd.prototype),{constructor:Id,isAmbientLightProbe:!0,copy:function(t){return Dd.prototype.copy.call(this,t),this},toJSON:function(t){return Dd.prototype.toJSON.call(this,t)}});var Bd=new Lr,zd=new Lr;function Fd(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Hi,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Hi,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}function Gd(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(Fd.prototype,{update:function(t){var e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;var r,n,i=t.projectionMatrix.clone(),a=e.eyeSep/2,o=a*e.near/e.focus,s=e.near*Math.tan(or.DEG2RAD*e.fov*.5)/e.zoom;zd.elements[12]=-a,Bd.elements[12]=a,r=-s*e.aspect+o,n=s*e.aspect+o,i.elements[0]=2*e.near/(n-r),i.elements[8]=(n+r)/(n-r),this.cameraL.projectionMatrix.copy(i),r=-s*e.aspect-o,n=s*e.aspect-o,i.elements[0]=2*e.near/(n-r),i.elements[8]=(n+r)/(n-r),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(zd),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Bd)}}),Object.assign(Gd.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=("undefined"==typeof performance?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}});var Ud=new ur,Hd=new cr,Vd=new ur,jd=new ur;function kd(){qr.call(this),this.type="AudioListener",this.context=Cd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Gd}function Wd(t){qr.call(this),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.startTime=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}kd.prototype=Object.assign(Object.create(qr.prototype),{constructor:kd,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this},updateMatrixWorld:function(t){qr.prototype.updateMatrixWorld.call(this,t);var e=this.context.listener,r=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ud,Hd,Vd),jd.set(0,0,-1).applyQuaternion(Hd),e.positionX){var n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Ud.x,n),e.positionY.linearRampToValueAtTime(Ud.y,n),e.positionZ.linearRampToValueAtTime(Ud.z,n),e.forwardX.linearRampToValueAtTime(jd.x,n),e.forwardY.linearRampToValueAtTime(jd.y,n),e.forwardZ.linearRampToValueAtTime(jd.z,n),e.upX.linearRampToValueAtTime(r.x,n),e.upY.linearRampToValueAtTime(r.y,n),e.upZ.linearRampToValueAtTime(r.z,n)}else e.setPosition(Ud.x,Ud.y,Ud.z),e.setOrientation(jd.x,jd.y,jd.z,r.x,r.y,r.z)}}),Wd.prototype=Object.assign(Object.create(qr.prototype),{constructor:Wd,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setMediaElementSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.onended=this.onEnded.bind(this),this.startTime=this.context.currentTime,t.start(this.startTime,this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this.source.stop(),this.source.onended=null,this.offset+=(this.context.currentTime-this.startTime)*this.playbackRate,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")},stop:function(){if(!1!==this.hasPlaybackControl)return this.source.stop(),this.source.onended=null,this.offset=0,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),!0===this.isPlaying?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},setDetune:function(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}});var qd=new ur,Xd=new cr,Yd=new ur,Zd=new ur;function Jd(t){Wd.call(this,t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}function Qd(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}function Kd(t,e,r){this.binding=t,this.valueSize=r;var n,i=Float64Array;switch(e){case"quaternion":n=this._slerp;break;case"string":case"bool":i=Array,n=this._select;break;default:n=this._lerp}this.buffer=new i(4*r),this._mixBufferRegion=n,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Jd.prototype=Object.assign(Object.create(Wd.prototype),{constructor:Jd,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){return this.panner.refDistance=t,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){return this.panner.rolloffFactor=t,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){return this.panner.distanceModel=t,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){return this.panner.maxDistance=t,this},setDirectionalCone:function(t,e,r){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=r,this},updateMatrixWorld:function(t){if(qr.prototype.updateMatrixWorld.call(this,t),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(qd,Xd,Yd),Zd.set(0,0,1).applyQuaternion(Xd);var e=this.panner;if(e.positionX){var r=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(qd.x,r),e.positionY.linearRampToValueAtTime(qd.y,r),e.positionZ.linearRampToValueAtTime(qd.z,r),e.orientationX.linearRampToValueAtTime(Zd.x,r),e.orientationY.linearRampToValueAtTime(Zd.y,r),e.orientationZ.linearRampToValueAtTime(Zd.z,r)}else e.setPosition(qd.x,qd.y,qd.z),e.setOrientation(Zd.x,Zd.y,Zd.z)}}}),Object.assign(Qd.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var t=0,e=this.getFrequencyData(),r=0;r<e.length;r++)t+=e[r];return t/e.length}}),Object.assign(Kd.prototype,{accumulate:function(t,e){var r=this.buffer,n=this.valueSize,i=t*n+n,a=this.cumulativeWeight;if(0===a){for(var o=0;o!==n;++o)r[i+o]=r[o];a=e}else{var s=e/(a+=e);this._mixBufferRegion(r,i,0,s,n)}this.cumulativeWeight=a},apply:function(t){var e=this.valueSize,r=this.buffer,n=t*e+e,i=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,i<1){var o=3*e;this._mixBufferRegion(r,n,o,1-i,e)}for(var s=e,c=e+e;s!==c;++s)if(r[s]!==r[s+e]){a.setValue(r,n);break}},saveOriginalState:function(){var t=this.binding,e=this.buffer,r=this.valueSize,n=3*r;t.getValue(e,n);for(var i=r,a=n;i!==a;++i)e[i]=e[n+i%r];this.cumulativeWeight=0},restoreOriginalState:function(){var t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_select:function(t,e,r,n,i){if(n>=.5)for(var a=0;a!==i;++a)t[e+a]=t[r+a]},_slerp:function(t,e,r,n){cr.slerpFlat(t,e,t,e,t,r,n)},_lerp:function(t,e,r,n,i){for(var a=1-n,o=0;o!==i;++o){var s=e+o;t[s]=t[s]*a+t[r+o]*n}}});var $d="\\[\\]\\.:\\/",tf=new RegExp("["+$d+"]","g"),ef="[^"+$d+"]",rf="[^"+$d.replace("\\.","")+"]",nf=/((?:WC+[\/:])*)/.source.replace("WC",ef),af=/(WCOD+)?/.source.replace("WCOD",rf),of=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",ef),sf=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",ef),cf=new RegExp("^"+nf+af+of+sf+"$"),lf=["material","materials","bones"];function hf(t,e,r){var n=r||uf.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}function uf(t,e,r){this.path=e,this.parsedPath=r||uf.parseTrackName(e),this.node=uf.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}function pf(){this.uuid=or.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var e=0,r=arguments.length;e!==r;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var n=this;this.stats={objects:{get total(){return n._objects.length},get inUse(){return this.total-n.nCachedObjects_}},get bindingsPerObject(){return n._bindings.length}}}function df(t,e,r){this._mixer=t,this._clip=e,this._localRoot=r||null;for(var n=e.tracks,i=n.length,a=new Array(i),o={endingStart:Se,endingEnd:Se},s=0;s!==i;++s){var c=n[s].createInterpolant(null);a[s]=c,c.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(i),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=xe,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function ff(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function mf(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}function vf(t,e,r){Al.call(this,t,e),this.meshPerAttribute=r||1}function gf(t,e,r,n){this.ray=new yn(t,e),this.near=r||0,this.far=n||1/0,this.camera=null,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function yf(t,e){return t.distance-e.distance}function xf(t,e,r,n){if(!1!==t.visible&&(t.raycast(e,r),!0===n))for(var i=t.children,a=0,o=i.length;a<o;a++)xf(i[a],e,r,!0)}function bf(t,e,r){return this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==r?r:0,this}function wf(t,e,r){return this.radius=void 0!==t?t:1,this.theta=void 0!==e?e:0,this.y=void 0!==r?r:0,this}Object.assign(hf.prototype,{getValue:function(t,e){this.bind();var r=this._targetGroup.nCachedObjects_,n=this._bindings[r];void 0!==n&&n.getValue(t,e)},setValue:function(t,e){for(var r=this._bindings,n=this._targetGroup.nCachedObjects_,i=r.length;n!==i;++n)r[n].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,r=t.length;e!==r;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,r=t.length;e!==r;++e)t[e].unbind()}}),Object.assign(uf,{Composite:hf,create:function(t,e,r){return t&&t.isAnimationObjectGroup?new uf.Composite(t,e,r):new uf(t,e,r)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(tf,"")},parseTrackName:function(t){var e=cf.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);var r={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},n=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){var i=r.nodeName.substring(n+1);-1!==lf.indexOf(i)&&(r.nodeName=r.nodeName.substring(0,n),r.objectName=i)}if(null===r.propertyName||0===r.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return r},findNode:function(t,e){if(!e||""===e||"root"===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){var r=t.skeleton.getBoneByName(e);if(void 0!==r)return r}if(t.children){var n=function(t){for(var r=0;r<t.length;r++){var i=t[r];if(i.name===e||i.uuid===e)return i;var a=n(i.children);if(a)return a}return null},i=n(t.children);if(i)return i}return null}}),Object.assign(uf.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){for(var r=this.resolvedProperty,n=0,i=r.length;n!==i;++n)t[e++]=r[n]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){for(var r=this.resolvedProperty,n=0,i=r.length;n!==i;++n)r[n]=t[e++]},function(t,e){for(var r=this.resolvedProperty,n=0,i=r.length;n!==i;++n)r[n]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){for(var r=this.resolvedProperty,n=0,i=r.length;n!==i;++n)r[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){var t=this.node,e=this.parsedPath,r=e.objectName,n=e.propertyName,i=e.propertyIndex;if(t||(t=uf.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(r){var a=e.objectIndex;switch(r){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(var o=0;o<t.length;o++)if(t[o].name===a){a=o;break}break;default:if(void 0===t[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[r]}if(void 0!==a){if(void 0===t[a])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[a]}}var s=t[n];if(void 0!==s){var c=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?c=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(c=this.Versioning.MatrixWorldNeedsUpdate);var l=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===n){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);for(o=0;o<this.node.geometry.morphAttributes.position.length;o++)if(t.geometry.morphAttributes.position[o].name===i){i=o;break}}else{if(!t.geometry.morphTargets)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);for(o=0;o<this.node.geometry.morphTargets.length;o++)if(t.geometry.morphTargets[o].name===i){i=o;break}}}l=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(l=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(l=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][c]}else{var h=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+n+" but it wasn't found.",t)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(uf.prototype,{_getValue_unbound:uf.prototype.getValue,_setValue_unbound:uf.prototype.setValue}),Object.assign(pf.prototype,{isAnimationObjectGroup:!0,add:function(){for(var t=this._objects,e=t.length,r=this.nCachedObjects_,n=this._indicesByUUID,i=this._paths,a=this._parsedPaths,o=this._bindings,s=o.length,c=void 0,l=0,h=arguments.length;l!==h;++l){var u=arguments[l],p=u.uuid,d=n[p];if(void 0===d){d=e++,n[p]=d,t.push(u);for(var f=0,m=s;f!==m;++f)o[f].push(new uf(u,i[f],a[f]))}else if(d<r){c=t[d];var v=--r,g=t[v];n[g.uuid]=d,t[d]=g,n[p]=v,t[v]=u;for(f=0,m=s;f!==m;++f){var y=o[f],x=y[v],b=y[d];y[d]=x,void 0===b&&(b=new uf(u,i[f],a[f])),y[v]=b}}else t[d]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=r},remove:function(){for(var t=this._objects,e=this.nCachedObjects_,r=this._indicesByUUID,n=this._bindings,i=n.length,a=0,o=arguments.length;a!==o;++a){var s=arguments[a],c=s.uuid,l=r[c];if(void 0!==l&&l>=e){var h=e++,u=t[h];r[u.uuid]=l,t[l]=u,r[c]=h,t[h]=s;for(var p=0,d=i;p!==d;++p){var f=n[p],m=f[h],v=f[l];f[l]=m,f[h]=v}}}this.nCachedObjects_=e},uncache:function(){for(var t=this._objects,e=t.length,r=this.nCachedObjects_,n=this._indicesByUUID,i=this._bindings,a=i.length,o=0,s=arguments.length;o!==s;++o){var c=arguments[o].uuid,l=n[c];if(void 0!==l)if(delete n[c],l<r){var h=--r,u=t[h],p=t[g=--e];n[u.uuid]=l,t[l]=u,n[p.uuid]=h,t[h]=p,t.pop();for(var d=0,f=a;d!==f;++d){var m=(y=i[d])[h],v=y[g];y[l]=m,y[h]=v,y.pop()}}else{var g;n[(p=t[g=--e]).uuid]=l,t[l]=p,t.pop();for(d=0,f=a;d!==f;++d){var y;(y=i[d])[l]=y[g],y.pop()}}}this.nCachedObjects_=r},subscribe_:function(t,e){var r=this._bindingsIndicesByPath,n=r[t],i=this._bindings;if(void 0!==n)return i[n];var a=this._paths,o=this._parsedPaths,s=this._objects,c=s.length,l=this.nCachedObjects_,h=new Array(c);n=i.length,r[t]=n,a.push(t),o.push(e),i.push(h);for(var u=l,p=s.length;u!==p;++u){var d=s[u];h[u]=new uf(d,t,e)}return h},unsubscribe_:function(t){var e=this._bindingsIndicesByPath,r=e[t];if(void 0!==r){var n=this._paths,i=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o];e[t[o]]=r,a[r]=s,a.pop(),i[r]=i[o],i.pop(),n[r]=n[o],n.pop()}}}),Object.assign(df.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,r){if(t.fadeOut(e),this.fadeIn(e),r){var n=this._clip.duration,i=t._clip.duration,a=i/n,o=n/i;t.warp(1,a,e),this.warp(o,1,e)}return this},crossFadeTo:function(t,e,r){return t.crossFadeFrom(this,e,r)},stopFading:function(){var t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,r){var n=this._mixer,i=n.time,a=this._timeScaleInterpolant,o=this.timeScale;null===a&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);var s=a.parameterPositions,c=a.sampleValues;return s[0]=i,s[1]=i+r,c[0]=t/o,c[1]=e/o,this},stopWarping:function(){var t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,r,n){if(this.enabled){var i=this._startTime;if(null!==i){var a=(t-i)*r;if(a<0||0===r)return;this._startTime=null,e=r*a}e*=this._updateTimeScale(t);var o=this._updateTime(e),s=this._updateWeight(t);if(s>0)for(var c=this._interpolants,l=this._propertyBindings,h=0,u=c.length;h!==u;++h)c[h].evaluate(o),l[h].accumulate(n,s)}else this._updateWeight(t)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var r=this._weightInterpolant;if(null!==r){var n=r.evaluate(t)[0];e*=n,t>r.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var r=this._timeScaleInterpolant;if(null!==r)e*=r.evaluate(t)[0],t>r.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t,r=this._clip.duration,n=this.loop,i=this._loopCount,a=n===be;if(0===t)return-1===i?e:a&&1==(1&i)?r-e:e;if(n===ye){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(e>=r)e=r;else{if(!(e<0)){this.time=e;break t}e=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=e,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===i&&(t>=0?(i=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),e>=r||e<0){var o=Math.floor(e/r);e-=r*o,i+=Math.abs(o);var s=this.repetitions-i;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?r:0,this.time=e,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){var c=t<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=i,this.time=e,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=e;if(a&&1==(1&i))return r-e}return e},_setEndings:function(t,e,r){var n=this._interpolantSettings;r?(n.endingStart=Te,n.endingEnd=Te):(n.endingStart=t?this.zeroSlopeAtStart?Te:Se:Ee,n.endingEnd=e?this.zeroSlopeAtEnd?Te:Se:Ee)},_scheduleFading:function(t,e,r){var n=this._mixer,i=n.time,a=this._weightInterpolant;null===a&&(a=n._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,s=a.sampleValues;return o[0]=i,s[0]=e,o[1]=i+t,s[1]=r,this}}),ff.prototype=Object.assign(Object.create(t.prototype),{constructor:ff,_bindAction:function(t,e){var r=t._localRoot||this._root,n=t._clip.tracks,i=n.length,a=t._propertyBindings,o=t._interpolants,s=r.uuid,c=this._bindingsByRootAndName,l=c[s];void 0===l&&(l={},c[s]=l);for(var h=0;h!==i;++h){var u=n[h],p=u.name,d=l[p];if(void 0!==d)a[h]=d;else{if(void 0!==(d=a[h])){null===d._cacheIndex&&(++d.referenceCount,this._addInactiveBinding(d,s,p));continue}var f=e&&e._propertyBindings[h].binding.parsedPath;++(d=new Kd(uf.create(r,p,f),u.ValueTypeName,u.getValueSize())).referenceCount,this._addInactiveBinding(d,s,p),a[h]=d}o[h].resultBuffer=d.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){var e=(t._localRoot||this._root).uuid,r=t._clip.uuid,n=this._actionsByClip[r];this._bindAction(t,n&&n.knownActions[0]),this._addInactiveAction(t,r,e)}for(var i=t._propertyBindings,a=0,o=i.length;a!==o;++a){var s=i[a];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){for(var e=t._propertyBindings,r=0,n=e.length;r!==n;++r){var i=e[r];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){var e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,r){var n=this._actions,i=this._actionsByClip,a=i[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,i[e]=a;else{var o=a.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=n.length,n.push(t),a.actionByRoot[r]=t},_removeInactiveAction:function(t){var e=this._actions,r=e[e.length-1],n=t._cacheIndex;r._cacheIndex=n,e[n]=r,e.pop(),t._cacheIndex=null;var i=t._clip.uuid,a=this._actionsByClip,o=a[i],s=o.knownActions,c=s[s.length-1],l=t._byClipCacheIndex;c._byClipCacheIndex=l,s[l]=c,s.pop(),t._byClipCacheIndex=null,delete o.actionByRoot[(t._localRoot||this._root).uuid],0===s.length&&delete a[i],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,r=0,n=e.length;r!==n;++r){var i=e[r];0==--i.referenceCount&&this._removeInactiveBinding(i)}},_lendAction:function(t){var e=this._actions,r=t._cacheIndex,n=this._nActiveActions++,i=e[n];t._cacheIndex=n,e[n]=t,i._cacheIndex=r,e[r]=i},_takeBackAction:function(t){var e=this._actions,r=t._cacheIndex,n=--this._nActiveActions,i=e[n];t._cacheIndex=n,e[n]=t,i._cacheIndex=r,e[r]=i},_addInactiveBinding:function(t,e,r){var n=this._bindingsByRootAndName,i=n[e],a=this._bindings;void 0===i&&(i={},n[e]=i),i[r]=t,t._cacheIndex=a.length,a.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,r=t.binding,n=r.rootNode.uuid,i=r.path,a=this._bindingsByRootAndName,o=a[n],s=e[e.length-1],c=t._cacheIndex;s._cacheIndex=c,e[c]=s,e.pop(),delete o[i],0===Object.keys(o).length&&delete a[n]},_lendBinding:function(t){var e=this._bindings,r=t._cacheIndex,n=this._nActiveBindings++,i=e[n];t._cacheIndex=n,e[n]=t,i._cacheIndex=r,e[r]=i},_takeBackBinding:function(t){var e=this._bindings,r=t._cacheIndex,n=--this._nActiveBindings,i=e[n];t._cacheIndex=n,e[n]=t,i._cacheIndex=r,e[r]=i},_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,r=t[e];return void 0===r&&((r=new tp(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=e,t[e]=r),r},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,r=t.__cacheIndex,n=--this._nActiveControlInterpolants,i=e[n];t.__cacheIndex=n,e[n]=t,i.__cacheIndex=r,e[r]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e){var r=e||this._root,n=r.uuid,i="string"==typeof t?hp.findByName(r,t):t,a=null!==i?i.uuid:t,o=this._actionsByClip[a],s=null;if(void 0!==o){var c=o.actionByRoot[n];if(void 0!==c)return c;s=o.knownActions[0],null===i&&(i=s._clip)}if(null===i)return null;var l=new df(this,i,e);return this._bindAction(l,s),this._addInactiveAction(l,a,n),l},existingAction:function(t,e){var r=e||this._root,n=r.uuid,i="string"==typeof t?hp.findByName(r,t):t,a=i?i.uuid:t,o=this._actionsByClip[a];return void 0!==o&&o.actionByRoot[n]||null},stopAllAction:function(){var t=this._actions,e=this._nActiveActions,r=this._bindings,n=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var i=0;i!==e;++i)t[i].reset();for(i=0;i!==n;++i)r[i].useCount=0;return this},update:function(t){t*=this.timeScale;for(var e=this._actions,r=this._nActiveActions,n=this.time+=t,i=Math.sign(t),a=this._accuIndex^=1,o=0;o!==r;++o){e[o]._update(n,t,i,a)}var s=this._bindings,c=this._nActiveBindings;for(o=0;o!==c;++o)s[o].apply(a);return this},getRoot:function(){return this._root},uncacheClip:function(t){var e=this._actions,r=t.uuid,n=this._actionsByClip,i=n[r];if(void 0!==i){for(var a=i.knownActions,o=0,s=a.length;o!==s;++o){var c=a[o];this._deactivateAction(c);var l=c._cacheIndex,h=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=l,e[l]=h,e.pop(),this._removeInactiveBindingsForAction(c)}delete n[r]}},uncacheRoot:function(t){var e=t.uuid,r=this._actionsByClip;for(var n in r){var i=r[n].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}var a=this._bindingsByRootAndName[e];if(void 0!==a)for(var o in a){var s=a[o];s.restoreOriginalState(),this._removeInactiveBinding(s)}},uncacheAction:function(t,e){var r=this.existingAction(t,e);null!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}}),mf.prototype.clone=function(){return new mf(void 0===this.value.clone?this.value:this.value.clone())},vf.prototype=Object.assign(Object.create(Al.prototype),{constructor:vf,isInstancedInterleavedBuffer:!0,copy:function(t){return Al.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),Object.assign(gf.prototype,{linePrecision:1,set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e,r){var n=r||[];return xf(t,this,n,e),n.sort(yf),n},intersectObjects:function(t,e,r){var n=r||[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),n;for(var i=0,a=t.length;i<a;i++)xf(t[i],this,n,e);return n.sort(yf),n}}),Object.assign(bf.prototype,{set:function(t,e,r){return this.radius=t,this.phi=e,this.theta=r,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,r){return this.radius=Math.sqrt(t*t+e*e+r*r),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,r),this.phi=Math.acos(or.clamp(e/this.radius,-1,1))),this}}),Object.assign(wf.prototype,{set:function(t,e,r){return this.radius=t,this.theta=e,this.y=r,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,r){return this.radius=Math.sqrt(t*t+r*r),this.theta=Math.atan2(t,r),this.y=e,this}});var _f=new sr;function Mf(t,e){this.min=void 0!==t?t:new sr(1/0,1/0),this.max=void 0!==e?e:new sr(-1/0,-1/0)}Object.assign(Mf.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(t,e){var r=_f.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new sr),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new sr),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new sr),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new sr),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){return _f.copy(t).clamp(this.min,this.max).sub(t).length()},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});var Sf=new ur,Tf=new ur;function Ef(t,e){this.start=void 0!==t?t:new ur,this.end=void 0!==e?e:new ur}function Af(t){qr.call(this),this.material=t,this.render=function(){}}Object.assign(Ef.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new ur),t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new ur),t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new ur),this.delta(e).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(t,e){Sf.subVectors(t,this.start),Tf.subVectors(this.end,this.start);var r=Tf.dot(Tf),n=Tf.dot(Sf)/r;return e&&(n=or.clamp(n,0,1)),n},closestPointToPoint:function(t,e,r){var n=this.closestPointToPointParameter(t,e);return void 0===r&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),r=new ur),this.delta(r).multiplyScalar(n).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}),Af.prototype=Object.create(qr.prototype),Af.prototype.constructor=Af,Af.prototype.isImmediateRenderObject=!0;var Lf=new ur,Rf=new ur,Cf=new fr,Pf=["a","b","c"];function Of(t,e,r,n){this.object=t,this.size=void 0!==e?e:1;var i=void 0!==r?r:16711680,a=void 0!==n?n:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=3*s.faces.length:s&&s.isBufferGeometry&&(o=s.attributes.normal.count);var c=new oi,l=new Zn(2*o*3,3);c.addAttribute("position",l),sh.call(this,c,new Kl({color:i,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}Of.prototype=Object.create(sh.prototype),Of.prototype.constructor=Of,Of.prototype.update=function(){this.object.updateMatrixWorld(!0),Cf.getNormalMatrix(this.object.matrixWorld);var t=this.object.matrixWorld,e=this.geometry.attributes.position,r=this.object.geometry;if(r&&r.isGeometry)for(var n=r.vertices,i=r.faces,a=0,o=0,s=i.length;o<s;o++)for(var c=i[o],l=0,h=c.vertexNormals.length;l<h;l++){var u=n[c[Pf[l]]],p=c.vertexNormals[l];Lf.copy(u).applyMatrix4(t),Rf.copy(p).applyMatrix3(Cf).normalize().multiplyScalar(this.size).add(Lf),e.setXYZ(a,Lf.x,Lf.y,Lf.z),a+=1,e.setXYZ(a,Rf.x,Rf.y,Rf.z),a+=1}else if(r&&r.isBufferGeometry){var d=r.attributes.position,f=r.attributes.normal;for(a=0,l=0,h=d.count;l<h;l++)Lf.set(d.getX(l),d.getY(l),d.getZ(l)).applyMatrix4(t),Rf.set(f.getX(l),f.getY(l),f.getZ(l)),Rf.applyMatrix3(Cf).normalize().multiplyScalar(this.size).add(Lf),e.setXYZ(a,Lf.x,Lf.y,Lf.z),a+=1,e.setXYZ(a,Rf.x,Rf.y,Rf.z),a+=1}e.needsUpdate=!0};var Df=new ur;function Nf(t,e){qr.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;for(var r=new oi,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],i=0,a=1;i<32;i++,a++){var o=i/32*Math.PI*2,s=a/32*Math.PI*2;n.push(Math.cos(o),Math.sin(o),1,Math.cos(s),Math.sin(s),1)}r.addAttribute("position",new Zn(n,3));var c=new Kl({fog:!1});this.cone=new sh(r,c),this.add(this.cone),this.update()}Nf.prototype=Object.create(qr.prototype),Nf.prototype.constructor=Nf,Nf.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},Nf.prototype.update=function(){this.light.updateMatrixWorld();var t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Df.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Df),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};var If=new ur,Bf=new Lr,zf=new Lr;function Ff(t){var e=[];t&&t.isBone&&e.push(t);for(var r=0;r<t.children.length;r++)e.push.apply(e,Ff(t.children[r]));return e}function Gf(t){for(var e=Ff(t),r=new oi,n=[],i=[],a=new Dn(0,0,1),o=new Dn(0,1,0),s=0;s<e.length;s++){var c=e[s];c.parent&&c.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),i.push(a.r,a.g,a.b),i.push(o.r,o.g,o.b))}r.addAttribute("position",new Zn(n,3)),r.addAttribute("color",new Zn(i,3));var l=new Kl({vertexColors:w,depthTest:!1,depthWrite:!1,transparent:!0});sh.call(this,r,l),this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}function Uf(t,e,r){this.light=t,this.light.updateMatrixWorld(),this.color=r;var n=new Su(e,4,2),i=new Un({wireframe:!0,fog:!1});Si.call(this,n,i),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}function Hf(t,e){this.type="RectAreaLightHelper",this.light=t,this.color=e;var r=new oi;r.addAttribute("position",new Zn([1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),r.computeBoundingSphere();var n=new Kl({fog:!1});ih.call(this,r,n);var i=new oi;i.addAttribute("position",new Zn([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),i.computeBoundingSphere(),this.add(new Si(i,new Un({side:m,fog:!1}))),this.update()}Gf.prototype=Object.create(sh.prototype),Gf.prototype.constructor=Gf,Gf.prototype.updateMatrixWorld=function(t){var e=this.bones,r=this.geometry,n=r.getAttribute("position");zf.getInverse(this.root.matrixWorld);for(var i=0,a=0;i<e.length;i++){var o=e[i];o.parent&&o.parent.isBone&&(Bf.multiplyMatrices(zf,o.matrixWorld),If.setFromMatrixPosition(Bf),n.setXYZ(a,If.x,If.y,If.z),Bf.multiplyMatrices(zf,o.parent.matrixWorld),If.setFromMatrixPosition(Bf),n.setXYZ(a+1,If.x,If.y,If.z),a+=2)}r.getAttribute("position").needsUpdate=!0,qr.prototype.updateMatrixWorld.call(this,t)},Uf.prototype=Object.create(Si.prototype),Uf.prototype.constructor=Uf,Uf.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Uf.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)},Hf.prototype=Object.create(ih.prototype),Hf.prototype.constructor=Hf,Hf.prototype.update=function(){if(this.scale.set(.5*this.light.width,.5*this.light.height,1),void 0!==this.color)this.material.color.set(this.color),this.children[0].material.color.set(this.color);else{this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);var t=this.material.color,e=Math.max(t.r,t.g,t.b);e>1&&t.multiplyScalar(1/e),this.children[0].material.color.copy(this.material.color)}},Hf.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()};var Vf=new ur,jf=new Dn,kf=new Dn;function Wf(t,e,r){qr.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=r;var n=new Lh(e);n.rotateY(.5*Math.PI),this.material=new Un({wireframe:!0,fog:!1}),void 0===this.color&&(this.material.vertexColors=w);var i=n.getAttribute("position"),a=new Float32Array(3*i.count);n.addAttribute("color",new Hn(a,3)),this.add(new Si(n,this.material)),this.update()}function qf(t,e){this.lightProbe=t,this.size=e;var r={GAMMA_OUTPUT:""},n=new Gi({defines:r,uniforms:{sh:{value:this.lightProbe.sh.coefficients},intensity:{value:this.lightProbe.intensity}},vertexShader:["varying vec3 vNormal;","void main() {","\tvNormal = normalize( normalMatrix * normal );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#define RECIPROCAL_PI 0.318309886","vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {","\t// matrix is assumed to be orthogonal","\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );","}","vec3 linearToOutput( in vec3 a ) {","\t#ifdef GAMMA_OUTPUT","\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );","\t#else","\t\treturn a;","\t#endif","}","// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf","vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {","\t// normal is assumed to have unit length","\tfloat x = normal.x, y = normal.y, z = normal.z;","\t// band 0","\tvec3 result = shCoefficients[ 0 ] * 0.886227;","\t// band 1","\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;","\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;","\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;","\t// band 2","\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;","\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;","\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );","\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;","\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );","\treturn result;","}","uniform vec3 sh[ 9 ]; // sh coefficients","uniform float intensity; // light probe intensity","varying vec3 vNormal;","void main() {","\tvec3 normal = normalize( vNormal );","\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );","\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );","\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;","\toutgoingLight = linearToOutput( outgoingLight );","\tgl_FragColor = vec4( outgoingLight, 1.0 );","}"].join("\n")}),i=new Su(1,32,16);Si.call(this,i,n),this.onBeforeRender()}function Xf(t,e,r,n){t=t||10,e=e||10,r=new Dn(void 0!==r?r:4473924),n=new Dn(void 0!==n?n:8947848);for(var i=e/2,a=t/e,o=t/2,s=[],c=[],l=0,h=0,u=-o;l<=e;l++,u+=a){s.push(-o,0,u,o,0,u),s.push(u,0,-o,u,0,o);var p=l===i?r:n;p.toArray(c,h),h+=3,p.toArray(c,h),h+=3,p.toArray(c,h),h+=3,p.toArray(c,h),h+=3}var d=new oi;d.addAttribute("position",new Zn(s,3)),d.addAttribute("color",new Zn(c,3));var f=new Kl({vertexColors:w});sh.call(this,d,f)}function Yf(t,e,r,n,i,a){t=t||10,e=e||16,r=r||8,n=n||64,i=new Dn(void 0!==i?i:4473924),a=new Dn(void 0!==a?a:8947848);var o,s,c,l,h,u,p,d=[],f=[];for(l=0;l<=e;l++)c=l/e*(2*Math.PI),o=Math.sin(c)*t,s=Math.cos(c)*t,d.push(0,0,0),d.push(o,0,s),p=1&l?i:a,f.push(p.r,p.g,p.b),f.push(p.r,p.g,p.b);for(l=0;l<=r;l++)for(p=1&l?i:a,u=t-t/r*l,h=0;h<n;h++)c=h/n*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,d.push(o,0,s),f.push(p.r,p.g,p.b),c=(h+1)/n*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,d.push(o,0,s),f.push(p.r,p.g,p.b);var m=new oi;m.addAttribute("position",new Zn(d,3)),m.addAttribute("color",new Zn(f,3));var v=new Kl({vertexColors:w});sh.call(this,m,v)}function Zf(t,e,r,n){this.audio=t,this.range=e||1,this.divisionsInnerAngle=r||16,this.divisionsOuterAngle=n||2;var i=new oi,a=this.divisionsInnerAngle+2*this.divisionsOuterAngle,o=new Float32Array(3*(3*a+3));i.addAttribute("position",new Hn(o,3));var s=new Kl({color:65280}),c=new Kl({color:16776960});ih.call(this,i,[c,s]),this.update()}Wf.prototype=Object.create(qr.prototype),Wf.prototype.constructor=Wf,Wf.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Wf.prototype.update=function(){var t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var e=t.geometry.getAttribute("color");jf.copy(this.light.color),kf.copy(this.light.groundColor);for(var r=0,n=e.count;r<n;r++){var i=r<n/2?jf:kf;e.setXYZ(r,i.r,i.g,i.b)}e.needsUpdate=!0}t.lookAt(Vf.setFromMatrixPosition(this.light.matrixWorld).negate())},qf.prototype=Object.create(Si.prototype),qf.prototype.constructor=qf,qf.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},qf.prototype.onBeforeRender=function(){this.position.copy(this.lightProbe.position),this.scale.set(1,1,1).multiplyScalar(this.size),this.material.uniforms.intensity.value=this.lightProbe.intensity},Xf.prototype=Object.assign(Object.create(sh.prototype),{constructor:Xf,copy:function(t){return sh.prototype.copy.call(this,t),this.geometry.copy(t.geometry),this.material.copy(t.material),this},clone:function(){return(new this.constructor).copy(this)}}),Yf.prototype=Object.create(sh.prototype),Yf.prototype.constructor=Yf,Zf.prototype=Object.create(ih.prototype),Zf.prototype.constructor=Zf,Zf.prototype.update=function(){var t,e,r=this.audio,n=this.range,i=this.divisionsInnerAngle,a=this.divisionsOuterAngle,o=or.degToRad(r.panner.coneInnerAngle),s=or.degToRad(r.panner.coneOuterAngle),c=o/2,l=s/2,h=0,u=0,p=this.geometry,d=p.attributes.position;function f(r,i,a,o){var s=(i-r)/a;for(d.setXYZ(h,0,0,0),u++,t=r;t<i;t+=s)e=h+u,d.setXYZ(e,Math.sin(t)*n,0,Math.cos(t)*n),d.setXYZ(e+1,Math.sin(Math.min(t+s,i))*n,0,Math.cos(Math.min(t+s,i))*n),d.setXYZ(e+2,0,0,0),u+=3;p.addGroup(h,u,o),h+=u,u=0}p.clearGroups(),f(-l,-c,a,0),f(-c,c,i,1),f(c,l,a,0),d.needsUpdate=!0,o===s&&(this.material[0].visible=!1)},Zf.prototype.dispose=function(){this.geometry.dispose(),this.material[0].dispose(),this.material[1].dispose()};var Jf=new ur,Qf=new ur,Kf=new fr;function $f(t,e,r,n){this.object=t,this.size=void 0!==e?e:1;var i=void 0!==r?r:16776960,a=void 0!==n?n:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=s.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var c=new oi,l=new Zn(2*o*3,3);c.addAttribute("position",l),sh.call(this,c,new Kl({color:i,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}$f.prototype=Object.create(sh.prototype),$f.prototype.constructor=$f,$f.prototype.update=function(){this.object.updateMatrixWorld(!0),Kf.getNormalMatrix(this.object.matrixWorld);for(var t=this.object.matrixWorld,e=this.geometry.attributes.position,r=this.object.geometry,n=r.vertices,i=r.faces,a=0,o=0,s=i.length;o<s;o++){var c=i[o],l=c.normal;Jf.copy(n[c.a]).add(n[c.b]).add(n[c.c]).divideScalar(3).applyMatrix4(t),Qf.copy(l).applyMatrix3(Kf).normalize().multiplyScalar(this.size).add(Jf),e.setXYZ(a,Jf.x,Jf.y,Jf.z),a+=1,e.setXYZ(a,Qf.x,Qf.y,Qf.z),a+=1}e.needsUpdate=!0};var tm=new ur,em=new ur,rm=new ur;function nm(t,e,r){qr.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=r,void 0===e&&(e=1);var n=new oi;n.addAttribute("position",new Zn([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var i=new Kl({fog:!1});this.lightPlane=new ih(n,i),this.add(this.lightPlane),(n=new oi).addAttribute("position",new Zn([0,0,0,0,0,1],3)),this.targetLine=new ih(n,i),this.add(this.targetLine),this.update()}nm.prototype=Object.create(qr.prototype),nm.prototype.constructor=nm,nm.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},nm.prototype.update=function(){tm.setFromMatrixPosition(this.light.matrixWorld),em.setFromMatrixPosition(this.light.target.matrixWorld),rm.subVectors(em,tm),this.lightPlane.lookAt(em),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(em),this.targetLine.scale.z=rm.length()};var im=new ur,am=new Ui;function om(t){var e=new oi,r=new Kl({color:16777215,vertexColors:b}),n=[],i=[],a={},o=new Dn(16755200),s=new Dn(16711680),c=new Dn(43775),l=new Dn(16777215),h=new Dn(3355443);function u(t,e,r){p(t,r),p(e,r)}function p(t,e){n.push(0,0,0),i.push(e.r,e.g,e.b),void 0===a[t]&&(a[t]=[]),a[t].push(n.length/3-1)}u("n1","n2",o),u("n2","n4",o),u("n4","n3",o),u("n3","n1",o),u("f1","f2",o),u("f2","f4",o),u("f4","f3",o),u("f3","f1",o),u("n1","f1",o),u("n2","f2",o),u("n3","f3",o),u("n4","f4",o),u("p","n1",s),u("p","n2",s),u("p","n3",s),u("p","n4",s),u("u1","u2",c),u("u2","u3",c),u("u3","u1",c),u("c","t",l),u("p","c",h),u("cn1","cn2",h),u("cn3","cn4",h),u("cf1","cf2",h),u("cf3","cf4",h),e.addAttribute("position",new Zn(n,3)),e.addAttribute("color",new Zn(i,3)),sh.call(this,e,r),this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}function sm(t,e,r,n,i,a,o){im.set(i,a,o).unproject(n);var s=e[t];if(void 0!==s)for(var c=r.getAttribute("position"),l=0,h=s.length;l<h;l++)c.setXYZ(s[l],im.x,im.y,im.z)}om.prototype=Object.create(sh.prototype),om.prototype.constructor=om,om.prototype.update=function(){var t=this.geometry,e=this.pointMap;am.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),sm("c",e,t,am,0,0,-1),sm("t",e,t,am,0,0,1),sm("n1",e,t,am,-1,-1,-1),sm("n2",e,t,am,1,-1,-1),sm("n3",e,t,am,-1,1,-1),sm("n4",e,t,am,1,1,-1),sm("f1",e,t,am,-1,-1,1),sm("f2",e,t,am,1,-1,1),sm("f3",e,t,am,-1,1,1),sm("f4",e,t,am,1,1,1),sm("u1",e,t,am,.7,1.1,-1),sm("u2",e,t,am,-.7,1.1,-1),sm("u3",e,t,am,0,2,-1),sm("cf1",e,t,am,-1,0,1),sm("cf2",e,t,am,1,0,1),sm("cf3",e,t,am,0,-1,1),sm("cf4",e,t,am,0,1,1),sm("cn1",e,t,am,-1,0,-1),sm("cn2",e,t,am,1,0,-1),sm("cn3",e,t,am,0,-1,-1),sm("cn4",e,t,am,0,1,-1),t.getAttribute("position").needsUpdate=!0};var cm=new sn;function lm(t,e){this.object=t,void 0===e&&(e=16776960);var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),i=new oi;i.setIndex(new Hn(r,1)),i.addAttribute("position",new Hn(n,3)),sh.call(this,i,new Kl({color:e})),this.matrixAutoUpdate=!1,this.update()}function hm(t,e){this.type="Box3Helper",this.box=t,e=e||16776960;var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new oi;n.setIndex(new Hn(r,1)),n.addAttribute("position",new Zn([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),sh.call(this,n,new Kl({color:e})),this.geometry.computeBoundingSphere()}function um(t,e,r){this.type="PlaneHelper",this.plane=t,this.size=void 0===e?1:e;var n=void 0!==r?r:16776960,i=new oi;i.addAttribute("position",new Zn([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),ih.call(this,i,new Kl({color:n}));var a=new oi;a.addAttribute("position",new Zn([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),a.computeBoundingSphere(),this.add(new Si(a,new Un({color:n,opacity:.2,transparent:!0,depthWrite:!1})))}lm.prototype=Object.create(sh.prototype),lm.prototype.constructor=lm,lm.prototype.update=function(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&cm.setFromObject(this.object),!cm.isEmpty()){var e=cm.min,r=cm.max,n=this.geometry.attributes.position,i=n.array;i[0]=r.x,i[1]=r.y,i[2]=r.z,i[3]=e.x,i[4]=r.y,i[5]=r.z,i[6]=e.x,i[7]=e.y,i[8]=r.z,i[9]=r.x,i[10]=e.y,i[11]=r.z,i[12]=r.x,i[13]=r.y,i[14]=e.z,i[15]=e.x,i[16]=r.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=r.x,i[22]=e.y,i[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}},lm.prototype.setFromObject=function(t){return this.object=t,this.update(),this},lm.prototype.copy=function(t){return sh.prototype.copy.call(this,t),this.object=t.object,this},lm.prototype.clone=function(){return(new this.constructor).copy(this)},hm.prototype=Object.create(sh.prototype),hm.prototype.constructor=hm,hm.prototype.updateMatrixWorld=function(t){var e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),qr.prototype.updateMatrixWorld.call(this,t))},um.prototype=Object.create(ih.prototype),um.prototype.constructor=um,um.prototype.updateMatrixWorld=function(t){var e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?m:f,this.lookAt(this.plane.normal),qr.prototype.updateMatrixWorld.call(this,t)};var pm,dm,fm=new ur;function mm(t,e,r,n,i,a){qr.call(this),void 0===t&&(t=new ur(0,0,1)),void 0===e&&(e=new ur(0,0,0)),void 0===r&&(r=1),void 0===n&&(n=16776960),void 0===i&&(i=.2*r),void 0===a&&(a=.2*i),void 0===pm&&((pm=new oi).addAttribute("position",new Zn([0,0,0,0,1,0],3)),(dm=new Nu(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(e),this.line=new ih(pm,new Kl({color:n})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Si(dm,new Un({color:n})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(r,i,a)}function vm(t){var e=[0,0,0,t=t||1,0,0,0,0,0,0,t,0,0,0,0,0,0,t],r=new oi;r.addAttribute("position",new Zn(e,3)),r.addAttribute("color",new Zn([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var n=new Kl({vertexColors:w});sh.call(this,r,n)}function gm(t,e,r,n,i,a,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new zn(t,e,r,i,a,o)}mm.prototype=Object.create(qr.prototype),mm.prototype.constructor=mm,mm.prototype.setDirection=function(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{fm.set(t.z,0,-t.x).normalize();var e=Math.acos(t.y);this.quaternion.setFromAxisAngle(fm,e)}},mm.prototype.setLength=function(t,e,r){void 0===e&&(e=.2*t),void 0===r&&(r=.2*e),this.line.scale.set(1,Math.max(0,t-e),1),this.line.updateMatrix(),this.cone.scale.set(r,e,r),this.cone.position.y=t,this.cone.updateMatrix()},mm.prototype.setColor=function(t){this.line.material.color.set(t),this.cone.material.color.set(t)},mm.prototype.copy=function(t){return qr.prototype.copy.call(this,t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this},mm.prototype.clone=function(){return(new this.constructor).copy(this)},vm.prototype=Object.create(sh.prototype),vm.prototype.constructor=vm;var ym=0;exports.LineStrip=ym;var xm=1;function bm(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t}function wm(t){return void 0===t&&(t=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}function _m(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new fh(t,e)}function Mm(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Vl(t)}function Sm(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new fh(t,e)}function Tm(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new lh(t)}function Em(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new lh(t)}function Am(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new lh(t)}function Lm(t,e,r){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new ur(t,e,r)}function Rm(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new Hn(t,e).setDynamic(!0)}function Cm(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Vn(t,e)}function Pm(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new jn(t,e)}function Om(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new kn(t,e)}function Dm(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Wn(t,e)}function Nm(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new qn(t,e)}function Im(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Xn(t,e)}function Bm(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Yn(t,e)}function zm(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Zn(t,e)}function Fm(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Jn(t,e)}function Gm(t){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Dp.call(this,t),this.type="catmullrom",this.closed=!0}function Um(t){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Dp.call(this,t),this.type="catmullrom"}function Hm(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Dp.call(this,t),this.type="catmullrom"}function Vm(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new vm(t)}function jm(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new lm(t,e)}function km(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new sh(new Ou(t.geometry),new Kl({color:void 0!==e?e:16777215}))}function Wm(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new sh(new bh(t.geometry),new Kl({color:void 0!==e?e:16777215}))}function qm(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new yp(t)}function Xm(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new wp(t)}exports.LinePieces=xm,Tp.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Tp.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(Kp.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var e=new Pi,r=0,n=t.length;r<n;r++){var i=t[r];e.vertices.push(new ur(i.x,i.y,i.z||0))}return e}}),Object.assign($p.prototype,{fromPoints:function(t){console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}}),Gm.prototype=Object.create(Dp.prototype),Um.prototype=Object.create(Dp.prototype),Hm.prototype=Object.create(Dp.prototype),Object.assign(Hm.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),Xf.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Gf.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(vp.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),fd.extractUrlBase(t)}}),Object.assign(xd.prototype,{setTexturePath:function(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}),Object.assign(Mf.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(sn.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),Ef.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Object.assign(or,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),or.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),or.ceilPowerOfTwo(t)}}),Object.assign(fr.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(Lr.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new ur).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,r,n,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,n,r,i,a)}}),Ji.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},cr.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},Object.assign(yn.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(Rn.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}}),Object.assign(Rn,{barycoordFromPoint:function(t,e,r,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Rn.getBarycoord(t,e,r,n,i)},normal:function(t,e,r,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Rn.getNormal(t,e,r,n)}}),Object.assign(td.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new gu(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Ru(this,t)}}),Object.assign(sr.prototype,{fromAttribute:function(t,e,r){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,r)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(ur.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,r){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,r)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(yr.prototype,{fromAttribute:function(t,e,r){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,r)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Pi.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")}}),Object.assign(qr.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")}}),Object.defineProperties(qr.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties(ql.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Jl.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),Xl.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Tp.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),Hi.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(ed.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Hn.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")}}),Object.assign(oi.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addDrawCall:function(t,e,r){void 0!==r&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}),Object.defineProperties(oi.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.assign(yu.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties(mf.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Gn.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Dn}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===g}}}),Object.defineProperties(ku.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(Gi.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.assign(Sl.prototype,{clearTarget:function(t,e,r,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,r,n)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(Sl.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}}}),Object.defineProperties(pl.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(Wi.prototype,{activeCubeFace:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().")}},activeMipMapLevel:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().")}}}),Object.defineProperties(xr.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Object.defineProperties(_l.prototype,{standing:{set:function(){console.warn("THREE.WebVRManager: .standing has been removed.")}},userHeight:{set:function(){console.warn("THREE.WebVRManager: .userHeight has been removed.")}}}),Wd.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var e=this;return(new Pd).load(t,function(t){e.setBuffer(t)}),this},Qd.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},ki.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};var Ym={merge:function(t,e,r){var n;console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),n=e.matrix,e=e.geometry),t.merge(e,n,r)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}};function Zm(){console.error("THREE.CanvasRenderer has been removed")}function Jm(){console.error("THREE.JSONLoader has been removed.")}exports.GeometryUtils=Ym,mr.crossOrigin=void 0,mr.loadTexture=function(t,e,r,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var i=new Sp;i.setCrossOrigin(this.crossOrigin);var a=i.load(t,r,void 0,n);return e&&(a.mapping=e),a},mr.loadTextureCube=function(t,e,r,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var i=new Mp;i.setCrossOrigin(this.crossOrigin);var a=i.load(t,r,void 0,n);return e&&(a.mapping=e),a},mr.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},mr.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};var Qm={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")}};function Km(){console.error("THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js")}exports.SceneUtils=Qm;
},{}],"01nd":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var n={update:null,begin:null,loopBegin:null,changeBegin:null,change:null,changeComplete:null,loopComplete:null,complete:null,loop:1,direction:"normal",autoplay:!0,timelineOffset:0},e={duration:1e3,delay:0,endDelay:0,easing:"easeOutElastic(1, .5)",round:0},r=["translateX","translateY","translateZ","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","perspective"],t={CSS:{},springs:{}};function a(n,e,r){return Math.min(Math.max(n,e),r)}function u(n,e){return n.indexOf(e)>-1}function o(n,e){return n.apply(null,e)}var i={arr:function(n){return Array.isArray(n)},obj:function(n){return u(Object.prototype.toString.call(n),"Object")},pth:function(n){return i.obj(n)&&n.hasOwnProperty("totalLength")},svg:function(n){return n instanceof SVGElement},inp:function(n){return n instanceof HTMLInputElement},dom:function(n){return n.nodeType||i.svg(n)},str:function(n){return"string"==typeof n},fnc:function(n){return"function"==typeof n},und:function(n){return void 0===n},hex:function(n){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(n)},rgb:function(n){return/^rgb/.test(n)},hsl:function(n){return/^hsl/.test(n)},col:function(n){return i.hex(n)||i.rgb(n)||i.hsl(n)},key:function(r){return!n.hasOwnProperty(r)&&!e.hasOwnProperty(r)&&"targets"!==r&&"keyframes"!==r}};function c(n){var e=/\(([^)]+)\)/.exec(n);return e?e[1].split(",").map(function(n){return parseFloat(n)}):[]}function s(n,e){var r=c(n),u=a(i.und(r[0])?1:r[0],.1,100),o=a(i.und(r[1])?100:r[1],.1,100),s=a(i.und(r[2])?10:r[2],.1,100),f=a(i.und(r[3])?0:r[3],.1,100),l=Math.sqrt(o/u),d=s/(2*Math.sqrt(o*u)),p=d<1?l*Math.sqrt(1-d*d):0,v=1,h=d<1?(d*l-f)/p:-f+l;function g(n){var r=e?e*n/1e3:n;return r=d<1?Math.exp(-r*d*l)*(v*Math.cos(p*r)+h*Math.sin(p*r)):(v+h*r)*Math.exp(-r*l),0===n||1===n?n:1-r}return e?g:function(){var e=t.springs[n];if(e)return e;for(var r=0,a=0;;)if(1===g(r+=1/6)){if(++a>=16)break}else a=0;var u=r*(1/6)*1e3;return t.springs[n]=u,u}}function f(n){return void 0===n&&(n=10),function(e){return Math.round(e*n)*(1/n)}}var l=function(){var n=11,e=1/(n-1);function r(n,e){return 1-3*e+3*n}function t(n,e){return 3*e-6*n}function a(n){return 3*n}function u(n,e,u){return((r(e,u)*n+t(e,u))*n+a(e))*n}function o(n,e,u){return 3*r(e,u)*n*n+2*t(e,u)*n+a(e)}return function(r,t,a,i){if(0<=r&&r<=1&&0<=a&&a<=1){var c=new Float32Array(n);if(r!==t||a!==i)for(var s=0;s<n;++s)c[s]=u(s*e,r,a);return function(n){return r===t&&a===i?n:0===n||1===n?n:u(f(n),t,i)}}function f(t){for(var i=0,s=1,f=n-1;s!==f&&c[s]<=t;++s)i+=e;var l=i+(t-c[--s])/(c[s+1]-c[s])*e,d=o(l,r,a);return d>=.001?function(n,e,r,t){for(var a=0;a<4;++a){var i=o(e,r,t);if(0===i)return e;e-=(u(e,r,t)-n)/i}return e}(t,l,r,a):0===d?l:function(n,e,r,t,a){var o,i,c=0;do{(o=u(i=e+(r-e)/2,t,a)-n)>0?r=i:e=i}while(Math.abs(o)>1e-7&&++c<10);return i}(t,i,i+e,r,a)}}}(),d=function(){var n={linear:function(){return function(n){return n}}},e={Sine:function(){return function(n){return 1-Math.cos(n*Math.PI/2)}},Circ:function(){return function(n){return 1-Math.sqrt(1-n*n)}},Back:function(){return function(n){return n*n*(3*n-2)}},Bounce:function(){return function(n){for(var e,r=4;n<((e=Math.pow(2,--r))-1)/11;);return 1/Math.pow(4,3-r)-7.5625*Math.pow((3*e-2)/22-n,2)}},Elastic:function(n,e){void 0===n&&(n=1),void 0===e&&(e=.5);var r=a(n,1,10),t=a(e,.1,2);return function(n){return 0===n||1===n?n:-r*Math.pow(2,10*(n-1))*Math.sin((n-1-t/(2*Math.PI)*Math.asin(1/r))*(2*Math.PI)/t)}}};return["Quad","Cubic","Quart","Quint","Expo"].forEach(function(n,r){e[n]=function(){return function(n){return Math.pow(n,r+2)}}}),Object.keys(e).forEach(function(r){var t=e[r];n["easeIn"+r]=t,n["easeOut"+r]=function(n,e){return function(r){return 1-t(n,e)(1-r)}},n["easeInOut"+r]=function(n,e){return function(r){return r<.5?t(n,e)(2*r)/2:1-t(n,e)(-2*r+2)/2}}}),n}();function p(n,e){if(i.fnc(n))return n;var r=n.split("(")[0],t=d[r],a=c(n);switch(r){case"spring":return s(n,e);case"cubicBezier":return o(l,a);case"steps":return o(f,a);default:return o(t,a)}}function v(n){try{return document.querySelectorAll(n)}catch(e){return}}function h(n,e){for(var r=n.length,t=arguments.length>=2?arguments[1]:void 0,a=[],u=0;u<r;u++)if(u in n){var o=n[u];e.call(t,o,u,n)&&a.push(o)}return a}function g(n){return n.reduce(function(n,e){return n.concat(i.arr(e)?g(e):e)},[])}function m(n){return i.arr(n)?n:(i.str(n)&&(n=v(n)||n),n instanceof NodeList||n instanceof HTMLCollection?[].slice.call(n):[n])}function y(n,e){return n.some(function(n){return n===e})}function b(n){var e={};for(var r in n)e[r]=n[r];return e}function M(n,e){var r=b(n);for(var t in n)r[t]=e.hasOwnProperty(t)?e[t]:n[t];return r}function x(n,e){var r=b(n);for(var t in e)r[t]=i.und(n[t])?e[t]:n[t];return r}function w(n){var e=/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(n);return e?"rgba("+e[1]+",1)":n}function O(n){var e=n.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,function(n,e,r,t){return e+e+r+r+t+t}),r=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return"rgba("+parseInt(r[1],16)+","+parseInt(r[2],16)+","+parseInt(r[3],16)+",1)"}function k(n){var e,r,t,a=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(n)||/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(n),u=parseInt(a[1],10)/360,o=parseInt(a[2],10)/100,i=parseInt(a[3],10)/100,c=a[4]||1;function s(n,e,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?n+6*(e-n)*r:r<.5?e:r<2/3?n+(e-n)*(2/3-r)*6:n}if(0==o)e=r=t=i;else{var f=i<.5?i*(1+o):i+o-i*o,l=2*i-f;e=s(l,f,u+1/3),r=s(l,f,u),t=s(l,f,u-1/3)}return"rgba("+255*e+","+255*r+","+255*t+","+c+")"}function C(n){return i.rgb(n)?w(n):i.hex(n)?O(n):i.hsl(n)?k(n):void 0}function P(n){var e=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(n);if(e)return e[1]}function B(n){return u(n,"translate")||"perspective"===n?"px":u(n,"rotate")||u(n,"skew")?"deg":void 0}function I(n,e){return i.fnc(n)?n(e.target,e.id,e.total):n}function T(n,e){return n.getAttribute(e)}function D(n,e,r){if(y([r,"deg","rad","turn"],P(e)))return e;var a=t.CSS[e+r];if(!i.und(a))return a;var u=document.createElement(n.tagName),o=n.parentNode&&n.parentNode!==document?n.parentNode:document.body;o.appendChild(u),u.style.position="absolute",u.style.width=100+r;var c=100/u.offsetWidth;o.removeChild(u);var s=c*parseFloat(e);return t.CSS[e+r]=s,s}function E(n,e,r){if(e in n.style){var t=e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),a=n.style[e]||getComputedStyle(n).getPropertyValue(t)||"0";return r?D(n,a,r):a}}function F(n,e){return i.dom(n)&&!i.inp(n)&&(T(n,e)||i.svg(n)&&n[e])?"attribute":i.dom(n)&&y(r,e)?"transform":i.dom(n)&&"transform"!==e&&E(n,e)?"css":null!=n[e]?"object":void 0}function N(n){if(i.dom(n)){for(var e,r=n.style.transform||"",t=/(\w+)\(([^)]*)\)/g,a=new Map;e=t.exec(r);)a.set(e[1],e[2]);return a}}function A(n,e,r,t){var a=u(e,"scale")?1:0+B(e),o=N(n).get(e)||a;return r&&(r.transforms.list.set(e,o),r.transforms.last=e),t?D(n,o,t):o}function L(n,e,r,t){switch(F(n,e)){case"transform":return A(n,e,t,r);case"css":return E(n,e,r);case"attribute":return T(n,e);default:return n[e]||0}}function j(n,e){var r=/^(\*=|\+=|-=)/.exec(n);if(!r)return n;var t=P(n)||0,a=parseFloat(e),u=parseFloat(n.replace(r[0],""));switch(r[0][0]){case"+":return a+u+t;case"-":return a-u+t;case"*":return a*u+t}}function S(n,e){if(i.col(n))return C(n);if(/\s/g.test(n))return n;var r=P(n),t=r?n.substr(0,n.length-r.length):n;return e?t+e:t}function q(n,e){return Math.sqrt(Math.pow(e.x-n.x,2)+Math.pow(e.y-n.y,2))}function $(n){return 2*Math.PI*T(n,"r")}function X(n){return 2*T(n,"width")+2*T(n,"height")}function Y(n){return q({x:T(n,"x1"),y:T(n,"y1")},{x:T(n,"x2"),y:T(n,"y2")})}function Z(n){for(var e,r=n.points,t=0,a=0;a<r.numberOfItems;a++){var u=r.getItem(a);a>0&&(t+=q(e,u)),e=u}return t}function Q(n){var e=n.points;return Z(n)+q(e.getItem(e.numberOfItems-1),e.getItem(0))}function V(n){if(n.getTotalLength)return n.getTotalLength();switch(n.tagName.toLowerCase()){case"circle":return $(n);case"rect":return X(n);case"line":return Y(n);case"polyline":return Z(n);case"polygon":return Q(n)}}function z(n){var e=V(n);return n.setAttribute("stroke-dasharray",e),e}function H(n){for(var e=n.parentNode;i.svg(e)&&i.svg(e.parentNode);)e=e.parentNode;return e}function _(n,e){var r=e||{},t=r.el||H(n),a=t.getBoundingClientRect(),u=T(t,"viewBox"),o=a.width,i=a.height,c=r.viewBox||(u?u.split(" "):[0,0,o,i]);return{el:t,viewBox:c,x:c[0]/1,y:c[1]/1,w:o/c[2],h:i/c[3]}}function G(n,e){var r=i.str(n)?v(n)[0]:n,t=e||100;return function(n){return{property:n,el:r,svg:_(r),totalLength:V(r)*(t/100)}}}function R(n,e){function r(r){void 0===r&&(r=0);var t=e+r>=1?e+r:0;return n.el.getPointAtLength(t)}var t=_(n.el,n.svg),a=r(),u=r(-1),o=r(1);switch(n.property){case"x":return(a.x-t.x)*t.w;case"y":return(a.y-t.y)*t.h;case"angle":return 180*Math.atan2(o.y-u.y,o.x-u.x)/Math.PI}}function W(n,e){var r=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?/g,t=S(i.pth(n)?n.totalLength:n,e)+"";return{original:t,numbers:t.match(r)?t.match(r).map(Number):[0],strings:i.str(n)||e?t.split(r):[]}}function J(n){return h(n?g(i.arr(n)?n.map(m):m(n)):[],function(n,e,r){return r.indexOf(n)===e})}function K(n){var e=J(n);return e.map(function(n,r){return{target:n,id:r,total:e.length,transforms:{list:N(n)}}})}function U(n,e){var r=b(e);if(/^spring/.test(r.easing)&&(r.duration=s(r.easing)),i.arr(n)){var t=n.length;2===t&&!i.obj(n[0])?n={value:n}:i.fnc(e.duration)||(r.duration=e.duration/t)}var a=i.arr(n)?n:[n];return a.map(function(n,r){var t=i.obj(n)&&!i.pth(n)?n:{value:n};return i.und(t.delay)&&(t.delay=r?0:e.delay),i.und(t.endDelay)&&(t.endDelay=r===a.length-1?e.endDelay:0),t}).map(function(n){return x(n,r)})}function nn(n){for(var e=h(g(n.map(function(n){return Object.keys(n)})),function(n){return i.key(n)}).reduce(function(n,e){return n.indexOf(e)<0&&n.push(e),n},[]),r={},t=function(t){var a=e[t];r[a]=n.map(function(n){var e={};for(var r in n)i.key(r)?r==a&&(e.value=n[r]):e[r]=n[r];return e})},a=0;a<e.length;a++)t(a);return r}function en(n,e){var r=[],t=e.keyframes;for(var a in t&&(e=x(nn(t),e)),e)i.key(a)&&r.push({name:a,tweens:U(e[a],n)});return r}function rn(n,e){var r={};for(var t in n){var a=I(n[t],e);i.arr(a)&&1===(a=a.map(function(n){return I(n,e)})).length&&(a=a[0]),r[t]=a}return r.duration=parseFloat(r.duration),r.delay=parseFloat(r.delay),r}function tn(n,e){var r;return n.tweens.map(function(t){var a=rn(t,e),u=a.value,o=i.arr(u)?u[1]:u,c=P(o),s=L(e.target,n.name,c,e),f=r?r.to.original:s,l=i.arr(u)?u[0]:f,d=P(l)||P(s),v=c||d;return i.und(o)&&(o=f),a.from=W(l,v),a.to=W(j(o,l),v),a.start=r?r.end:0,a.end=a.start+a.delay+a.duration+a.endDelay,a.easing=p(a.easing,a.duration),a.isPath=i.pth(u),a.isColor=i.col(a.from.original),a.isColor&&(a.round=1),r=a,a})}var an={css:function(n,e,r){return n.style[e]=r},attribute:function(n,e,r){return n.setAttribute(e,r)},object:function(n,e,r){return n[e]=r},transform:function(n,e,r,t,a){if(t.list.set(e,r),e===t.last||a){var u="";t.list.forEach(function(n,e){u+=e+"("+n+") "}),n.style.transform=u}}};function un(n,e){K(n).forEach(function(n){for(var r in e){var t=I(e[r],n),a=n.target,u=P(t),o=L(a,r,u,n),i=j(S(t,u||P(o)),o),c=F(a,r);an[c](a,r,i,n.transforms,!0)}})}function on(n,e){var r=F(n.target,e.name);if(r){var t=tn(e,n),a=t[t.length-1];return{type:r,property:e.name,animatable:n,tweens:t,duration:a.end,delay:t[0].delay,endDelay:a.endDelay}}}function cn(n,e){return h(g(n.map(function(n){return e.map(function(e){return on(n,e)})})),function(n){return!i.und(n)})}function sn(n,e){var r=n.length,t=function(n){return n.timelineOffset?n.timelineOffset:0},a={};return a.duration=r?Math.max.apply(Math,n.map(function(n){return t(n)+n.duration})):e.duration,a.delay=r?Math.min.apply(Math,n.map(function(n){return t(n)+n.delay})):e.delay,a.endDelay=r?a.duration-Math.max.apply(Math,n.map(function(n){return t(n)+n.duration-n.endDelay})):e.endDelay,a}var fn=0;function ln(r){var t=M(n,r),a=M(e,r),u=en(a,r),o=K(r.targets),i=cn(o,u),c=sn(i,a),s=fn;return fn++,x(t,{id:s,children:[],animatables:o,animations:i,duration:c.duration,delay:c.delay,endDelay:c.endDelay})}var dn,pn=[],vn=[],hn=function(){function n(){dn=requestAnimationFrame(e)}function e(e){var r=pn.length;if(r){for(var t=0;t<r;){var a=pn[t];if(a.paused){var u=pn.indexOf(a);u>-1&&(pn.splice(u,1),r=pn.length)}else a.tick(e);t++}n()}else dn=cancelAnimationFrame(dn)}return n}();function gn(){document.hidden?(pn.forEach(function(n){return n.pause()}),vn=pn.slice(0),mn.running=pn=[]):vn.forEach(function(n){return n.play()})}function mn(n){void 0===n&&(n={});var e,r=0,t=0,u=0,o=0,i=null;function c(n){var e=window.Promise&&new Promise(function(n){return i=n});return n.finished=e,e}var s=ln(n);c(s);function f(){var n=s.direction;"alternate"!==n&&(s.direction="normal"!==n?"normal":"reverse"),s.reversed=!s.reversed,e.forEach(function(n){return n.reversed=s.reversed})}function l(n){return s.reversed?s.duration-n:n}function d(){r=0,t=l(s.currentTime)*(1/mn.speed)}function p(n,e){e&&e.seek(n-e.timelineOffset)}function v(n){for(var e=0,r=s.animations,t=r.length;e<t;){var u=r[e],o=u.animatable,i=u.tweens,c=i.length-1,f=i[c];c&&(f=h(i,function(e){return n<e.end})[0]||f);for(var l=a(n-f.start-f.delay,0,f.duration)/f.duration,d=isNaN(l)?1:f.easing(l),p=f.to.strings,v=f.round,g=[],m=f.to.numbers.length,y=void 0,b=0;b<m;b++){var M=void 0,x=f.to.numbers[b],w=f.from.numbers[b]||0;M=f.isPath?R(f.value,d*x):w+d*(x-w),v&&(f.isColor&&b>2||(M=Math.round(M*v)/v)),g.push(M)}var O=p.length;if(O){y=p[0];for(var k=0;k<O;k++){p[k];var C=p[k+1],P=g[k];isNaN(P)||(y+=C?P+C:P+" ")}}else y=g[0];an[u.type](o.target,u.property,y,o.transforms),u.currentValue=y,e++}}function g(n){s[n]&&!s.passThrough&&s[n](s)}function m(n){var d=s.duration,h=s.delay,m=d-s.endDelay,y=l(n);s.progress=a(y/d*100,0,100),s.reversePlayback=y<s.currentTime,e&&function(n){if(s.reversePlayback)for(var r=o;r--;)p(n,e[r]);else for(var t=0;t<o;t++)p(n,e[t])}(y),!s.began&&s.currentTime>0&&(s.began=!0,g("begin")),!s.loopBegan&&s.currentTime>0&&(s.loopBegan=!0,g("loopBegin")),y<=h&&0!==s.currentTime&&v(0),(y>=m&&s.currentTime!==d||!d)&&v(d),y>h&&y<m?(s.changeBegan||(s.changeBegan=!0,s.changeCompleted=!1,g("changeBegin")),g("change"),v(y)):s.changeBegan&&(s.changeCompleted=!0,s.changeBegan=!1,g("changeComplete")),s.currentTime=a(y,0,d),s.began&&g("update"),n>=d&&(t=0,s.remaining&&!0!==s.remaining&&s.remaining--,s.remaining?(r=u,g("loopComplete"),s.loopBegan=!1,"alternate"===s.direction&&f()):(s.paused=!0,s.completed||(s.completed=!0,g("loopComplete"),g("complete"),!s.passThrough&&"Promise"in window&&(i(),c(s)))))}return s.reset=function(){var n=s.direction;s.passThrough=!1,s.currentTime=0,s.progress=0,s.paused=!0,s.began=!1,s.loopBegan=!1,s.changeBegan=!1,s.completed=!1,s.changeCompleted=!1,s.reversePlayback=!1,s.reversed="reverse"===n,s.remaining=s.loop,e=s.children;for(var r=o=e.length;r--;)s.children[r].reset();(s.reversed&&!0!==s.loop||"alternate"===n&&1===s.loop)&&s.remaining++,v(s.reversed?s.duration:0)},s.set=function(n,e){return un(n,e),s},s.tick=function(n){u=n,r||(r=u),m((u+(t-r))*mn.speed)},s.seek=function(n){m(l(n))},s.pause=function(){s.paused=!0,d()},s.play=function(){s.paused&&(s.completed&&s.reset(),s.paused=!1,pn.push(s),d(),dn||hn())},s.reverse=function(){f(),d()},s.restart=function(){s.reset(),s.play()},s.reset(),s.autoplay&&s.play(),s}function yn(n,e){for(var r=e.length;r--;)y(n,e[r].animatable.target)&&e.splice(r,1)}function bn(n){for(var e=J(n),r=pn.length;r--;){var t=pn[r],a=t.animations,u=t.children;yn(e,a);for(var o=u.length;o--;){var i=u[o],c=i.animations;yn(e,c),c.length||i.children.length||u.splice(o,1)}a.length||u.length||t.pause()}}function Mn(n,e){void 0===e&&(e={});var r=e.direction||"normal",t=e.easing?p(e.easing):null,a=e.grid,u=e.axis,o=e.from||0,c="first"===o,s="center"===o,f="last"===o,l=i.arr(n),d=l?parseFloat(n[0]):parseFloat(n),v=l?parseFloat(n[1]):0,h=P(l?n[1]:n)||0,g=e.start||0+(l?d:0),m=[],y=0;return function(n,e,i){if(c&&(o=0),s&&(o=(i-1)/2),f&&(o=i-1),!m.length){for(var p=0;p<i;p++){if(a){var b=s?(a[0]-1)/2:o%a[0],M=s?(a[1]-1)/2:Math.floor(o/a[0]),x=b-p%a[0],w=M-Math.floor(p/a[0]),O=Math.sqrt(x*x+w*w);"x"===u&&(O=-x),"y"===u&&(O=-w),m.push(O)}else m.push(Math.abs(o-p));y=Math.max.apply(Math,m)}t&&(m=m.map(function(n){return t(n/y)*y})),"reverse"===r&&(m=m.map(function(n){return u?n<0?-1*n:-n:Math.abs(y-n)}))}return g+(l?(v-d)/y:d)*(Math.round(100*m[e])/100)+h}}function xn(n){void 0===n&&(n={});var r=mn(n);return r.duration=0,r.add=function(t,a){var u=pn.indexOf(r),o=r.children;function c(n){n.passThrough=!0}u>-1&&pn.splice(u,1);for(var s=0;s<o.length;s++)c(o[s]);var f=x(t,M(e,n));f.targets=f.targets||n.targets;var l=r.duration;f.autoplay=!1,f.direction=r.direction,f.timelineOffset=i.und(a)?l:j(a,l),c(r),r.seek(f.timelineOffset);var d=mn(f);c(d),o.push(d);var p=sn(o,n);return r.delay=p.delay,r.endDelay=p.endDelay,r.duration=p.duration,r.seek(0),r.reset(),r.autoplay&&r.play(),r},r}"undefined"!=typeof document&&document.addEventListener("visibilitychange",gn),mn.version="3.1.0",mn.speed=1,mn.running=pn,mn.remove=bn,mn.get=L,mn.set=un,mn.convertPx=D,mn.path=G,mn.setDashoffset=z,mn.stagger=Mn,mn.timeline=xn,mn.easing=p,mn.penner=d,mn.random=function(n,e){return Math.floor(Math.random()*(e-n+1))+n};var wn=mn;exports.default=wn;
},{}],"4Bm0":[function(require,module,exports) {
"function"==typeof Object.create?module.exports=function(t,e){e&&(t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:module.exports=function(t,e){if(e){t.super_=e;var o=function(){};o.prototype=e.prototype,t.prototype=new o,t.prototype.constructor=t}};
},{}],"T2os":[function(require,module,exports) {
"use strict";var e,t="object"==typeof Reflect?Reflect:null,n=t&&"function"==typeof t.apply?t.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};function r(e){console&&console.warn&&console.warn(e)}e=t&&"function"==typeof t.ownKeys?t.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var i=Number.isNaN||function(e){return e!=e};function o(){o.init.call(this)}module.exports=o,o.EventEmitter=o,o.prototype._events=void 0,o.prototype._eventsCount=0,o.prototype._maxListeners=void 0;var s=10;function u(e){return void 0===e._maxListeners?o.defaultMaxListeners:e._maxListeners}function f(e,t,n,i){var o,s,f;if("function"!=typeof n)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof n);if(void 0===(s=e._events)?(s=e._events=Object.create(null),e._eventsCount=0):(void 0!==s.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),s=e._events),f=s[t]),void 0===f)f=s[t]=n,++e._eventsCount;else if("function"==typeof f?f=s[t]=i?[n,f]:[f,n]:i?f.unshift(n):f.push(n),(o=u(e))>0&&f.length>o&&!f.warned){f.warned=!0;var p=new Error("Possible EventEmitter memory leak detected. "+f.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");p.name="MaxListenersExceededWarning",p.emitter=e,p.type=t,p.count=f.length,r(p)}return e}function p(){for(var e=[],t=0;t<arguments.length;t++)e.push(arguments[t]);this.fired||(this.target.removeListener(this.type,this.wrapFn),this.fired=!0,n(this.listener,this.target,e))}function v(e,t,n){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},i=p.bind(r);return i.listener=n,r.wrapFn=i,i}function h(e,t,n){var r=e._events;if(void 0===r)return[];var i=r[t];return void 0===i?[]:"function"==typeof i?n?[i.listener||i]:[i]:n?y(i):c(i,i.length)}function a(e){var t=this._events;if(void 0!==t){var n=t[e];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function c(e,t){for(var n=new Array(t),r=0;r<t;++r)n[r]=e[r];return n}function l(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}function y(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}Object.defineProperty(o,"defaultMaxListeners",{enumerable:!0,get:function(){return s},set:function(e){if("number"!=typeof e||e<0||i(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");s=e}}),o.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},o.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||i(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},o.prototype.getMaxListeners=function(){return u(this)},o.prototype.emit=function(e){for(var t=[],r=1;r<arguments.length;r++)t.push(arguments[r]);var i="error"===e,o=this._events;if(void 0!==o)i=i&&void 0===o.error;else if(!i)return!1;if(i){var s;if(t.length>0&&(s=t[0]),s instanceof Error)throw s;var u=new Error("Unhandled error."+(s?" ("+s.message+")":""));throw u.context=s,u}var f=o[e];if(void 0===f)return!1;if("function"==typeof f)n(f,this,t);else{var p=f.length,v=c(f,p);for(r=0;r<p;++r)n(v[r],this,t)}return!0},o.prototype.addListener=function(e,t){return f(this,e,t,!1)},o.prototype.on=o.prototype.addListener,o.prototype.prependListener=function(e,t){return f(this,e,t,!0)},o.prototype.once=function(e,t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t);return this.on(e,v(this,e,t)),this},o.prototype.prependOnceListener=function(e,t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t);return this.prependListener(e,v(this,e,t)),this},o.prototype.removeListener=function(e,t){var n,r,i,o,s;if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t);if(void 0===(r=this._events))return this;if(void 0===(n=r[e]))return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!=typeof n){for(i=-1,o=n.length-1;o>=0;o--)if(n[o]===t||n[o].listener===t){s=n[o].listener,i=o;break}if(i<0)return this;0===i?n.shift():l(n,i),1===n.length&&(r[e]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",e,s||t)}return this},o.prototype.off=o.prototype.removeListener,o.prototype.removeAllListeners=function(e){var t,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var i,o=Object.keys(n);for(r=0;r<o.length;++r)"removeListener"!==(i=o[r])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},o.prototype.listeners=function(e){return h(this,e,!0)},o.prototype.rawListeners=function(e){return h(this,e,!1)},o.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):a.call(e,t)},o.prototype.listenerCount=a,o.prototype.eventNames=function(){return this._eventsCount>0?e(this._events):[]};
},{}],"nAQP":[function(require,module,exports) {
var global = arguments[3];
var e=arguments[3];module.exports=e.performance&&e.performance.now?function(){return performance.now()}:Date.now||function(){return+new Date};
},{}],"pBGv":[function(require,module,exports) {

var t,e,n=module.exports={};function r(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function i(e){if(t===setTimeout)return setTimeout(e,0);if((t===r||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}function u(t){if(e===clearTimeout)return clearTimeout(t);if((e===o||!e)&&clearTimeout)return e=clearTimeout,clearTimeout(t);try{return e(t)}catch(n){try{return e.call(null,t)}catch(n){return e.call(this,t)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:r}catch(n){t=r}try{e="function"==typeof clearTimeout?clearTimeout:o}catch(n){e=o}}();var c,s=[],l=!1,a=-1;function f(){l&&c&&(l=!1,c.length?s=c.concat(s):a=-1,s.length&&h())}function h(){if(!l){var t=i(f);l=!0;for(var e=s.length;e;){for(c=s,s=[];++a<e;)c&&c[a].run();a=-1,e=s.length}c=null,l=!1,u(t)}}function m(t,e){this.fun=t,this.array=e}function p(){}n.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];s.push(new m(t,e)),1!==s.length||l||i(h)},m.prototype.run=function(){this.fun.apply(null,this.array)},n.title="browser",n.env={},n.argv=[],n.version="",n.versions={},n.on=p,n.addListener=p,n.once=p,n.off=p,n.removeListener=p,n.removeAllListeners=p,n.emit=p,n.prependListener=p,n.prependOnceListener=p,n.listeners=function(t){return[]},n.binding=function(t){throw new Error("process.binding is not supported")},n.cwd=function(){return"/"},n.chdir=function(t){throw new Error("process.chdir is not supported")},n.umask=function(){return 0};
},{}],"xNmf":[function(require,module,exports) {
var process = require("process");
var e=require("process");(function(){var n,r,t,o,u,i;"undefined"!=typeof performance&&null!==performance&&performance.now?module.exports=function(){return performance.now()}:null!=e&&e.hrtime?(module.exports=function(){return(n()-u)/1e6},r=e.hrtime,o=(n=function(){var e;return 1e9*(e=r())[0]+e[1]})(),i=1e9*e.uptime(),u=o-i):Date.now?(module.exports=function(){return Date.now()-t},t=Date.now()):(module.exports=function(){return(new Date).getTime()-t},t=(new Date).getTime())}).call(this);
},{"process":"pBGv"}],"oXMl":[function(require,module,exports) {
var global = arguments[3];
for(var e=arguments[3],n=require("performance-now"),t="undefined"==typeof window?e:window,a=["moz","webkit"],l="AnimationFrame",c=t["request"+l],o=t["cancel"+l]||t["cancelRequest"+l],r=0;!c&&r<a.length;r++)c=t[a[r]+"Request"+l],o=t[a[r]+"Cancel"+l]||t[a[r]+"CancelRequest"+l];if(!c||!o){var i=0,u=0,f=[],m=1e3/60;c=function(e){if(0===f.length){var t=n(),a=Math.max(0,m-(t-i));i=a+t,setTimeout(function(){var e=f.slice(0);f.length=0;for(var n=0;n<e.length;n++)if(!e[n].cancelled)try{e[n].callback(i)}catch(t){setTimeout(function(){throw t},0)}},Math.round(a))}return f.push({handle:++u,callback:e,cancelled:!1}),u},o=function(e){for(var n=0;n<f.length;n++)f[n].handle===e&&(f[n].cancelled=!0)}}module.exports=function(e){return c.call(t,e)},module.exports.cancel=function(){o.apply(t,arguments)},module.exports.polyfill=function(e){e||(e=t),e.requestAnimationFrame=c,e.cancelAnimationFrame=o};
},{"performance-now":"xNmf"}],"Hgz4":[function(require,module,exports) {
var t=require("inherits"),i=require("events").EventEmitter,r=require("right-now"),s=require("raf");function n(t){if(!(this instanceof n))return new n(t);this.running=!1,this.last=r(),this._frame=0,this._tick=this.tick.bind(this),t&&this.on("tick",t)}module.exports=n,t(n,i),n.prototype.start=function(){if(!this.running)return this.running=!0,this.last=r(),this._frame=s(this._tick),this},n.prototype.stop=function(){return this.running=!1,0!==this._frame&&s.cancel(this._frame),this._frame=0,this},n.prototype.tick=function(){this._frame=s(this._tick);var t=r(),i=t-this.last;this.emit("tick",i),this.last=t};
},{"inherits":"4Bm0","events":"T2os","right-now":"nAQP","raf":"oXMl"}],"xTGv":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MapControls=exports.OrbitControls=void 0;var e=require("../../../build/three.module.js"),t=function(t,o){var n,a,i,c,s;this.object=t,this.domElement=void 0!==o?o:document,this.enabled=!0,this.target=new e.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!1,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:e.MOUSE.ROTATE,MIDDLE:e.MOUSE.DOLLY,RIGHT:e.MOUSE.PAN},this.touches={ONE:e.TOUCH.ROTATE,TWO:e.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return b.phi},this.getAzimuthalAngle=function(){return b.theta},this.saveState=function(){r.target0.copy(r.target),r.position0.copy(r.object.position),r.zoom0=r.object.zoom},this.reset=function(){r.target.copy(r.target0),r.object.position.copy(r.position0),r.object.zoom=r.zoom0,r.object.updateProjectionMatrix(),r.dispatchEvent(u),r.update(),p=h.NONE},this.update=(n=new e.Vector3,a=(new e.Quaternion).setFromUnitVectors(t.up,new e.Vector3(0,1,0)),i=a.clone().inverse(),c=new e.Vector3,s=new e.Quaternion,function(){var e=r.object.position;return n.copy(e).sub(r.target),n.applyQuaternion(a),b.setFromVector3(n),r.autoRotate&&p===h.NONE&&R(2*Math.PI/60/60*r.autoRotateSpeed),r.enableDamping?(b.theta+=E.theta*r.dampingFactor,b.phi+=E.phi*r.dampingFactor):(b.theta+=E.theta,b.phi+=E.phi),b.theta=Math.max(r.minAzimuthAngle,Math.min(r.maxAzimuthAngle,b.theta)),b.phi=Math.max(r.minPolarAngle,Math.min(r.maxPolarAngle,b.phi)),b.makeSafe(),b.radius*=O,b.radius=Math.max(r.minDistance,Math.min(r.maxDistance,b.radius)),!0===r.enableDamping?r.target.addScaledVector(f,r.dampingFactor):r.target.add(f),n.setFromSpherical(b),n.applyQuaternion(i),e.copy(r.target).add(n),r.object.lookAt(r.target),!0===r.enableDamping?(E.theta*=1-r.dampingFactor,E.phi*=1-r.dampingFactor,f.multiplyScalar(1-r.dampingFactor)):(E.set(0,0,0),f.set(0,0,0)),O=1,!!(g||c.distanceToSquared(r.object.position)>d||8*(1-s.dot(r.object.quaternion))>d)&&(r.dispatchEvent(u),c.copy(r.object.position),s.copy(r.object.quaternion),g=!1,!0)}),this.dispose=function(){r.domElement.removeEventListener("contextmenu",ee,!1),r.domElement.removeEventListener("mousedown",B,!1),r.domElement.removeEventListener("wheel",W,!1),r.domElement.removeEventListener("touchstart",Q,!1),r.domElement.removeEventListener("touchend",$,!1),r.domElement.removeEventListener("touchmove",J,!1),document.removeEventListener("mousemove",G,!1),document.removeEventListener("mouseup",K,!1),window.removeEventListener("keydown",q,!1)};var r=this,u={type:"change"},l={type:"start"},m={type:"end"},h={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},p=h.NONE,d=1e-6,b=new e.Spherical,E=new e.Spherical,O=1,f=new e.Vector3,g=!1,v=new e.Vector2,T=new e.Vector2,y=new e.Vector2,P=new e.Vector2,N=new e.Vector2,A=new e.Vector2,L=new e.Vector2,w=new e.Vector2,j=new e.Vector2;function M(){return Math.pow(.95,r.zoomSpeed)}function R(e){E.theta-=e}function S(e){E.phi-=e}var k,Y=(k=new e.Vector3,function(e,t){k.setFromMatrixColumn(t,0),k.multiplyScalar(-e),f.add(k)}),C=function(){var t=new e.Vector3;return function(e,o){!0===r.screenSpacePanning?t.setFromMatrixColumn(o,1):(t.setFromMatrixColumn(o,0),t.crossVectors(r.object.up,t)),t.multiplyScalar(e),f.add(t)}}(),D=function(){var t=new e.Vector3;return function(e,o){var n=r.domElement===document?r.domElement.body:r.domElement;if(r.object.isPerspectiveCamera){var a=r.object.position;t.copy(a).sub(r.target);var i=t.length();i*=Math.tan(r.object.fov/2*Math.PI/180),Y(2*e*i/n.clientHeight,r.object.matrix),C(2*o*i/n.clientHeight,r.object.matrix)}else r.object.isOrthographicCamera?(Y(e*(r.object.right-r.object.left)/r.object.zoom/n.clientWidth,r.object.matrix),C(o*(r.object.top-r.object.bottom)/r.object.zoom/n.clientHeight,r.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),r.enablePan=!1)}}();function x(e){r.object.isPerspectiveCamera?O/=e:r.object.isOrthographicCamera?(r.object.zoom=Math.max(r.minZoom,Math.min(r.maxZoom,r.object.zoom*e)),r.object.updateProjectionMatrix(),g=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),r.enableZoom=!1)}function U(e){r.object.isPerspectiveCamera?O*=e:r.object.isOrthographicCamera?(r.object.zoom=Math.max(r.minZoom,Math.min(r.maxZoom,r.object.zoom/e)),r.object.updateProjectionMatrix(),g=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),r.enableZoom=!1)}function H(e){v.set(e.clientX,e.clientY)}function V(e){P.set(e.clientX,e.clientY)}function _(e){if(1==e.touches.length)v.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),o=.5*(e.touches[0].pageY+e.touches[1].pageY);v.set(t,o)}}function z(e){if(1==e.touches.length)P.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),o=.5*(e.touches[0].pageY+e.touches[1].pageY);P.set(t,o)}}function X(e){var t=e.touches[0].pageX-e.touches[1].pageX,o=e.touches[0].pageY-e.touches[1].pageY,n=Math.sqrt(t*t+o*o);L.set(0,n)}function Z(e){if(1==e.touches.length)T.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),o=.5*(e.touches[0].pageY+e.touches[1].pageY);T.set(t,o)}y.subVectors(T,v).multiplyScalar(r.rotateSpeed);var n=r.domElement===document?r.domElement.body:r.domElement;R(2*Math.PI*y.x/n.clientHeight),S(2*Math.PI*y.y/n.clientHeight),v.copy(T)}function F(e){if(1==e.touches.length)N.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),o=.5*(e.touches[0].pageY+e.touches[1].pageY);N.set(t,o)}A.subVectors(N,P).multiplyScalar(r.panSpeed),D(A.x,A.y),P.copy(N)}function I(e){var t=e.touches[0].pageX-e.touches[1].pageX,o=e.touches[0].pageY-e.touches[1].pageY,n=Math.sqrt(t*t+o*o);w.set(0,n),j.set(0,Math.pow(w.y/L.y,r.zoomSpeed)),x(j.y),L.copy(w)}function B(t){if(!1!==r.enabled){switch(t.preventDefault(),r.domElement.focus?r.domElement.focus():window.focus(),t.button){case 0:switch(r.mouseButtons.LEFT){case e.MOUSE.ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===r.enablePan)return;V(t),p=h.PAN}else{if(!1===r.enableRotate)return;H(t),p=h.ROTATE}break;case e.MOUSE.PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===r.enableRotate)return;H(t),p=h.ROTATE}else{if(!1===r.enablePan)return;V(t),p=h.PAN}break;default:p=h.NONE}break;case 1:switch(r.mouseButtons.MIDDLE){case e.MOUSE.DOLLY:if(!1===r.enableZoom)return;!function(e){L.set(e.clientX,e.clientY)}(t),p=h.DOLLY;break;default:p=h.NONE}break;case 2:switch(r.mouseButtons.RIGHT){case e.MOUSE.ROTATE:if(!1===r.enableRotate)return;H(t),p=h.ROTATE;break;case e.MOUSE.PAN:if(!1===r.enablePan)return;V(t),p=h.PAN;break;default:p=h.NONE}}p!==h.NONE&&(document.addEventListener("mousemove",G,!1),document.addEventListener("mouseup",K,!1),r.dispatchEvent(l))}}function G(e){if(!1!==r.enabled)switch(e.preventDefault(),p){case h.ROTATE:if(!1===r.enableRotate)return;!function(e){T.set(e.clientX,e.clientY),y.subVectors(T,v).multiplyScalar(r.rotateSpeed);var t=r.domElement===document?r.domElement.body:r.domElement;R(2*Math.PI*y.x/t.clientHeight),S(2*Math.PI*y.y/t.clientHeight),v.copy(T),r.update()}(e);break;case h.DOLLY:if(!1===r.enableZoom)return;!function(e){w.set(e.clientX,e.clientY),j.subVectors(w,L),j.y>0?x(M()):j.y<0&&U(M()),L.copy(w),r.update()}(e);break;case h.PAN:if(!1===r.enablePan)return;!function(e){N.set(e.clientX,e.clientY),A.subVectors(N,P).multiplyScalar(r.panSpeed),D(A.x,A.y),P.copy(N),r.update()}(e)}}function K(e){!1!==r.enabled&&(document.removeEventListener("mousemove",G,!1),document.removeEventListener("mouseup",K,!1),r.dispatchEvent(m),p=h.NONE)}function W(e){!1===r.enabled||!1===r.enableZoom||p!==h.NONE&&p!==h.ROTATE||(e.preventDefault(),e.stopPropagation(),r.dispatchEvent(l),function(e){e.deltaY<0?U(M()):e.deltaY>0&&x(M()),r.update()}(e),r.dispatchEvent(m))}function q(e){!1!==r.enabled&&!1!==r.enableKeys&&!1!==r.enablePan&&function(e){var t=!1;switch(e.keyCode){case r.keys.UP:D(0,r.keyPanSpeed),t=!0;break;case r.keys.BOTTOM:D(0,-r.keyPanSpeed),t=!0;break;case r.keys.LEFT:D(r.keyPanSpeed,0),t=!0;break;case r.keys.RIGHT:D(-r.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),r.update())}(e)}function Q(t){if(!1!==r.enabled){switch(t.preventDefault(),t.touches.length){case 1:switch(r.touches.ONE){case e.TOUCH.ROTATE:if(!1===r.enableRotate)return;_(t),p=h.TOUCH_ROTATE;break;case e.TOUCH.PAN:if(!1===r.enablePan)return;z(t),p=h.TOUCH_PAN;break;default:p=h.NONE}break;case 2:switch(r.touches.TWO){case e.TOUCH.DOLLY_PAN:if(!1===r.enableZoom&&!1===r.enablePan)return;!function(e){r.enableZoom&&X(e),r.enablePan&&z(e)}(t),p=h.TOUCH_DOLLY_PAN;break;case e.TOUCH.DOLLY_ROTATE:if(!1===r.enableZoom&&!1===r.enableRotate)return;!function(e){r.enableZoom&&X(e),r.enableRotate&&_(e)}(t),p=h.TOUCH_DOLLY_ROTATE;break;default:p=h.NONE}break;default:p=h.NONE}p!==h.NONE&&r.dispatchEvent(l)}}function J(e){if(!1!==r.enabled)switch(e.preventDefault(),e.stopPropagation(),p){case h.TOUCH_ROTATE:if(!1===r.enableRotate)return;Z(e),r.update();break;case h.TOUCH_PAN:if(!1===r.enablePan)return;F(e),r.update();break;case h.TOUCH_DOLLY_PAN:if(!1===r.enableZoom&&!1===r.enablePan)return;!function(e){r.enableZoom&&I(e),r.enablePan&&F(e)}(e),r.update();break;case h.TOUCH_DOLLY_ROTATE:if(!1===r.enableZoom&&!1===r.enableRotate)return;!function(e){r.enableZoom&&I(e),r.enableRotate&&Z(e)}(e),r.update();break;default:p=h.NONE}}function $(e){!1!==r.enabled&&(r.dispatchEvent(m),p=h.NONE)}function ee(e){!1!==r.enabled&&e.preventDefault()}r.domElement.addEventListener("contextmenu",ee,!1),r.domElement.addEventListener("mousedown",B,!1),r.domElement.addEventListener("wheel",W,!1),r.domElement.addEventListener("touchstart",Q,!1),r.domElement.addEventListener("touchend",$,!1),r.domElement.addEventListener("touchmove",J,!1),window.addEventListener("keydown",q,!1),this.update()};exports.OrbitControls=t,t.prototype=Object.create(e.EventDispatcher.prototype),t.prototype.constructor=t;var o=function(o,n){t.call(this,o,n),this.mouseButtons.LEFT=e.MOUSE.PAN,this.mouseButtons.RIGHT=e.MOUSE.ROTATE,this.touches.ONE=e.TOUCH.PAN,this.touches.TWO=e.TOUCH.DOLLY_ROTATE};exports.MapControls=o,o.prototype=Object.create(e.EventDispatcher.prototype),o.prototype.constructor=o;
},{"../../../build/three.module.js":"dKqR"}],"TgBc":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CopyShader=void 0;var e={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")};exports.CopyShader=e;
},{}],"M7Wb":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Pass=t;var e=require("../../../build/three.module.js");function t(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}Object.assign(t.prototype,{setSize:function(){},render:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),t.FullScreenQuad=function(){var t=new e.OrthographicCamera(-1,1,1,-1,0,1),r=new e.PlaneBufferGeometry(2,2),n=function(t){this._mesh=new e.Mesh(r,t)};return Object.defineProperty(n.prototype,"material",{get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}),Object.assign(n.prototype,{render:function(e){e.render(this._mesh,t)}}),n}();
},{"../../../build/three.module.js":"dKqR"}],"cYXC":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ShaderPass=void 0;var e=require("../../../build/three.module.js"),t=require("../postprocessing/Pass.js"),r=function(r,s){t.Pass.call(this),this.textureID=void 0!==s?s:"tDiffuse",r instanceof e.ShaderMaterial?(this.uniforms=r.uniforms,this.material=r):r&&(this.uniforms=e.UniformsUtils.clone(r.uniforms),this.material=new e.ShaderMaterial({defines:Object.assign({},r.defines),uniforms:this.uniforms,vertexShader:r.vertexShader,fragmentShader:r.fragmentShader})),this.fsQuad=new t.Pass.FullScreenQuad(this.material)};exports.ShaderPass=r,r.prototype=Object.assign(Object.create(t.Pass.prototype),{constructor:r,render:function(e,t,r){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=r.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}});
},{"../../../build/three.module.js":"dKqR","../postprocessing/Pass.js":"M7Wb"}],"q36Z":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ClearMaskPass=exports.MaskPass=void 0;var e=require("../postprocessing/Pass.js"),s=function(s,t){e.Pass.call(this),this.scene=s,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1};exports.MaskPass=s,s.prototype=Object.assign(Object.create(e.Pass.prototype),{constructor:s,render:function(e,s,t){var r,c,a=e.getContext(),o=e.state;o.buffers.color.setMask(!1),o.buffers.depth.setMask(!1),o.buffers.color.setLocked(!0),o.buffers.depth.setLocked(!0),this.inverse?(r=0,c=1):(r=1,c=0),o.buffers.stencil.setTest(!0),o.buffers.stencil.setOp(a.REPLACE,a.REPLACE,a.REPLACE),o.buffers.stencil.setFunc(a.ALWAYS,r,4294967295),o.buffers.stencil.setClear(c),o.buffers.stencil.setLocked(!0),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(s),this.clear&&e.clear(),e.render(this.scene,this.camera),o.buffers.color.setLocked(!1),o.buffers.depth.setLocked(!1),o.buffers.stencil.setLocked(!1),o.buffers.stencil.setFunc(a.EQUAL,1,4294967295),o.buffers.stencil.setOp(a.KEEP,a.KEEP,a.KEEP),o.buffers.stencil.setLocked(!0)}});var t=function(){e.Pass.call(this),this.needsSwap=!1};exports.ClearMaskPass=t,t.prototype=Object.create(e.Pass.prototype),Object.assign(t.prototype,{render:function(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}});
},{"../postprocessing/Pass.js":"M7Wb"}],"Dhc5":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Pass=exports.EffectComposer=void 0;var e=require("../../../build/three.module.js"),t=require("../shaders/CopyShader.js"),s=require("../postprocessing/ShaderPass.js"),i=require("../postprocessing/MaskPass.js"),r=function(i,r){if(this.renderer=i,void 0===r){var h={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBAFormat,stencilBuffer:!1},n=i.getSize(new e.Vector2);this._pixelRatio=i.getPixelRatio(),this._width=n.width,this._height=n.height,(r=new e.WebGLRenderTarget(this._width*this._pixelRatio,this._height*this._pixelRatio,h)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=r.width,this._height=r.height;this.renderTarget1=r,this.renderTarget2=r.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===t.CopyShader&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===s.ShaderPass&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new s.ShaderPass(t.CopyShader),this.clock=new e.Clock};exports.EffectComposer=r,Object.assign(r.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)},insertPass:function(e,t){this.passes.splice(t,0,e)},isLastEnabledPass:function(e){for(var t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0},render:function(e){void 0===e&&(e=this.clock.getDelta());var t,s,r=this.renderer.getRenderTarget(),h=!1,n=this.passes.length;for(s=0;s<n;s++)if(!1!==(t=this.passes[s]).enabled){if(t.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(s),t.render(this.renderer,this.writeBuffer,this.readBuffer,e,h),t.needsSwap){if(h){var a=this.renderer.getContext(),o=this.renderer.state.buffers.stencil;o.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),o.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==i.MaskPass&&(t instanceof i.MaskPass?h=!0:t instanceof i.ClearMaskPass&&(h=!1))}this.renderer.setRenderTarget(r)},reset:function(t){if(void 0===t){var s=this.renderer.getSize(new e.Vector2);this._pixelRatio=this.renderer.getPixelRatio(),this._width=s.width,this._height=s.height,(t=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this._width=e,this._height=t;var s=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(s,i),this.renderTarget2.setSize(s,i);for(var r=0;r<this.passes.length;r++)this.passes[r].setSize(s,i)},setPixelRatio:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}});var h=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1};exports.Pass=h,Object.assign(h.prototype,{setSize:function(){},render:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),h.FullScreenQuad=function(){var t=new e.OrthographicCamera(-1,1,1,-1,0,1),s=new e.PlaneBufferGeometry(2,2),i=function(t){this._mesh=new e.Mesh(s,t)};return Object.defineProperty(i.prototype,"material",{get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}),Object.assign(i.prototype,{render:function(e){e.render(this._mesh,t)}}),i}();
},{"../../../build/three.module.js":"dKqR","../shaders/CopyShader.js":"TgBc","../postprocessing/ShaderPass.js":"cYXC","../postprocessing/MaskPass.js":"q36Z"}],"2YcO":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderPass=void 0;var e=require("../postprocessing/Pass.js"),r=function(r,t,a,s,l){e.Pass.call(this),this.scene=r,this.camera=t,this.overrideMaterial=a,this.clearColor=s,this.clearAlpha=void 0!==l?l:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1};exports.RenderPass=r,r.prototype=Object.assign(Object.create(e.Pass.prototype),{constructor:r,render:function(e,r,t){var a,s,l=e.autoClear;e.autoClear=!1,this.scene.overrideMaterial=this.overrideMaterial,this.clearColor&&(a=e.getClearColor().getHex(),s=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(a,s),this.scene.overrideMaterial=null,e.autoClear=l}});
},{"../postprocessing/Pass.js":"M7Wb"}],"j6FR":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FilmShader=void 0;var e={uniforms:{tDiffuse:{value:null},time:{value:0},nIntensity:{value:.5},sIntensity:{value:.05},sCount:{value:4096},grayscale:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#include <common>","uniform float time;","uniform bool grayscale;","uniform float nIntensity;","uniform float sIntensity;","uniform float sCount;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 cTextureScreen = texture2D( tDiffuse, vUv );","float dx = rand( vUv + time );","vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx, 0.0, 1.0 );","vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );","cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;","cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );","if( grayscale ) {","cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );","}","gl_FragColor =  vec4( cResult, cTextureScreen.a );","}"].join("\n")};exports.FilmShader=e;
},{}],"KhJj":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FilmPass=void 0;var e=require("../../../build/three.module.js"),s=require("../postprocessing/Pass.js"),r=require("../shaders/FilmShader.js"),i=function(i,t,a,n){s.Pass.call(this),void 0===r.FilmShader&&console.error("FilmPass relies on FilmShader");var o=r.FilmShader;this.uniforms=e.UniformsUtils.clone(o.uniforms),this.material=new e.ShaderMaterial({uniforms:this.uniforms,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader}),void 0!==n&&(this.uniforms.grayscale.value=n),void 0!==i&&(this.uniforms.nIntensity.value=i),void 0!==t&&(this.uniforms.sIntensity.value=t),void 0!==a&&(this.uniforms.sCount.value=a),this.fsQuad=new s.Pass.FullScreenQuad(this.material)};exports.FilmPass=i,i.prototype=Object.assign(Object.create(s.Pass.prototype),{constructor:i,render:function(e,s,r,i){this.uniforms.tDiffuse.value=r.texture,this.uniforms.time.value+=i,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(s),this.clear&&e.clear(),this.fsQuad.render(e))}});
},{"../../../build/three.module.js":"dKqR","../postprocessing/Pass.js":"M7Wb","../shaders/FilmShader.js":"j6FR"}],"//s3":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConvolutionShader=void 0;var e=require("../../../build/three.module.js"),r={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{value:null},uImageIncrement:{value:new e.Vector2(.001953125,0)},cKernel:{value:[]}},vertexShader:["uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cKernel[ KERNEL_SIZE_INT ];","uniform sampler2D tDiffuse;","uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vec2 imageCoord = vUv;","vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );","for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {","sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];","imageCoord += uImageIncrement;","}","gl_FragColor = sum;","}"].join("\n"),buildKernel:function(e){function r(e,r){return Math.exp(-e*e/(2*r*r))}var n,i,o,t,u=2*Math.ceil(3*e)+1;for(u>25&&(u=25),t=.5*(u-1),i=new Array(u),o=0,n=0;n<u;++n)i[n]=r(n-t,e),o+=i[n];for(n=0;n<u;++n)i[n]/=o;return i}};exports.ConvolutionShader=r;
},{"../../../build/three.module.js":"dKqR"}],"/n9O":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BloomPass=void 0;var e=require("../../../build/three.module.js"),r=require("../postprocessing/Pass.js"),t=require("../shaders/CopyShader.js"),o=require("../shaders/ConvolutionShader.js"),s=function(i,n,a,l){r.Pass.call(this),i=void 0!==i?i:1,n=void 0!==n?n:25,a=void 0!==a?a:4,l=void 0!==l?l:256;var u={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBAFormat};this.renderTargetX=new e.WebGLRenderTarget(l,l,u),this.renderTargetX.texture.name="BloomPass.x",this.renderTargetY=new e.WebGLRenderTarget(l,l,u),this.renderTargetY.texture.name="BloomPass.y",void 0===t.CopyShader&&console.error("BloomPass relies on CopyShader");var d=t.CopyShader;this.copyUniforms=e.UniformsUtils.clone(d.uniforms),this.copyUniforms.opacity.value=i,this.materialCopy=new e.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,blending:e.AdditiveBlending,transparent:!0}),void 0===o.ConvolutionShader&&console.error("BloomPass relies on ConvolutionShader");var h=o.ConvolutionShader;this.convolutionUniforms=e.UniformsUtils.clone(h.uniforms),this.convolutionUniforms.uImageIncrement.value=s.blurX,this.convolutionUniforms.cKernel.value=o.ConvolutionShader.buildKernel(a),this.materialConvolution=new e.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,defines:{KERNEL_SIZE_FLOAT:n.toFixed(1),KERNEL_SIZE_INT:n.toFixed(0)}}),this.needsSwap=!1,this.fsQuad=new r.Pass.FullScreenQuad(null)};exports.BloomPass=s,s.prototype=Object.assign(Object.create(r.Pass.prototype),{constructor:s,render:function(e,r,t,o,i){i&&e.state.buffers.stencil.setTest(!1),this.fsQuad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=t.texture,this.convolutionUniforms.uImageIncrement.value=s.blurX,e.setRenderTarget(this.renderTargetX),e.clear(),this.fsQuad.render(e),this.convolutionUniforms.tDiffuse.value=this.renderTargetX.texture,this.convolutionUniforms.uImageIncrement.value=s.blurY,e.setRenderTarget(this.renderTargetY),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY.texture,i&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(t),this.clear&&e.clear(),this.fsQuad.render(e)}}),s.blurX=new e.Vector2(.001953125,0),s.blurY=new e.Vector2(0,.001953125);
},{"../../../build/three.module.js":"dKqR","../postprocessing/Pass.js":"M7Wb","../shaders/CopyShader.js":"TgBc","../shaders/ConvolutionShader.js":"//s3"}],"US9H":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DigitalGlitch=void 0;var e={uniforms:{tDiffuse:{value:null},tDisp:{value:null},byp:{value:0},amount:{value:.08},angle:{value:.02},seed:{value:.02},seed_x:{value:.02},seed_y:{value:.02},distortion_x:{value:.5},distortion_y:{value:.6},col_s:{value:.05}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform int byp;","uniform sampler2D tDiffuse;","uniform sampler2D tDisp;","uniform float amount;","uniform float angle;","uniform float seed;","uniform float seed_x;","uniform float seed_y;","uniform float distortion_x;","uniform float distortion_y;","uniform float col_s;","varying vec2 vUv;","float rand(vec2 co){","return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);","}","void main() {","if(byp<1) {","vec2 p = vUv;","float xs = floor(gl_FragCoord.x / 0.5);","float ys = floor(gl_FragCoord.y / 0.5);","vec4 normal = texture2D (tDisp, p*seed*seed);","if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {","if(seed_x>0.){","p.y = 1. - (p.y + distortion_y);","}","else {","p.y = distortion_y;","}","}","if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {","if(seed_y>0.){","p.x=distortion_x;","}","else {","p.x = 1. - (p.x + distortion_x);","}","}","p.x+=normal.x*seed_x*(seed/5.);","p.y+=normal.y*seed_y*(seed/5.);","vec2 offset = amount * vec2( cos(angle), sin(angle));","vec4 cr = texture2D(tDiffuse, p + offset);","vec4 cga = texture2D(tDiffuse, p);","vec4 cb = texture2D(tDiffuse, p - offset);","gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);","gl_FragColor = gl_FragColor+ snow;","}","else {","gl_FragColor=texture2D (tDiffuse, vUv);","}","}"].join("\n")};exports.DigitalGlitch=e;
},{}],"fb5B":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GlitchPass=void 0;var t=require("../../../build/three.module.js"),e=require("../postprocessing/Pass.js"),a=require("../shaders/DigitalGlitch.js"),r=function(r){e.Pass.call(this),void 0===a.DigitalGlitch&&console.error("GlitchPass relies on DigitalGlitch");var i=a.DigitalGlitch;this.uniforms=t.UniformsUtils.clone(i.uniforms),null==r&&(r=64),this.uniforms.tDisp.value=this.generateHeightmap(r),this.material=new t.ShaderMaterial({uniforms:this.uniforms,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader}),this.fsQuad=new e.Pass.FullScreenQuad(this.material),this.goWild=!1,this.curF=0,this.generateTrigger()};exports.GlitchPass=r,r.prototype=Object.assign(Object.create(e.Pass.prototype),{constructor:r,render:function(e,a,r){this.uniforms.tDiffuse.value=r.texture,this.uniforms.seed.value=Math.random(),this.uniforms.byp.value=0,this.curF%this.randX==0||1==this.goWild?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=t.Math.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=t.Math.randFloat(-1,1),this.uniforms.seed_y.value=t.Math.randFloat(-1,1),this.uniforms.distortion_x.value=t.Math.randFloat(0,1),this.uniforms.distortion_y.value=t.Math.randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5?(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=t.Math.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=t.Math.randFloat(0,1),this.uniforms.distortion_y.value=t.Math.randFloat(0,1),this.uniforms.seed_x.value=t.Math.randFloat(-.3,.3),this.uniforms.seed_y.value=t.Math.randFloat(-.3,.3)):0==this.goWild&&(this.uniforms.byp.value=1),this.curF++,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(a),this.clear&&e.clear(),this.fsQuad.render(e))},generateTrigger:function(){this.randX=t.Math.randInt(120,240)},generateHeightmap:function(e){for(var a=new Float32Array(e*e*3),r=e*e,i=0;i<r;i++){var s=t.Math.randFloat(0,1);a[3*i+0]=s,a[3*i+1]=s,a[3*i+2]=s}var n=new t.DataTexture(a,e,e,t.RGBFormat,t.FloatType);return n.needsUpdate=!0,n}});
},{"../../../build/three.module.js":"dKqR","../postprocessing/Pass.js":"M7Wb","../shaders/DigitalGlitch.js":"US9H"}],"1b6N":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var e=h(require("raf-loop")),t=require("three"),r=require("three/examples/jsm/controls/OrbitControls"),i=require("three/examples/jsm/postprocessing/EffectComposer"),o=require("three/examples/jsm/postprocessing/RenderPass"),s=require("three/examples/jsm/postprocessing/FilmPass"),n=require("three/examples/jsm/postprocessing/BloomPass"),a=require("three/examples/jsm/postprocessing/GlitchPass");function h(e){return e&&e.__esModule?e:{default:e}}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,i)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(r,!0).forEach(function(t){u(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(r).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}function u(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function d(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function p(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function m(e,t,r){return t&&p(e.prototype,t),r&&p(e,r),e}var f={debug:!1,width:480,height:480,pixelRatio:window.devicePixelRatio,clickToggleDebug:!0,postProcessing:!1},v={alpha:!1},b=function(){function a(r){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};d(this,a),this.options=l({},f,{},i),this.rendererOptions=l({},v,{},o),this.mountEl=r,this.scene=new t.Scene,this.renderer=new t.WebGLRenderer(this.rendererOptions),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=t.PCFSoftShadowMap,this.updateDimensions(this.options.width,this.options.height,this.options.pixelRatio),this.mountEl.appendChild(this.renderer.domElement),this.frame=0,this.loop=(0,e.default)(this.update.bind(this)),this._renderer=function(){}}return m(a,[{key:"setCamera",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=i.autoRotate,s=void 0!==o&&o,n=i.enableZoom,a=void 0!==n&&n;this.camera=e,t?(this.orbit=new r.OrbitControls(this.camera,this.renderer.domElement),this.orbit.autoRotate=s,this.orbit.enableZoom=a):this.orbit=null,this.options.postProcessing&&this.addPostProcessing()}},{key:"addPostProcessing",value:function(){this.composer=new i.EffectComposer(this.renderer),this.renderScene=new o.RenderPass(this.scene,this.camera),this.composer.addPass(this.renderScene),this.bloomPass=new n.BloomPass(3,50,1,1e3),this.composer.addPass(this.bloomPass),this.filmPass=new s.FilmPass(5,1,1e3,!1),this.composer.addPass(this.filmPass)}},{key:"_addEventListeners",value:function(){var e=this;this.mountEl.addEventListener("click",function(){e.options.debug=!e.options.debug,document.body.classList.toggle("debug",e.options.debug)},!1)}},{key:"updateDimensions",value:function(e,t,r){this.mountEl.style.width="".concat(e,"px"),this.mountEl.style.height="".concat(t,"px"),this.renderer.setSize(e,t),this.renderer.setPixelRatio(r)}},{key:"onRender",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){};this._renderer=e}},{key:"start",value:function(){this.loop.start()}},{key:"update",value:function(e){if(!this.camera)return console.log("There is no camera"),!1;this._renderer({debug:this.options.debug,frame:this.frame,deltaTime:e,width:this.options.width,height:this.options.height}),this.orbit&&this.orbit.update(),this.options.postProcessing?this.composer.render():this.renderer.render(this.scene,this.camera),this.frame++}},{key:"stop",value:function(){this.loop.stop()}}],[{key:"ORTHOPGRAPHIC_CAMERA",value:function(e,r){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=i.near,s=void 0===o?1:o,n=i.far,a=void 0===n?1e3:n,h=new t.OrthographicCamera(e/-2,e/2,r/2,r/-2,s,a);return h.position.z=500,h.zoom=50,h.updateProjectionMatrix(),h}},{key:"PERSPECTIVE_CAMERA",value:function(e,r){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=i.fov,s=void 0===o?45:o,n=i.near,a=void 0===n?1:n,h=i.far,c=void 0===h?1e3:h,l=new t.PerspectiveCamera(s,e/r,a,c);return l.position.z=15,l}}]),a}(),g=b;exports.default=g;
},{"raf-loop":"Hgz4","three":"dKqR","three/examples/jsm/controls/OrbitControls":"xTGv","three/examples/jsm/postprocessing/EffectComposer":"Dhc5","three/examples/jsm/postprocessing/RenderPass":"2YcO","three/examples/jsm/postprocessing/FilmPass":"KhJj","three/examples/jsm/postprocessing/BloomPass":"/n9O","three/examples/jsm/postprocessing/GlitchPass":"fb5B"}],"5o3U":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getPointOnArc=exports.arcPath=exports.circlePath=exports.rectPath=exports.getPointOnLinePath=exports.linePath=exports.cubicBezierPath=exports.getPointOnCubicBezier=exports.quadraticBezierPath=exports.getPointOnQuadraticBezier=void 0;var t=function(t,r,e,o){var n=1-t;return{x:n*n*r.x+2*n*t*e.x+t*t*o.x,y:n*n*r.y+2*n*t*e.y+t*t*o.y}};exports.getPointOnQuadraticBezier=t;var r=function(r,e,o){for(var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:50,a=1/n,i=[],x=0;x<n;x++){var h=a*x;i.push(t(h,r,e,o))}return i};exports.quadraticBezierPath=r;var e=function(t,r,e,o,n){return{x:Math.pow(1-t,3)*r.x+3*Math.pow(1-t,2)*t*e.x+3*(1-t)*Math.pow(t,2)*o.x+Math.pow(t,3)*n.x,y:Math.pow(1-t,3)*r.y+3*Math.pow(1-t,2)*t*e.y+3*(1-t)*Math.pow(t,2)*o.y+Math.pow(t,3)*n.y}};exports.getPointOnCubicBezier=e;var o=function(t,r,o,n){for(var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:50,i=1/a,x=[],h=0;h<a;h++){var u=i*h;x.push(e(u,t,r,o,n))}return x};exports.cubicBezierPath=o;var n=function(t,r){for(var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:50,o=1/e,n=[],i=0;i<e;i++){var x=o*i;n.push(a(x,t,r))}return n};exports.linePath=n;var a=function(t,r,e){return{x:r.x+(e.x-r.x)*t,y:r.y+(e.y-r.y)*t}};exports.getPointOnLinePath=a;var i=function(t,r,e,o){return[{x:t,y:r},{x:t+e,y:r},{x:t+e,y:r+o},{x:t,y:r+o}]};exports.rectPath=i;var x=function(t,r,e){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:50,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;return h(t,r,e,2*Math.PI,o,n)};exports.circlePath=x;var h=function(t,r,e,o){for(var n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:50,a=o/n,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,x=[],h=0;h<n;h++)x.push(u(t,r,i+a*h,e));return x};exports.arcPath=h;var u=function(t,r,e,o){return{x:t+Math.cos(e)*o,y:r+Math.sin(e)*o}};exports.getPointOnArc=u;
},{}],"g8gN":[function(require,module,exports) {
module.exports={glyphs:{0:{ha:853,x_min:75,x_max:778,o:"m 778 407 q 751 238 778 315 q 678 105 725 161 q 566 17 631 49 q 426 -14 501 -14 q 285 17 350 -14 q 174 105 221 49 q 101 238 128 161 q 75 407 75 315 q 101 576 75 499 q 174 709 128 653 q 285 797 221 765 q 426 829 350 829 q 566 797 501 829 q 678 709 631 765 q 751 576 725 653 q 778 407 778 499 m 654 407 q 638 532 654 475 q 590 630 621 589 q 518 693 560 671 q 426 715 476 715 q 333 693 375 715 q 260 630 290 671 q 214 532 231 589 q 197 407 197 475 q 214 281 197 338 q 260 185 231 225 q 333 122 290 144 q 426 100 375 100 q 518 122 476 100 q 590 185 560 144 q 638 281 621 225 q 654 407 654 338 z "},1:{ha:625,x_min:64,x_max:592,o:"m 592 111 l 592 0 l 93 0 l 93 111 l 290 111 l 290 653 q 251 617 278 636 q 192 583 225 599 q 125 556 160 567 q 64 544 90 544 l 64 661 q 132 678 94 661 q 203 719 169 696 q 262 763 238 742 q 290 793 286 785 l 415 793 l 415 111 l 592 111 z "},2:{ha:743,x_min:60,x_max:678,o:"m 60 0 q 69 104 60 56 q 103 197 78 153 q 172 282 128 242 q 286 363 215 322 q 371 406 328 385 q 449 452 414 428 q 508 504 485 476 q 531 569 531 532 q 519 617 531 593 q 488 658 508 640 q 435 688 467 676 q 364 699 404 699 q 288 687 322 699 q 228 658 254 675 q 182 621 201 640 q 150 586 163 601 l 71 675 q 108 709 82 688 q 175 753 135 731 q 268 791 215 775 q 386 807 321 807 q 501 790 450 807 q 588 742 553 772 q 643 670 624 711 q 663 583 663 629 q 639 489 663 529 q 581 418 615 449 q 508 366 547 388 q 439 329 469 344 q 370 292 408 314 q 297 244 332 271 q 237 183 263 217 q 204 111 211 150 l 678 111 l 678 0 l 60 0 z "},3:{ha:750,x_min:49,x_max:690,o:"m 497 328 q 638 246 586 313 q 690 81 690 179 q 667 -36 690 17 q 599 -126 643 -89 q 494 -184 556 -164 q 358 -204 433 -204 q 173 -165 253 -204 q 49 -53 93 -125 l 131 29 q 217 -60 163 -28 q 358 -93 271 -93 q 509 -50 454 -93 q 564 81 564 -7 q 505 220 564 168 q 333 272 446 272 l 297 272 l 297 375 l 336 375 q 490 423 436 375 q 543 544 543 471 q 492 654 543 618 q 363 690 440 690 q 228 658 286 690 q 139 567 171 625 l 64 644 q 113 708 82 679 q 185 757 144 736 q 274 789 226 778 q 375 800 322 800 q 495 782 440 800 q 590 732 550 764 q 651 654 629 700 q 672 553 672 608 q 660 474 672 511 q 626 406 649 436 q 570 355 603 375 q 497 328 538 335 z "},4:{ha:775,x_min:33,x_max:724,o:"m 479 -176 l 479 58 l 33 58 l 33 167 l 518 793 l 601 793 l 601 169 l 724 169 l 724 58 l 601 58 l 601 -176 l 479 -176 m 160 169 l 492 169 l 492 604 l 160 169 z "},5:{ha:761,x_min:46,x_max:713,o:"m 390 436 q 517 413 458 436 q 619 349 576 390 q 688 249 663 307 q 713 121 713 190 q 685 -13 713 47 q 611 -117 658 -74 q 500 -183 564 -160 q 364 -207 436 -207 q 174 -157 258 -207 q 46 -24 89 -107 l 122 43 q 226 -60 161 -21 q 365 -99 290 -99 q 453 -83 413 -99 q 524 -38 494 -67 q 571 31 554 -10 q 588 119 588 71 q 571 204 588 165 q 526 271 554 243 q 458 314 497 299 q 375 329 419 329 q 263 303 315 329 q 178 228 211 276 l 68 228 q 75 263 69 235 q 89 333 81 292 q 107 424 97 374 q 126 525 117 474 q 179 793 150 644 l 658 793 l 658 681 l 269 681 l 210 367 q 286 417 240 399 q 390 436 332 436 z "},6:{ha:842,x_min:71,x_max:781,o:"m 781 326 q 753 194 781 256 q 678 85 726 132 q 567 13 631 39 q 428 -14 503 -14 q 283 15 349 -14 q 169 99 217 44 q 97 233 122 154 q 71 411 71 311 q 97 666 71 557 q 172 848 124 775 q 289 957 221 921 q 440 993 357 993 q 615 947 536 993 q 738 818 693 901 l 663 744 q 572 848 632 810 q 439 886 513 886 q 336 860 382 886 q 257 785 290 835 q 206 663 224 735 q 186 500 188 592 q 285 615 217 572 q 440 658 353 658 q 574 633 511 658 q 682 562 636 607 q 754 456 728 517 q 781 326 781 396 m 429 92 q 519 110 476 92 q 594 161 563 129 q 645 235 626 193 q 664 326 664 278 q 645 417 664 374 q 594 491 626 460 q 519 541 563 522 q 429 560 476 560 q 338 541 381 560 q 264 491 296 522 q 213 417 232 460 q 194 326 194 374 q 213 235 194 278 q 264 161 232 193 q 338 110 296 129 q 429 92 381 92 z "},7:{ha:743,x_min:38,x_max:738,o:"m 544 697 l 38 697 l 38 810 l 738 810 l 242 -176 l 103 -176 l 544 697 z "},8:{ha:831,x_min:68,x_max:763,o:"m 763 279 q 734 159 763 213 q 658 68 706 106 q 547 10 610 31 q 413 -11 483 -11 q 276 12 339 -11 q 167 74 213 35 q 94 168 121 114 q 68 285 68 222 q 85 369 68 331 q 127 439 101 408 q 186 492 153 469 q 253 528 219 515 q 194 560 222 540 q 146 606 167 581 q 113 663 125 632 q 101 728 101 693 q 130 838 101 790 q 203 919 158 886 q 304 969 249 953 q 415 986 360 986 q 527 969 471 986 q 628 920 583 953 q 702 840 674 888 q 731 729 731 792 q 685 607 731 660 q 576 528 639 554 q 648 489 614 513 q 707 434 682 465 q 747 364 732 403 q 763 279 763 325 m 639 288 q 619 367 639 332 q 567 427 599 403 q 494 464 535 451 q 414 476 454 476 q 333 463 372 476 q 262 425 293 450 q 212 365 231 400 q 193 286 193 329 q 213 207 193 242 q 265 149 233 172 q 337 112 297 125 q 417 99 376 99 q 498 113 458 99 q 569 151 538 126 q 619 211 600 176 q 639 288 639 246 m 225 724 q 242 658 225 686 q 288 610 260 629 q 349 581 315 590 q 415 571 382 571 q 482 581 449 571 q 543 611 515 592 q 588 660 571 631 q 606 726 606 689 q 590 789 606 761 q 547 836 574 817 q 486 866 521 856 q 414 876 451 876 q 342 866 376 876 q 283 835 308 856 q 241 787 257 815 q 225 724 225 758 z "},9:{ha:818,x_min:50,x_max:760,o:"m 50 453 q 77 585 50 524 q 152 694 104 647 q 264 767 200 740 q 403 793 328 793 q 548 764 482 793 q 661 680 614 735 q 734 547 708 625 q 760 368 760 468 q 733 113 760 222 q 658 -69 707 4 q 542 -178 610 -142 q 390 -214 474 -214 q 216 -168 294 -214 q 93 -39 138 -122 l 168 35 q 258 -69 199 -31 q 392 -107 318 -107 q 574 -6 506 -107 q 644 279 642 96 q 546 164 614 207 q 390 121 478 121 q 257 147 319 121 q 149 217 194 172 q 76 322 103 261 q 50 453 50 383 m 401 688 q 310 669 353 688 q 236 618 268 650 q 185 544 204 586 q 167 453 167 501 q 185 362 167 404 q 236 288 204 319 q 310 238 268 257 q 401 219 353 219 q 492 238 450 219 q 567 288 535 257 q 617 362 599 319 q 636 453 636 404 q 617 543 636 500 q 567 618 599 586 q 492 669 535 650 q 401 688 449 688 z "}," ":{ha:351,x_min:0,x_max:0,o:""},"Ǽ":{ha:1335,x_min:-35,x_max:1285,o:"m 760 1104 l 679 1132 l 760 1272 l 882 1272 l 760 1104 m 594 986 l 1272 986 l 1272 875 l 751 875 l 751 558 l 1197 558 l 1197 447 l 751 447 l 751 111 l 1285 111 l 1285 0 l 628 0 l 628 289 l 282 289 l 101 0 l -35 0 l 594 986 m 619 400 l 619 840 l 338 400 l 619 400 z "},"´":{ha:322,x_min:67,x_max:269,o:"m 147 846 l 67 874 l 147 1014 l 269 1014 l 147 846 z "},"Á":{ha:940,x_min:14,x_max:926,o:"m 418 986 l 524 986 l 926 0 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 418 986 m 649 386 l 471 842 l 288 386 l 649 386 m 492 1104 l 411 1132 l 492 1272 l 614 1272 l 492 1104 z "},"Ă":{ha:940,x_min:14,x_max:926,o:"m 418 986 l 524 986 l 926 0 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 418 986 m 649 386 l 471 842 l 288 386 l 649 386 m 471 1178 q 524 1205 501 1178 q 551 1272 547 1232 l 621 1272 q 609 1211 621 1239 q 577 1163 597 1183 q 530 1130 557 1142 q 471 1118 503 1118 q 412 1130 439 1118 q 365 1163 385 1142 q 333 1211 344 1183 q 321 1272 321 1239 l 392 1272 q 415 1206 392 1235 q 471 1178 439 1178 z "},"˘":{ha:411,x_min:56,x_max:356,o:"m 206 919 q 259 947 236 919 q 286 1014 282 974 l 356 1014 q 344 953 356 981 q 312 904 332 925 q 265 872 292 883 q 206 860 238 860 q 147 872 174 860 q 99 904 119 883 q 67 953 79 925 q 56 1014 56 981 l 126 1014 q 150 948 126 976 q 206 919 174 919 z "},"Â":{ha:940,x_min:14,x_max:926,o:"m 418 986 l 524 986 l 926 0 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 418 986 m 649 386 l 471 842 l 288 386 l 649 386 m 286 1147 l 426 1272 l 515 1272 l 656 1147 l 589 1114 l 471 1201 l 353 1114 l 286 1147 z "},"ˆ":{ha:475,x_min:53,x_max:422,o:"m 53 889 l 193 1014 l 282 1014 l 422 889 l 356 856 l 238 943 l 119 856 l 53 889 z "},"Ä":{ha:940,x_min:14,x_max:926,o:"m 418 986 l 524 986 l 926 0 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 418 986 m 649 386 l 471 842 l 288 386 l 649 386 m 307 1126 l 307 1268 l 410 1268 l 410 1126 l 307 1126 m 532 1126 l 532 1268 l 635 1268 l 635 1126 l 532 1126 z "},"¨":{ha:511,x_min:92,x_max:419,o:"m 92 867 l 92 1008 l 194 1008 l 194 867 l 92 867 m 317 867 l 317 1008 l 419 1008 l 419 867 l 317 867 z "},"À":{ha:940,x_min:14,x_max:926,o:"m 418 986 l 524 986 l 926 0 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 418 986 m 649 386 l 471 842 l 288 386 l 649 386 m 326 1274 l 447 1274 l 529 1133 l 450 1106 l 326 1274 z "},"`":{ha:322,x_min:67,x_max:269,o:"m 67 1014 l 188 1014 l 269 874 l 190 846 l 67 1014 z "},"Ā":{ha:940,x_min:14,x_max:926,o:"m 418 986 l 524 986 l 926 0 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 418 986 m 649 386 l 471 842 l 288 386 l 649 386 m 268 1167 l 268 1247 l 674 1247 l 674 1167 l 268 1167 z "},"¯":{ha:560,x_min:78,x_max:483,o:"m 78 908 l 78 989 l 483 989 l 483 908 l 78 908 z "},"Ą":{ha:939,x_min:14,x_max:926,o:"m 858 -251 q 771 -212 800 -240 q 742 -144 742 -183 q 767 -72 742 -108 q 849 0 793 -36 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 418 986 l 524 986 l 926 0 q 839 -67 865 -37 q 813 -128 813 -97 q 889 -187 813 -179 l 858 -251 m 649 386 l 471 842 l 288 386 l 649 386 z "},"˛":{ha:354,x_min:81,x_max:265,o:"m 197 -251 q 110 -212 139 -240 q 81 -144 81 -183 q 116 -61 81 -103 q 229 25 151 -19 l 265 0 q 178 -67 204 -37 q 151 -128 151 -97 q 228 -187 151 -179 l 197 -251 l 197 -251 z "},"Å":{ha:940,x_min:14,x_max:926,o:"m 418 986 l 524 986 l 926 0 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 418 986 m 649 386 l 471 842 l 288 386 l 649 386 m 357 1176 q 389 1247 357 1221 q 469 1272 421 1272 q 551 1247 519 1272 q 582 1176 582 1221 q 551 1106 582 1132 q 469 1081 519 1081 q 389 1106 421 1081 q 357 1176 357 1132 m 469 1229 q 430 1215 446 1229 q 414 1176 414 1200 q 430 1139 414 1154 q 469 1124 446 1124 q 509 1138 492 1124 q 526 1176 526 1153 q 510 1215 526 1200 q 469 1229 493 1229 z "},"˚":{ha:350,x_min:63,x_max:288,o:"m 63 918 q 94 988 63 963 q 175 1014 126 1014 q 256 988 225 1014 q 288 918 288 963 q 256 848 288 874 q 175 822 225 822 q 94 848 126 822 q 63 918 63 874 m 175 971 q 135 956 151 971 q 119 918 119 942 q 135 881 119 896 q 175 865 151 865 q 215 880 197 865 q 232 918 232 894 q 215 956 232 942 q 175 971 199 971 z "},"Ǻ":{ha:940,x_min:14,x_max:926,o:"m 510 1129 q 563 1096 543 1119 q 582 1039 582 1072 q 569 990 582 1011 q 535 958 557 969 l 926 0 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 406 957 q 357 1039 357 983 q 380 1100 357 1075 q 439 1132 403 1125 l 500 1275 l 622 1275 l 510 1129 m 649 386 l 471 842 l 288 386 l 649 386 m 469 1092 q 430 1077 446 1092 q 414 1039 414 1063 q 430 1001 414 1017 q 469 986 446 986 q 509 1001 492 986 q 526 1039 526 1015 q 510 1077 526 1063 q 469 1092 493 1092 z "},"Ã":{ha:940,x_min:14,x_max:926,o:"m 418 986 l 524 986 l 926 0 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 418 986 m 649 386 l 471 842 l 288 386 l 649 386 m 557 1129 q 502 1138 525 1129 q 459 1158 479 1147 q 419 1178 439 1169 q 378 1188 400 1188 q 341 1178 354 1188 q 321 1156 328 1168 q 312 1133 314 1144 q 310 1121 310 1122 l 238 1121 q 244 1153 238 1129 q 265 1201 250 1176 q 307 1245 281 1226 q 375 1264 333 1264 q 426 1255 404 1264 q 469 1234 449 1246 q 509 1213 489 1222 q 554 1204 529 1204 q 596 1214 581 1204 q 619 1236 611 1224 q 630 1259 628 1249 q 632 1272 632 1269 l 704 1272 q 698 1241 704 1264 q 675 1193 692 1218 q 630 1149 658 1168 q 557 1129 601 1129 z "},"˜":{ha:576,x_min:56,x_max:522,o:"m 375 871 q 320 880 343 871 q 277 900 297 889 q 238 920 257 911 q 196 929 218 929 q 159 919 172 929 q 139 898 146 910 q 130 875 132 886 q 128 863 128 864 l 56 863 q 62 894 56 871 q 83 943 68 918 q 125 987 99 968 q 193 1006 151 1006 q 244 997 222 1006 q 287 976 267 988 q 327 955 307 964 q 372 946 347 946 q 414 956 399 946 q 438 978 429 965 q 448 1001 446 990 q 450 1014 450 1011 l 522 1014 q 516 983 522 1006 q 493 935 510 960 q 448 890 476 910 q 375 871 419 871 z "},B:{ha:932,x_min:118,x_max:875,o:"m 875 254 q 852 150 875 197 q 790 69 829 103 q 698 18 750 36 q 586 0 646 0 l 118 0 l 118 986 l 608 986 q 701 964 660 986 q 772 906 743 942 q 817 826 801 871 q 833 735 833 781 q 797 599 833 661 q 692 506 760 536 q 826 413 776 481 q 875 254 875 346 m 749 276 q 737 341 749 310 q 705 396 725 372 q 657 433 685 419 q 596 447 629 447 l 243 447 l 243 108 l 586 108 q 650 122 621 108 q 701 159 679 136 q 736 213 724 182 q 749 276 749 243 m 243 878 l 243 549 l 557 549 q 618 562 590 549 q 666 597 646 575 q 698 649 686 619 q 710 713 710 679 q 699 778 710 747 q 669 831 688 808 q 623 865 650 853 q 565 878 596 878 l 243 878 z "},C:{ha:947,x_min:54,x_max:908,o:"m 54 500 q 85 677 54 589 q 177 835 117 765 q 325 949 238 906 q 524 992 413 992 q 750 932 656 992 q 890 776 844 872 l 792 713 q 738 792 769 760 q 670 843 707 824 q 594 871 633 863 q 518 879 556 879 q 373 845 436 879 q 267 756 310 811 q 202 633 224 701 q 181 494 181 564 q 206 347 181 417 q 278 222 232 276 q 386 136 324 168 q 522 104 449 104 q 602 114 561 104 q 681 145 643 124 q 751 199 718 167 q 804 278 783 232 l 908 221 q 842 123 885 165 q 747 51 800 81 q 633 7 693 22 q 517 -8 574 -8 q 331 36 415 -8 q 184 152 246 81 q 88 315 122 224 q 54 500 54 406 z "},"Ć":{ha:947,x_min:54,x_max:908,o:"m 543 1104 l 463 1132 l 543 1272 l 665 1272 l 543 1104 m 54 500 q 85 677 54 589 q 177 835 117 765 q 325 949 238 906 q 524 992 413 992 q 750 932 656 992 q 890 776 844 872 l 792 713 q 738 792 769 760 q 670 843 707 824 q 594 871 633 863 q 518 879 556 879 q 373 845 436 879 q 267 756 310 811 q 202 633 224 701 q 181 494 181 564 q 206 347 181 417 q 278 222 232 276 q 386 136 324 168 q 522 104 449 104 q 602 114 561 104 q 681 145 643 124 q 751 199 718 167 q 804 278 783 232 l 908 221 q 842 123 885 165 q 747 51 800 81 q 633 7 693 22 q 517 -8 574 -8 q 331 36 415 -8 q 184 152 246 81 q 88 315 122 224 q 54 500 54 406 z "},"Č":{ha:947,x_min:54,x_max:908,o:"m 404 1272 l 522 1185 l 640 1272 l 707 1239 l 567 1114 l 478 1114 l 338 1239 l 404 1272 m 54 500 q 85 677 54 589 q 177 835 117 765 q 325 949 238 906 q 524 992 413 992 q 750 932 656 992 q 890 776 844 872 l 792 713 q 738 792 769 760 q 670 843 707 824 q 594 871 633 863 q 518 879 556 879 q 373 845 436 879 q 267 756 310 811 q 202 633 224 701 q 181 494 181 564 q 206 347 181 417 q 278 222 232 276 q 386 136 324 168 q 522 104 449 104 q 602 114 561 104 q 681 145 643 124 q 751 199 718 167 q 804 278 783 232 l 908 221 q 842 123 885 165 q 747 51 800 81 q 633 7 693 22 q 517 -8 574 -8 q 331 36 415 -8 q 184 152 246 81 q 88 315 122 224 q 54 500 54 406 z "},"ˇ":{ha:475,x_min:53,x_max:422,o:"m 119 1014 l 238 926 l 356 1014 l 422 981 l 282 856 l 193 856 l 53 981 l 119 1014 z "},"Ç":{ha:943,x_min:50,x_max:904,o:"m 406 -175 q 458 -193 424 -185 q 528 -201 492 -201 q 586 -190 565 -201 q 607 -153 607 -179 q 588 -115 607 -125 q 536 -104 568 -104 q 475 -110 507 -104 q 425 -122 443 -117 l 486 -7 q 310 44 390 -1 q 172 161 229 90 q 82 321 114 232 q 50 500 50 410 q 81 677 50 589 q 173 835 113 765 q 321 949 233 906 q 519 992 408 992 q 746 932 651 992 q 886 776 840 872 l 788 713 q 734 792 765 760 q 666 843 703 824 q 590 871 629 863 q 514 879 551 879 q 369 845 432 879 q 263 756 306 811 q 198 633 219 701 q 176 494 176 564 q 202 347 176 417 q 274 222 228 276 q 382 136 319 168 q 518 104 444 104 q 598 114 557 104 q 676 145 639 124 q 747 199 714 167 q 800 278 779 232 l 904 221 q 844 129 882 169 q 758 60 806 89 q 656 14 710 31 q 549 -7 603 -3 l 511 -67 q 536 -61 522 -62 q 561 -60 550 -60 q 640 -82 610 -60 q 671 -149 671 -104 q 632 -225 671 -197 q 518 -253 593 -253 q 441 -245 476 -253 q 378 -226 406 -237 l 406 -175 z "},"¸":{ha:411,x_min:31,x_max:324,o:"m 58 -175 q 110 -193 76 -185 q 181 -201 144 -201 q 239 -190 218 -201 q 260 -153 260 -179 q 240 -115 260 -125 q 189 -104 221 -104 q 128 -110 160 -104 q 78 -122 96 -117 l 158 29 l 213 10 l 164 -67 q 189 -61 175 -62 q 214 -60 203 -60 q 293 -82 263 -60 q 324 -149 324 -104 q 285 -225 324 -197 q 171 -253 246 -253 q 94 -245 129 -253 q 31 -226 58 -237 l 58 -175 z "},"Ĉ":{ha:947,x_min:54,x_max:908,o:"m 338 1147 l 478 1272 l 567 1272 l 707 1147 l 640 1114 l 522 1201 l 404 1114 l 338 1147 m 54 500 q 85 677 54 589 q 177 835 117 765 q 325 949 238 906 q 524 992 413 992 q 750 932 656 992 q 890 776 844 872 l 792 713 q 738 792 769 760 q 670 843 707 824 q 594 871 633 863 q 518 879 556 879 q 373 845 436 879 q 267 756 310 811 q 202 633 224 701 q 181 494 181 564 q 206 347 181 417 q 278 222 232 276 q 386 136 324 168 q 522 104 449 104 q 602 114 561 104 q 681 145 643 124 q 751 199 718 167 q 804 278 783 232 l 908 221 q 842 123 885 165 q 747 51 800 81 q 633 7 693 22 q 517 -8 574 -8 q 331 36 415 -8 q 184 152 246 81 q 88 315 122 224 q 54 500 54 406 z "},"Ċ":{ha:947,x_min:54,x_max:908,o:"m 54 500 q 85 677 54 589 q 177 835 117 765 q 325 949 238 906 q 524 992 413 992 q 750 932 656 992 q 890 776 844 872 l 792 713 q 738 792 769 760 q 670 843 707 824 q 594 871 633 863 q 518 879 556 879 q 373 845 436 879 q 267 756 310 811 q 202 633 224 701 q 181 494 181 564 q 206 347 181 417 q 278 222 232 276 q 386 136 324 168 q 522 104 449 104 q 602 114 561 104 q 681 145 643 124 q 751 199 718 167 q 804 278 783 232 l 908 221 q 842 123 885 165 q 747 51 800 81 q 633 7 693 22 q 517 -8 574 -8 q 331 36 415 -8 q 184 152 246 81 q 88 315 122 224 q 54 500 54 406 m 467 1125 l 467 1272 l 578 1272 l 578 1125 l 467 1125 z "},"˙":{ha:250,x_min:69,x_max:181,o:"m 69 867 l 69 1014 l 181 1014 l 181 867 l 69 867 z "},D:{ha:994,x_min:118,x_max:936,o:"m 118 0 l 118 986 l 460 986 q 667 947 578 986 q 817 842 757 908 q 906 685 876 775 q 936 494 936 596 q 903 291 936 382 q 807 135 869 200 q 656 35 744 71 q 460 0 568 0 l 118 0 m 810 494 q 787 648 810 578 q 719 768 764 718 q 608 847 674 818 q 460 875 543 875 l 243 875 l 243 111 l 460 111 q 610 140 544 111 q 720 221 676 169 q 787 342 764 272 q 810 494 810 413 z "},"Ď":{ha:994,x_min:118,x_max:936,o:"m 354 1272 l 472 1185 l 590 1272 l 657 1239 l 517 1114 l 428 1114 l 288 1239 l 354 1272 m 118 0 l 118 986 l 460 986 q 667 947 578 986 q 817 842 757 908 q 906 685 876 775 q 936 494 936 596 q 903 291 936 382 q 807 135 869 200 q 656 35 744 71 q 460 0 568 0 l 118 0 m 810 494 q 787 648 810 578 q 719 768 764 718 q 608 847 674 818 q 460 875 543 875 l 243 875 l 243 111 l 460 111 q 610 140 544 111 q 720 221 676 169 q 787 342 764 272 q 810 494 810 413 z "},"Đ":{ha:1003,x_min:47,x_max:944,o:"m 126 0 l 126 449 l 47 449 l 47 543 l 126 543 l 126 986 l 468 986 q 676 947 586 986 q 825 842 765 908 q 915 685 885 775 q 944 494 944 596 q 911 291 944 382 q 815 135 878 200 q 665 35 753 71 q 468 0 576 0 l 126 0 m 818 494 q 795 648 818 578 q 727 768 772 718 q 617 847 682 818 q 468 875 551 875 l 251 875 l 251 543 l 475 543 l 475 449 l 251 449 l 251 111 l 468 111 q 619 140 553 111 q 728 221 685 169 q 795 342 772 272 q 818 494 818 413 z "},E:{ha:840,x_min:118,x_max:788,o:"m 788 111 l 788 0 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 z "},"É":{ha:840,x_min:118,x_max:788,o:"m 485 1104 l 404 1132 l 485 1272 l 607 1272 l 485 1104 m 788 111 l 788 0 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 z "},"Ĕ":{ha:840,x_min:118,x_max:788,o:"m 788 111 l 788 0 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 m 464 1178 q 517 1205 494 1178 q 544 1272 540 1232 l 614 1272 q 602 1211 614 1239 q 570 1163 590 1183 q 523 1130 550 1142 q 464 1118 496 1118 q 405 1130 432 1118 q 358 1163 378 1142 q 326 1211 338 1183 q 314 1272 314 1239 l 385 1272 q 408 1206 385 1235 q 464 1178 432 1178 z "},"Ě":{ha:840,x_min:118,x_max:788,o:"m 346 1272 l 464 1185 l 582 1272 l 649 1239 l 508 1114 l 419 1114 l 279 1239 l 346 1272 m 788 111 l 788 0 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 z "},"Ê":{ha:840,x_min:118,x_max:788,o:"m 279 1147 l 419 1272 l 508 1272 l 649 1147 l 582 1114 l 464 1201 l 346 1114 l 279 1147 m 788 111 l 788 0 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 z "},"Ë":{ha:840,x_min:118,x_max:788,o:"m 300 1126 l 300 1268 l 403 1268 l 403 1126 l 300 1126 m 525 1126 l 525 1268 l 628 1268 l 628 1126 l 525 1126 m 788 111 l 788 0 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 z "},"Ė":{ha:840,x_min:118,x_max:788,o:"m 788 111 l 788 0 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 m 408 1125 l 408 1272 l 519 1272 l 519 1125 l 408 1125 z "},"È":{ha:840,x_min:118,x_max:788,o:"m 788 111 l 788 0 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 m 319 1274 l 440 1274 l 522 1133 l 443 1106 l 319 1274 z "},"Ē":{ha:840,x_min:118,x_max:788,o:"m 788 111 l 788 0 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 m 263 1167 l 263 1247 l 668 1247 l 668 1167 l 263 1167 z "},"Ŋ":{ha:1058,x_min:118,x_max:940,o:"m 243 750 l 243 0 l 118 0 l 118 986 l 214 986 l 815 224 l 815 985 l 940 985 l 940 -28 q 922 -122 940 -79 q 871 -194 903 -164 q 798 -242 839 -225 q 714 -258 757 -258 q 624 -244 667 -258 q 549 -200 582 -231 l 606 -118 q 650 -143 625 -136 q 700 -150 675 -150 q 744 -141 722 -150 q 782 -117 765 -132 q 808 -79 799 -101 q 818 -32 818 -57 l 818 21 l 243 750 z "},"Ę":{ha:840,x_min:118,x_max:788,o:"m 788 111 l 788 0 q 700 -67 726 -37 q 674 -128 674 -97 q 750 -187 674 -179 l 719 -251 q 632 -212 661 -240 q 603 -144 603 -183 q 628 -72 603 -108 q 710 0 654 -36 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 z "},"Ð":{ha:1003,x_min:47,x_max:944,o:"m 126 0 l 126 449 l 47 449 l 47 543 l 126 543 l 126 986 l 468 986 q 676 947 586 986 q 825 842 765 908 q 915 685 885 775 q 944 494 944 596 q 911 291 944 382 q 815 135 878 200 q 665 35 753 71 q 468 0 576 0 l 126 0 m 818 494 q 795 648 818 578 q 727 768 772 718 q 617 847 682 818 q 468 875 551 875 l 251 875 l 251 543 l 475 543 l 475 449 l 251 449 l 251 111 l 468 111 q 619 140 553 111 q 728 221 685 169 q 795 342 772 272 q 818 494 818 413 z "},"Ẽ":{ha:840,x_min:118,x_max:788,o:"m 788 111 l 788 0 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 m 550 1129 q 495 1138 518 1129 q 452 1158 472 1147 q 413 1178 432 1169 q 371 1188 393 1188 q 334 1178 347 1188 q 314 1156 321 1168 q 305 1133 307 1144 q 303 1121 303 1122 l 231 1121 q 237 1153 231 1129 q 258 1201 243 1176 q 300 1245 274 1226 q 368 1264 326 1264 q 419 1255 397 1264 q 462 1234 442 1246 q 502 1213 482 1222 q 547 1204 522 1204 q 589 1214 574 1204 q 613 1236 604 1224 q 623 1259 621 1249 q 625 1272 625 1269 l 697 1272 q 691 1241 697 1264 q 668 1193 685 1218 q 623 1149 651 1168 q 550 1129 594 1129 z "},"€":{ha:1104,x_min:46,x_max:1035,o:"m 188 586 q 238 738 201 665 q 334 867 275 811 q 472 958 393 924 q 650 992 551 992 q 876 932 782 992 q 1017 776 971 872 l 918 713 q 865 792 896 760 q 797 843 833 824 q 721 871 760 863 q 644 879 682 879 q 520 855 575 879 q 424 790 465 831 q 355 697 382 750 q 315 586 328 644 l 753 586 l 722 514 l 307 514 l 307 494 q 311 432 307 461 l 704 432 l 674 360 l 328 360 q 376 258 346 306 q 449 177 407 211 q 541 124 490 143 q 649 104 592 104 q 728 114 688 104 q 807 145 769 124 q 877 199 844 167 q 931 278 910 232 l 1035 221 q 969 123 1011 165 q 873 51 926 81 q 760 7 819 22 q 643 -8 700 -8 q 488 22 560 -8 q 360 101 417 51 q 262 218 303 151 q 200 360 221 285 l 46 360 l 76 432 l 185 432 q 181 500 181 465 l 181 514 l 79 514 l 110 586 l 188 586 z "},F:{ha:810,x_min:118,x_max:769,o:"m 118 0 l 118 986 l 769 986 l 769 875 l 243 875 l 243 546 l 686 546 l 686 442 l 243 442 l 243 0 l 118 0 z "},G:{ha:992,x_min:54,x_max:919,o:"m 814 133 q 514 -7 683 -7 q 331 36 415 -7 q 186 149 247 79 q 90 310 125 219 q 54 496 54 400 q 89 685 54 596 q 185 844 124 775 q 331 953 246 913 q 514 993 415 993 q 749 933 657 993 q 890 778 842 874 l 794 711 q 676 839 750 797 q 511 881 603 881 q 375 848 436 881 q 271 762 314 815 q 204 638 228 708 q 181 493 181 568 q 207 344 181 414 q 279 220 233 274 q 388 136 325 167 q 524 106 450 106 q 814 261 685 106 l 814 397 l 601 397 l 601 492 l 919 492 l 919 0 l 814 0 l 814 133 z "},"Ğ":{ha:992,x_min:54,x_max:919,o:"m 814 133 q 514 -7 683 -7 q 331 36 415 -7 q 186 149 247 79 q 90 310 125 219 q 54 496 54 400 q 89 685 54 596 q 185 844 124 775 q 331 953 246 913 q 514 993 415 993 q 749 933 657 993 q 890 778 842 874 l 794 711 q 676 839 750 797 q 511 881 603 881 q 375 848 436 881 q 271 762 314 815 q 204 638 228 708 q 181 493 181 568 q 207 344 181 414 q 279 220 233 274 q 388 136 325 167 q 524 106 450 106 q 814 261 685 106 l 814 397 l 601 397 l 601 492 l 919 492 l 919 0 l 814 0 l 814 133 m 513 1178 q 566 1205 543 1178 q 593 1272 589 1232 l 663 1272 q 651 1211 663 1239 q 619 1163 639 1183 q 572 1130 599 1142 q 513 1118 544 1118 q 453 1130 481 1118 q 406 1163 426 1142 q 374 1211 386 1183 q 363 1272 363 1239 l 433 1272 q 457 1206 433 1235 q 513 1178 481 1178 z "},"Ĝ":{ha:992,x_min:54,x_max:919,o:"m 328 1147 l 468 1272 l 557 1272 l 697 1147 l 631 1114 l 513 1201 l 394 1114 l 328 1147 m 814 133 q 514 -7 683 -7 q 331 36 415 -7 q 186 149 247 79 q 90 310 125 219 q 54 496 54 400 q 89 685 54 596 q 185 844 124 775 q 331 953 246 913 q 514 993 415 993 q 749 933 657 993 q 890 778 842 874 l 794 711 q 676 839 750 797 q 511 881 603 881 q 375 848 436 881 q 271 762 314 815 q 204 638 228 708 q 181 493 181 568 q 207 344 181 414 q 279 220 233 274 q 388 136 325 167 q 524 106 450 106 q 814 261 685 106 l 814 397 l 601 397 l 601 492 l 919 492 l 919 0 l 814 0 l 814 133 z "},"Ģ":{ha:992,x_min:54,x_max:919,o:"m 468 -296 l 496 -183 l 461 -183 l 461 -67 l 569 -67 l 569 -183 l 528 -296 l 468 -296 m 814 133 q 514 -7 683 -7 q 331 36 415 -7 q 186 149 247 79 q 90 310 125 219 q 54 496 54 400 q 89 685 54 596 q 185 844 124 775 q 331 953 246 913 q 514 993 415 993 q 749 933 657 993 q 890 778 842 874 l 794 711 q 676 839 750 797 q 511 881 603 881 q 375 848 436 881 q 271 762 314 815 q 204 638 228 708 q 181 493 181 568 q 207 344 181 414 q 279 220 233 274 q 388 136 325 167 q 524 106 450 106 q 814 261 685 106 l 814 397 l 601 397 l 601 492 l 919 492 l 919 0 l 814 0 l 814 133 z "},"":{ha:233,x_min:81,x_max:189,o:"m 88 -296 l 115 -183 l 81 -183 l 81 -67 l 189 -67 l 189 -183 l 147 -296 l 88 -296 z "},"Ġ":{ha:992,x_min:54,x_max:919,o:"m 814 133 q 514 -7 683 -7 q 331 36 415 -7 q 186 149 247 79 q 90 310 125 219 q 54 496 54 400 q 89 685 54 596 q 185 844 124 775 q 331 953 246 913 q 514 993 415 993 q 749 933 657 993 q 890 778 842 874 l 794 711 q 676 839 750 797 q 511 881 603 881 q 375 848 436 881 q 271 762 314 815 q 204 638 228 708 q 181 493 181 568 q 207 344 181 414 q 279 220 233 274 q 388 136 325 167 q 524 106 450 106 q 814 261 685 106 l 814 397 l 601 397 l 601 492 l 919 492 l 919 0 l 814 0 l 814 133 m 457 1125 l 457 1272 l 568 1272 l 568 1125 l 457 1125 z "},H:{ha:1029,x_min:118,x_max:911,o:"m 911 986 l 911 0 l 786 0 l 786 449 l 243 449 l 243 0 l 118 0 l 118 986 l 243 986 l 243 560 l 786 560 l 786 986 l 911 986 z "},"Ħ":{ha:1043,x_min:56,x_max:988,o:"m 918 986 l 918 826 l 988 826 l 988 761 l 918 761 l 918 0 l 793 0 l 793 449 l 250 449 l 250 0 l 125 0 l 125 761 l 56 761 l 56 826 l 125 826 l 125 986 l 250 986 l 250 826 l 793 826 l 793 986 l 918 986 m 793 560 l 793 761 l 250 761 l 250 560 l 793 560 z "},"Ĥ":{ha:1029,x_min:118,x_max:911,o:"m 333 1147 l 474 1272 l 563 1272 l 703 1147 l 636 1114 l 518 1201 l 400 1114 l 333 1147 m 911 986 l 911 0 l 786 0 l 786 449 l 243 449 l 243 0 l 118 0 l 118 986 l 243 986 l 243 560 l 786 560 l 786 986 l 911 986 z "},I:{ha:361,x_min:118,x_max:243,o:"m 118 0 l 118 986 l 243 986 l 243 0 l 118 0 z "},"Ĳ":{ha:1035,x_min:118,x_max:928,o:"m 118 0 l 118 986 l 243 986 l 243 0 l 118 0 m 410 147 q 485 113 438 128 q 592 97 532 97 q 704 122 663 97 q 767 197 746 147 q 796 318 789 246 q 803 485 803 390 l 803 986 l 928 986 l 928 485 q 917 280 928 372 q 872 122 907 188 q 770 21 836 57 q 592 -15 704 -15 q 378 46 467 -15 l 410 147 z "},J:{ha:674,x_min:17,x_max:567,o:"m 49 147 q 124 113 76 128 q 231 97 171 97 q 343 122 301 97 q 406 197 385 147 q 435 318 428 246 q 442 485 442 390 l 442 986 l 567 986 l 567 485 q 556 280 567 372 q 510 122 546 188 q 409 21 475 57 q 231 -15 343 -15 q 17 46 106 -15 l 49 147 z "},"Í":{ha:361,x_min:118,x_max:324,o:"m 118 0 l 118 986 l 243 986 l 243 0 l 118 0 m 201 1104 l 121 1132 l 201 1272 l 324 1272 l 201 1104 z "},"Ĭ":{ha:361,x_min:31,x_max:331,o:"m 118 0 l 118 986 l 243 986 l 243 0 l 118 0 m 181 1178 q 234 1205 211 1178 q 261 1272 257 1232 l 331 1272 q 319 1211 331 1239 q 287 1163 307 1183 q 240 1130 267 1142 q 181 1118 213 1118 q 122 1130 149 1118 q 74 1163 94 1142 q 42 1211 54 1183 q 31 1272 31 1239 l 101 1272 q 125 1206 101 1235 q 181 1178 149 1178 z "},"Î":{ha:361,x_min:-4,x_max:365,o:"m 118 0 l 118 986 l 243 986 l 243 0 l 118 0 m -4 1147 l 136 1272 l 225 1272 l 365 1147 l 299 1114 l 181 1201 l 63 1114 l -4 1147 z "},"Ï":{ha:361,x_min:17,x_max:344,o:"m 118 0 l 118 986 l 243 986 l 243 0 l 118 0 m 17 1126 l 17 1268 l 119 1268 l 119 1126 l 17 1126 m 242 1126 l 242 1268 l 344 1268 l 344 1126 l 242 1126 z "},"İ":{ha:361,x_min:118,x_max:243,o:"m 118 0 l 118 986 l 243 986 l 243 0 l 118 0 m 125 1125 l 125 1272 l 236 1272 l 236 1125 l 125 1125 z "},"Ì":{ha:361,x_min:36,x_max:243,o:"m 118 0 l 118 986 l 243 986 l 243 0 l 118 0 m 36 1274 l 157 1274 l 239 1133 l 160 1106 l 36 1274 z "},"Ī":{ha:361,x_min:-21,x_max:385,o:"m 118 0 l 118 986 l 243 986 l 243 0 l 118 0 m -21 1167 l -21 1247 l 385 1247 l 385 1167 l -21 1167 z "},"Į":{ha:361,x_min:58,x_max:243,o:"m 175 -251 q 88 -212 117 -240 q 58 -144 58 -183 q 84 -72 58 -108 q 165 0 110 -36 l 118 0 l 118 986 l 243 986 l 243 0 q 156 -67 182 -37 q 129 -128 129 -97 q 206 -187 129 -179 l 175 -251 l 175 -251 z "},"Ĩ":{ha:361,x_min:-53,x_max:414,o:"m 118 0 l 118 986 l 243 986 l 243 0 l 118 0 m 267 1129 q 212 1138 235 1129 q 169 1158 189 1147 q 129 1178 149 1169 q 88 1188 110 1188 q 51 1178 64 1188 q 31 1156 38 1168 q 22 1133 24 1144 q 19 1121 19 1122 l -53 1121 q -47 1153 -53 1129 q -25 1201 -40 1176 q 17 1245 -10 1226 q 85 1264 43 1264 q 136 1255 114 1264 q 178 1234 158 1246 q 219 1213 199 1222 q 264 1204 239 1204 q 306 1214 290 1204 q 329 1236 321 1224 q 340 1259 338 1249 q 342 1272 342 1269 l 414 1272 q 408 1241 414 1264 q 385 1193 401 1218 q 340 1149 368 1168 q 267 1129 311 1129 z "},"Ĵ":{ha:674,x_min:17,x_max:690,o:"m 321 1147 l 461 1272 l 550 1272 l 690 1147 l 624 1114 l 506 1201 l 388 1114 l 321 1147 m 49 147 q 124 113 76 128 q 231 97 171 97 q 343 122 301 97 q 406 197 385 147 q 435 318 428 246 q 442 485 442 390 l 442 986 l 567 986 l 567 485 q 556 280 567 372 q 510 122 546 188 q 409 21 475 57 q 231 -15 343 -15 q 17 46 106 -15 l 49 147 z "},K:{ha:906,x_min:118,x_max:908,o:"m 118 0 l 118 985 l 243 985 l 243 440 l 751 986 l 886 986 l 490 551 l 908 0 l 772 0 l 414 479 l 243 301 l 243 0 l 118 0 z "},"Ķ":{ha:906,x_min:118,x_max:908,o:"m 417 -296 l 444 -183 l 410 -183 l 410 -67 l 518 -67 l 518 -183 l 476 -296 l 417 -296 m 118 0 l 118 985 l 243 985 l 243 440 l 751 986 l 886 986 l 490 551 l 908 0 l 772 0 l 414 479 l 243 301 l 243 0 l 118 0 z "},L:{ha:811,x_min:118,x_max:793,o:"m 118 0 l 118 986 l 243 986 l 243 111 l 793 111 l 793 0 l 118 0 z "},"Ĺ":{ha:811,x_min:118,x_max:793,o:"m 504 1104 l 424 1132 l 504 1272 l 626 1272 l 504 1104 m 118 0 l 118 986 l 243 986 l 243 111 l 793 111 l 793 0 l 118 0 z "},"Ľ":{ha:811,x_min:118,x_max:793,o:"m 543 846 l 463 874 l 543 1014 l 665 1014 l 543 846 m 118 0 l 118 986 l 243 986 l 243 111 l 793 111 l 793 0 l 118 0 z "},"Ļ":{ha:811,x_min:118,x_max:793,o:"m 413 -296 l 440 -183 l 406 -183 l 406 -67 l 514 -67 l 514 -183 l 472 -296 l 413 -296 m 118 0 l 118 986 l 243 986 l 243 111 l 793 111 l 793 0 l 118 0 z "},"Ŀ":{ha:811,x_min:118,x_max:793,o:"m 118 0 l 118 986 l 243 986 l 243 111 l 793 111 l 793 0 l 118 0 m 508 476 l 508 649 l 611 649 l 611 476 l 508 476 z "},"·":{ha:281,x_min:89,x_max:192,o:"m 89 340 l 89 513 l 192 513 l 192 340 l 89 340 z "},"Ł":{ha:821,x_min:14,x_max:803,o:"m 128 0 l 128 383 l 50 324 l 14 393 l 128 479 l 128 986 l 253 986 l 253 575 l 450 726 l 485 658 l 253 479 l 253 111 l 803 111 l 803 0 l 128 0 z "},M:{ha:1214,x_min:118,x_max:1096,o:"m 971 0 l 971 763 l 643 178 l 572 178 l 243 763 l 243 0 l 118 0 l 118 986 l 250 986 l 607 346 l 965 986 l 1096 986 l 1096 0 l 971 0 z "},N:{ha:1069,x_min:118,x_max:951,o:"m 243 753 l 243 0 l 118 0 l 118 986 l 215 986 l 826 218 l 826 985 l 951 985 l 951 0 l 846 0 l 243 753 z "},A:{ha:940,x_min:14,x_max:926,o:"m 418 986 l 524 986 l 926 0 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 418 986 m 649 386 l 471 842 l 288 386 l 649 386 z "},"Ń":{ha:1069,x_min:118,x_max:951,o:"m 558 1104 l 478 1132 l 558 1272 l 681 1272 l 558 1104 m 243 753 l 243 0 l 118 0 l 118 986 l 215 986 l 826 218 l 826 985 l 951 985 l 951 0 l 846 0 l 243 753 z "},"Ň":{ha:1069,x_min:118,x_max:951,o:"m 419 1272 l 538 1185 l 656 1272 l 722 1239 l 582 1114 l 493 1114 l 353 1239 l 419 1272 m 243 753 l 243 0 l 118 0 l 118 986 l 215 986 l 826 218 l 826 985 l 951 985 l 951 0 l 846 0 l 243 753 z "},"Ņ":{ha:1069,x_min:118,x_max:951,o:"m 486 -296 l 514 -183 l 479 -183 l 479 -67 l 588 -67 l 588 -183 l 546 -296 l 486 -296 m 243 753 l 243 0 l 118 0 l 118 986 l 215 986 l 826 218 l 826 985 l 951 985 l 951 0 l 846 0 l 243 753 z "},"Ṅ":{ha:1069,x_min:118,x_max:951,o:"m 482 1125 l 482 1272 l 593 1272 l 593 1125 l 482 1125 m 243 753 l 243 0 l 118 0 l 118 986 l 215 986 l 826 218 l 826 985 l 951 985 l 951 0 l 846 0 l 243 753 z "},"Ñ":{ha:1069,x_min:118,x_max:951,o:"m 243 753 l 243 0 l 118 0 l 118 986 l 215 986 l 826 218 l 826 985 l 951 985 l 951 0 l 846 0 l 243 753 m 624 1129 q 569 1138 592 1129 q 526 1158 546 1147 q 486 1178 506 1169 q 444 1188 467 1188 q 408 1178 421 1188 q 388 1156 394 1168 q 378 1133 381 1144 q 376 1121 376 1122 l 304 1121 q 310 1153 304 1129 q 332 1201 317 1176 q 374 1245 347 1226 q 442 1264 400 1264 q 493 1255 471 1264 q 535 1234 515 1246 q 576 1213 556 1222 q 621 1204 596 1204 q 663 1214 647 1204 q 686 1236 678 1224 q 697 1259 694 1249 q 699 1272 699 1269 l 771 1272 q 765 1241 771 1264 q 742 1193 758 1218 q 697 1149 725 1168 q 624 1129 668 1129 z "},O:{ha:1039,x_min:54,x_max:983,o:"m 518 -7 q 328 35 414 -7 q 182 148 243 78 q 88 308 121 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 m 181 493 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 q 833 638 857 568 q 763 762 808 708 q 656 847 718 815 q 519 879 594 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 z "},"Œ":{ha:1571,x_min:54,x_max:1519,o:"m 1519 111 l 1519 0 l 861 0 l 861 218 q 803 128 838 169 q 724 58 768 88 q 628 10 679 28 q 519 -7 576 -7 q 330 35 415 -7 q 183 148 244 78 q 88 308 122 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 631 976 579 993 q 726 928 683 958 q 803 856 769 897 q 861 768 838 815 l 861 986 l 1507 986 l 1507 875 l 986 875 l 986 558 l 1432 558 l 1432 447 l 986 447 l 986 111 l 1519 111 m 519 106 q 661 139 599 106 q 767 227 724 172 q 834 352 811 282 q 857 494 857 422 q 833 639 857 569 q 763 763 808 708 q 656 849 718 817 q 519 881 594 881 q 378 847 440 881 q 272 759 315 814 q 204 635 228 704 q 181 493 181 565 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 z "},"Ó":{ha:1039,x_min:54,x_max:983,o:"m 542 1104 l 461 1132 l 542 1272 l 664 1272 l 542 1104 m 518 -7 q 328 35 414 -7 q 182 148 243 78 q 88 308 121 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 m 181 493 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 q 833 638 857 568 q 763 762 808 708 q 656 847 718 815 q 519 879 594 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 z "},"Ŏ":{ha:1039,x_min:54,x_max:983,o:"m 518 -7 q 328 35 414 -7 q 182 148 243 78 q 88 308 121 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 m 181 493 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 q 833 638 857 568 q 763 762 808 708 q 656 847 718 815 q 519 879 594 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 m 521 1178 q 574 1205 551 1178 q 601 1272 597 1232 l 671 1272 q 659 1211 671 1239 q 627 1163 647 1183 q 580 1130 607 1142 q 521 1118 553 1118 q 462 1130 489 1118 q 415 1163 435 1142 q 383 1211 394 1183 q 371 1272 371 1239 l 442 1272 q 465 1206 442 1235 q 521 1178 489 1178 z "},"Ô":{ha:1039,x_min:54,x_max:983,o:"m 336 1147 l 476 1272 l 565 1272 l 706 1147 l 639 1114 l 521 1201 l 403 1114 l 336 1147 m 518 -7 q 328 35 414 -7 q 182 148 243 78 q 88 308 121 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 m 181 493 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 q 833 638 857 568 q 763 762 808 708 q 656 847 718 815 q 519 879 594 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 z "},"Ö":{ha:1039,x_min:54,x_max:983,o:"m 357 1126 l 357 1268 l 460 1268 l 460 1126 l 357 1126 m 582 1126 l 582 1268 l 685 1268 l 685 1126 l 582 1126 m 518 -7 q 328 35 414 -7 q 182 148 243 78 q 88 308 121 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 m 181 493 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 q 833 638 857 568 q 763 762 808 708 q 656 847 718 815 q 519 879 594 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 z "},"Ò":{ha:1039,x_min:54,x_max:983,o:"m 518 -7 q 328 35 414 -7 q 182 148 243 78 q 88 308 121 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 m 181 493 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 q 833 638 857 568 q 763 762 808 708 q 656 847 718 815 q 519 879 594 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 m 376 1274 l 497 1274 l 579 1133 l 500 1106 l 376 1274 z "},"Ő":{ha:1039,x_min:54,x_max:983,o:"m 433 1106 l 369 1133 l 444 1274 l 550 1274 l 433 1106 m 622 1106 l 558 1133 l 633 1274 l 739 1274 l 622 1106 m 518 -7 q 328 35 414 -7 q 182 148 243 78 q 88 308 121 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 m 181 493 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 q 833 638 857 568 q 763 762 808 708 q 656 847 718 815 q 519 879 594 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 z "},"˝":{ha:469,x_min:56,x_max:425,o:"m 119 846 l 56 874 l 131 1014 l 236 1014 l 119 846 m 308 846 l 244 874 l 319 1014 l 425 1014 l 308 846 z "},"Ō":{ha:1039,x_min:54,x_max:983,o:"m 319 1167 l 319 1247 l 725 1247 l 725 1167 l 319 1167 m 518 -7 q 328 35 414 -7 q 182 148 243 78 q 88 308 121 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 m 181 493 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 q 833 638 857 568 q 763 762 808 708 q 656 847 718 815 q 519 879 594 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 z "},"Ǫ":{ha:1039,x_min:54,x_max:983,o:"m 485 -254 q 397 -215 426 -243 q 368 -147 368 -186 q 393 -76 368 -111 q 472 -4 418 -40 q 301 51 378 6 q 169 165 224 96 q 84 318 114 233 q 54 493 54 403 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 951 310 983 397 q 860 154 918 222 q 722 43 801 86 q 547 -6 642 0 q 464 -71 489 -42 q 439 -131 439 -100 q 515 -190 439 -182 l 485 -254 m 181 493 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 q 833 638 857 568 q 763 762 808 708 q 656 847 718 815 q 519 879 594 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 z "},"Ø":{ha:1039,x_min:54,x_max:983,o:"m 921 986 l 835 858 q 944 688 906 785 q 983 492 983 592 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 q 397 9 454 -7 q 292 56 340 25 l 254 0 l 118 0 l 203 126 q 93 293 132 197 q 54 493 54 389 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 640 976 583 993 q 744 929 696 960 l 783 986 l 921 986 m 857 493 q 833 636 857 568 q 767 757 810 704 l 356 151 q 519 106 429 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 m 181 493 q 203 349 181 418 q 271 226 226 279 l 681 833 q 519 879 607 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 z "},"/":{ha:879,x_min:38,x_max:840,o:"m 840 986 l 174 0 l 38 0 l 703 986 l 840 986 z "},"Ǿ":{ha:1039,x_min:54,x_max:983,o:"m 921 986 l 835 858 q 944 688 906 785 q 983 492 983 592 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 q 397 9 454 -7 q 292 56 340 25 l 254 0 l 118 0 l 203 126 q 93 293 132 197 q 54 493 54 389 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 640 976 583 993 q 744 929 696 960 l 783 986 l 921 986 m 857 493 q 833 636 857 568 q 767 757 810 704 l 356 151 q 519 106 429 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 m 181 493 q 203 349 181 418 q 271 226 226 279 l 681 833 q 519 879 607 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 m 542 1104 l 461 1132 l 542 1272 l 664 1272 l 542 1104 z "},"Õ":{ha:1039,x_min:54,x_max:983,o:"m 518 -7 q 328 35 414 -7 q 182 148 243 78 q 88 308 121 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 m 181 493 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 q 833 638 857 568 q 763 762 808 708 q 656 847 718 815 q 519 879 594 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 m 607 1129 q 552 1138 575 1129 q 509 1158 529 1147 q 469 1178 489 1169 q 428 1188 450 1188 q 391 1178 404 1188 q 371 1156 378 1168 q 362 1133 364 1144 q 360 1121 360 1122 l 288 1121 q 294 1153 288 1129 q 315 1201 300 1176 q 357 1245 331 1226 q 425 1264 383 1264 q 476 1255 454 1264 q 519 1234 499 1246 q 559 1213 539 1222 q 604 1204 579 1204 q 646 1214 631 1204 q 669 1236 661 1224 q 680 1259 678 1249 q 682 1272 682 1269 l 754 1272 q 748 1241 754 1264 q 725 1193 742 1218 q 680 1149 708 1168 q 607 1129 651 1129 z "},P:{ha:865,x_min:118,x_max:828,o:"m 118 0 l 118 986 l 529 986 q 649 959 594 986 q 744 887 704 932 q 806 785 783 842 q 828 671 828 729 q 807 553 828 610 q 748 451 786 496 q 656 381 710 407 q 538 354 603 354 l 243 354 l 243 0 l 118 0 m 243 465 l 531 465 q 601 481 569 465 q 654 526 632 497 q 689 592 676 554 q 701 671 701 629 q 687 751 701 714 q 648 817 672 789 q 591 860 624 844 q 522 875 558 875 l 243 875 l 243 465 z "},Q:{ha:1036,x_min:54,x_max:983,o:"m 782 81 q 660 17 726 40 q 518 -7 593 -7 q 328 36 414 -7 q 182 149 243 79 q 88 308 121 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 948 302 983 392 q 850 143 913 213 l 974 0 l 851 0 l 782 81 m 519 106 q 621 122 574 106 q 707 168 668 139 l 575 322 l 697 322 l 772 235 q 835 356 813 289 q 857 493 857 422 q 833 638 857 568 q 763 763 808 708 q 656 849 718 817 q 519 881 594 881 q 378 847 440 881 q 272 759 315 814 q 204 635 228 704 q 181 493 181 565 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 z "},R:{ha:913,x_min:118,x_max:871,o:"m 118 0 l 118 986 l 540 986 q 660 959 606 986 q 755 887 715 932 q 817 785 794 842 q 839 671 839 729 q 824 572 839 619 q 783 485 810 524 q 717 418 756 446 q 632 378 679 390 l 871 0 l 729 0 l 504 354 l 243 354 l 243 0 l 118 0 m 243 465 l 542 465 q 612 482 581 465 q 665 527 643 499 q 700 593 688 556 q 713 671 713 631 q 698 749 713 713 q 659 815 683 786 q 602 859 635 843 q 533 875 569 875 l 243 875 l 243 465 z "},"Ŕ":{ha:913,x_min:118,x_max:871,o:"m 464 1107 l 383 1135 l 464 1275 l 586 1275 l 464 1107 m 118 0 l 118 986 l 540 986 q 660 959 606 986 q 755 887 715 932 q 817 785 794 842 q 839 671 839 729 q 824 572 839 619 q 783 485 810 524 q 717 418 756 446 q 632 378 679 390 l 871 0 l 729 0 l 504 354 l 243 354 l 243 0 l 118 0 m 243 465 l 542 465 q 612 482 581 465 q 665 527 643 499 q 700 593 688 556 q 713 671 713 631 q 698 749 713 713 q 659 815 683 786 q 602 859 635 843 q 533 875 569 875 l 243 875 l 243 465 z "},"Ř":{ha:913,x_min:118,x_max:871,o:"m 324 1275 l 442 1188 l 560 1275 l 626 1242 l 486 1117 l 397 1117 l 257 1242 l 324 1275 m 118 0 l 118 986 l 540 986 q 660 959 606 986 q 755 887 715 932 q 817 785 794 842 q 839 671 839 729 q 824 572 839 619 q 783 485 810 524 q 717 418 756 446 q 632 378 679 390 l 871 0 l 729 0 l 504 354 l 243 354 l 243 0 l 118 0 m 243 465 l 542 465 q 612 482 581 465 q 665 527 643 499 q 700 593 688 556 q 713 671 713 631 q 698 749 713 713 q 659 815 683 786 q 602 859 635 843 q 533 875 569 875 l 243 875 l 243 465 z "},"Ŗ":{ha:913,x_min:118,x_max:871,o:"m 410 -296 l 438 -183 l 403 -183 l 403 -67 l 511 -67 l 511 -183 l 469 -296 l 410 -296 m 118 0 l 118 986 l 540 986 q 660 959 606 986 q 755 887 715 932 q 817 785 794 842 q 839 671 839 729 q 824 572 839 619 q 783 485 810 524 q 717 418 756 446 q 632 378 679 390 l 871 0 l 729 0 l 504 354 l 243 354 l 243 0 l 118 0 m 243 465 l 542 465 q 612 482 581 465 q 665 527 643 499 q 700 593 688 556 q 713 671 713 631 q 698 749 713 713 q 659 815 683 786 q 602 859 635 843 q 533 875 569 875 l 243 875 l 243 465 z "},S:{ha:846,x_min:40,x_max:800,o:"m 697 779 q 653 817 681 799 q 590 849 625 835 q 515 873 556 864 q 429 882 474 882 q 260 839 314 882 q 207 721 207 796 q 222 654 207 681 q 270 609 238 628 q 351 576 303 590 q 467 547 400 563 q 605 509 543 531 q 710 456 667 488 q 777 378 754 424 q 800 265 800 332 q 772 142 800 194 q 697 56 744 90 q 583 6 649 22 q 442 -10 518 -10 q 226 26 328 -10 q 40 129 124 61 l 100 235 q 158 188 122 211 q 238 145 193 164 q 335 115 283 126 q 444 103 388 103 q 608 140 550 103 q 667 253 667 178 q 648 323 667 294 q 593 372 629 351 q 503 409 557 393 q 382 442 450 425 q 250 481 307 460 q 155 531 193 501 q 97 601 117 560 q 78 701 78 643 q 104 826 78 772 q 178 918 131 881 q 290 974 225 956 q 432 993 356 993 q 613 963 532 993 q 756 881 693 932 l 697 779 z "},"Ś":{ha:846,x_min:40,x_max:800,o:"m 460 1124 l 379 1151 l 460 1292 l 582 1292 l 460 1124 m 697 779 q 653 817 681 799 q 590 849 625 835 q 515 873 556 864 q 429 882 474 882 q 260 839 314 882 q 207 721 207 796 q 222 654 207 681 q 270 609 238 628 q 351 576 303 590 q 467 547 400 563 q 605 509 543 531 q 710 456 667 488 q 777 378 754 424 q 800 265 800 332 q 772 142 800 194 q 697 56 744 90 q 583 6 649 22 q 442 -10 518 -10 q 226 26 328 -10 q 40 129 124 61 l 100 235 q 158 188 122 211 q 238 145 193 164 q 335 115 283 126 q 444 103 388 103 q 608 140 550 103 q 667 253 667 178 q 648 323 667 294 q 593 372 629 351 q 503 409 557 393 q 382 442 450 425 q 250 481 307 460 q 155 531 193 501 q 97 601 117 560 q 78 701 78 643 q 104 826 78 772 q 178 918 131 881 q 290 974 225 956 q 432 993 356 993 q 613 963 532 993 q 756 881 693 932 l 697 779 z "},"Š":{ha:846,x_min:40,x_max:800,o:"m 321 1292 l 439 1204 l 557 1292 l 624 1258 l 483 1133 l 394 1133 l 254 1258 l 321 1292 m 697 779 q 653 817 681 799 q 590 849 625 835 q 515 873 556 864 q 429 882 474 882 q 260 839 314 882 q 207 721 207 796 q 222 654 207 681 q 270 609 238 628 q 351 576 303 590 q 467 547 400 563 q 605 509 543 531 q 710 456 667 488 q 777 378 754 424 q 800 265 800 332 q 772 142 800 194 q 697 56 744 90 q 583 6 649 22 q 442 -10 518 -10 q 226 26 328 -10 q 40 129 124 61 l 100 235 q 158 188 122 211 q 238 145 193 164 q 335 115 283 126 q 444 103 388 103 q 608 140 550 103 q 667 253 667 178 q 648 323 667 294 q 593 372 629 351 q 503 409 557 393 q 382 442 450 425 q 250 481 307 460 q 155 531 193 501 q 97 601 117 560 q 78 701 78 643 q 104 826 78 772 q 178 918 131 881 q 290 974 225 956 q 432 993 356 993 q 613 963 532 993 q 756 881 693 932 l 697 779 z "},"Ŝ":{ha:846,x_min:40,x_max:800,o:"m 254 1167 l 394 1292 l 483 1292 l 624 1167 l 557 1133 l 439 1221 l 321 1133 l 254 1167 m 697 779 q 653 817 681 799 q 590 849 625 835 q 515 873 556 864 q 429 882 474 882 q 260 839 314 882 q 207 721 207 796 q 222 654 207 681 q 270 609 238 628 q 351 576 303 590 q 467 547 400 563 q 605 509 543 531 q 710 456 667 488 q 777 378 754 424 q 800 265 800 332 q 772 142 800 194 q 697 56 744 90 q 583 6 649 22 q 442 -10 518 -10 q 226 26 328 -10 q 40 129 124 61 l 100 235 q 158 188 122 211 q 238 145 193 164 q 335 115 283 126 q 444 103 388 103 q 608 140 550 103 q 667 253 667 178 q 648 323 667 294 q 593 372 629 351 q 503 409 557 393 q 382 442 450 425 q 250 481 307 460 q 155 531 193 501 q 97 601 117 560 q 78 701 78 643 q 104 826 78 772 q 178 918 131 881 q 290 974 225 956 q 432 993 356 993 q 613 963 532 993 q 756 881 693 932 l 697 779 z "},T:{ha:853,x_min:24,x_max:829,o:"m 829 875 l 489 875 l 489 0 l 364 0 l 364 875 l 24 875 l 24 986 l 829 986 l 829 875 z "},"Ŧ":{ha:892,x_min:43,x_max:849,o:"m 849 875 l 508 875 l 508 551 l 801 551 l 801 486 l 508 486 l 508 0 l 383 0 l 383 486 l 90 486 l 90 551 l 383 551 l 383 875 l 43 875 l 43 986 l 849 986 l 849 875 z "},"Ť":{ha:853,x_min:24,x_max:829,o:"m 313 1272 l 431 1185 l 549 1272 l 615 1239 l 475 1114 l 386 1114 l 246 1239 l 313 1272 m 829 875 l 489 875 l 489 0 l 364 0 l 364 875 l 24 875 l 24 986 l 829 986 l 829 875 z "},"Þ":{ha:839,x_min:118,x_max:803,o:"m 504 796 q 624 769 569 796 q 719 697 679 742 q 781 595 758 651 q 803 481 803 539 q 782 362 803 419 q 723 260 761 304 q 631 190 685 217 q 513 164 578 164 l 243 164 l 243 0 l 118 0 l 118 986 l 243 986 l 243 796 l 504 796 m 507 275 q 578 292 546 275 q 632 338 610 310 q 666 403 654 367 q 678 481 678 440 q 663 559 678 522 q 624 624 649 596 q 567 669 600 653 q 499 685 535 685 l 243 685 l 243 275 l 507 275 z "},U:{ha:1049,x_min:104,x_max:944,o:"m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 922 298 944 388 q 849 140 899 208 q 719 33 799 72 q 525 -7 639 -7 q 326 35 407 -7 q 197 145 246 76 q 126 303 147 214 q 104 488 104 393 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 z "},"Ú":{ha:1049,x_min:104,x_max:944,o:"m 546 1104 l 465 1132 l 546 1272 l 668 1272 l 546 1104 m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 922 298 944 388 q 849 140 899 208 q 719 33 799 72 q 525 -7 639 -7 q 326 35 407 -7 q 197 145 246 76 q 126 303 147 214 q 104 488 104 393 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 z "},"Ŭ":{ha:1049,x_min:104,x_max:944,o:"m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 922 298 944 388 q 849 140 899 208 q 719 33 799 72 q 525 -7 639 -7 q 326 35 407 -7 q 197 145 246 76 q 126 303 147 214 q 104 488 104 393 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 m 525 1178 q 578 1205 556 1178 q 606 1272 601 1232 l 675 1272 q 663 1211 675 1239 q 631 1163 651 1183 q 584 1130 611 1142 q 525 1118 557 1118 q 466 1130 493 1118 q 419 1163 439 1142 q 387 1211 399 1183 q 375 1272 375 1239 l 446 1272 q 469 1206 446 1235 q 525 1178 493 1178 z "},"Û":{ha:1049,x_min:104,x_max:944,o:"m 340 1147 l 481 1272 l 569 1272 l 710 1147 l 643 1114 l 525 1201 l 407 1114 l 340 1147 m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 922 298 944 388 q 849 140 899 208 q 719 33 799 72 q 525 -7 639 -7 q 326 35 407 -7 q 197 145 246 76 q 126 303 147 214 q 104 488 104 393 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 z "},"Ü":{ha:1049,x_min:104,x_max:944,o:"m 361 1126 l 361 1268 l 464 1268 l 464 1126 l 361 1126 m 586 1126 l 586 1268 l 689 1268 l 689 1126 l 586 1126 m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 922 298 944 388 q 849 140 899 208 q 719 33 799 72 q 525 -7 639 -7 q 326 35 407 -7 q 197 145 246 76 q 126 303 147 214 q 104 488 104 393 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 z "},"Ù":{ha:1049,x_min:104,x_max:944,o:"m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 922 298 944 388 q 849 140 899 208 q 719 33 799 72 q 525 -7 639 -7 q 326 35 407 -7 q 197 145 246 76 q 126 303 147 214 q 104 488 104 393 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 m 381 1274 l 501 1274 l 583 1133 l 504 1106 l 381 1274 z "},"Ű":{ha:1049,x_min:104,x_max:944,o:"m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 922 298 944 388 q 849 140 899 208 q 719 33 799 72 q 525 -7 639 -7 q 326 35 407 -7 q 197 145 246 76 q 126 303 147 214 q 104 488 104 393 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 m 436 1106 l 372 1133 l 447 1274 l 553 1274 l 436 1106 m 625 1106 l 561 1133 l 636 1274 l 742 1274 l 625 1106 z "},"Ū":{ha:1049,x_min:104,x_max:944,o:"m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 922 298 944 388 q 849 140 899 208 q 719 33 799 72 q 525 -7 639 -7 q 326 35 407 -7 q 197 145 246 76 q 126 303 147 214 q 104 488 104 393 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 m 322 1167 l 322 1247 l 728 1247 l 728 1167 l 322 1167 z "},"Ų":{ha:1049,x_min:104,x_max:944,o:"m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 923 303 944 390 q 854 149 901 215 q 732 40 807 82 q 551 -6 657 -1 q 469 -71 493 -42 q 444 -131 444 -100 q 521 -190 444 -182 l 490 -254 q 403 -215 432 -243 q 374 -147 374 -186 q 399 -76 374 -111 q 478 -4 424 -40 q 302 48 374 4 q 187 160 231 92 q 124 313 143 228 q 104 488 104 397 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 z "},"Ů":{ha:1049,x_min:104,x_max:944,o:"m 411 1176 q 443 1247 411 1221 q 524 1272 475 1272 q 605 1247 574 1272 q 636 1176 636 1221 q 605 1106 636 1132 q 524 1081 574 1081 q 443 1106 475 1081 q 411 1176 411 1132 m 524 1229 q 484 1215 500 1229 q 468 1176 468 1200 q 484 1139 468 1154 q 524 1124 500 1124 q 563 1138 546 1124 q 581 1176 581 1153 q 564 1215 581 1200 q 524 1229 547 1229 m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 922 298 944 388 q 849 140 899 208 q 719 33 799 72 q 525 -7 639 -7 q 326 35 407 -7 q 197 145 246 76 q 126 303 147 214 q 104 488 104 393 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 z "},"Ũ":{ha:1049,x_min:104,x_max:944,o:"m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 922 298 944 388 q 849 140 899 208 q 719 33 799 72 q 525 -7 639 -7 q 326 35 407 -7 q 197 145 246 76 q 126 303 147 214 q 104 488 104 393 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 m 611 1129 q 556 1138 579 1129 q 513 1158 533 1147 q 474 1178 493 1169 q 432 1188 454 1188 q 395 1178 408 1188 q 375 1156 382 1168 q 366 1133 368 1144 q 364 1121 364 1122 l 292 1121 q 298 1153 292 1129 q 319 1201 304 1176 q 361 1245 335 1226 q 429 1264 388 1264 q 481 1255 458 1264 q 523 1234 503 1246 q 563 1213 543 1222 q 608 1204 583 1204 q 650 1214 635 1204 q 674 1236 665 1224 q 684 1259 682 1249 q 686 1272 686 1269 l 758 1272 q 752 1241 758 1264 q 729 1193 746 1218 q 684 1149 713 1168 q 611 1129 656 1129 z "},V:{ha:944,x_min:14,x_max:929,o:"m 146 986 l 472 157 l 797 986 l 929 986 l 526 0 l 418 0 l 14 986 l 146 986 z "},W:{ha:1457,x_min:13,x_max:1446,o:"m 479 981 l 597 981 l 728 638 l 860 981 l 978 981 l 807 551 l 976 144 l 1310 986 l 1446 986 l 1033 0 l 925 0 l 729 465 l 532 0 l 424 0 l 13 986 l 147 986 l 482 144 l 650 551 l 479 981 z "},"Ẃ":{ha:1457,x_min:13,x_max:1446,o:"m 749 1104 l 668 1132 l 749 1272 l 871 1272 l 749 1104 m 479 981 l 597 981 l 728 638 l 860 981 l 978 981 l 807 551 l 976 144 l 1310 986 l 1446 986 l 1033 0 l 925 0 l 729 465 l 532 0 l 424 0 l 13 986 l 147 986 l 482 144 l 650 551 l 479 981 z "},"Ŵ":{ha:1457,x_min:13,x_max:1446,o:"m 543 1147 l 683 1272 l 772 1272 l 913 1147 l 846 1114 l 728 1201 l 610 1114 l 543 1147 m 479 981 l 597 981 l 728 638 l 860 981 l 978 981 l 807 551 l 976 144 l 1310 986 l 1446 986 l 1033 0 l 925 0 l 729 465 l 532 0 l 424 0 l 13 986 l 147 986 l 482 144 l 650 551 l 479 981 z "},"Ẅ":{ha:1457,x_min:13,x_max:1446,o:"m 564 1126 l 564 1268 l 667 1268 l 667 1126 l 564 1126 m 789 1126 l 789 1268 l 892 1268 l 892 1126 l 789 1126 m 479 981 l 597 981 l 728 638 l 860 981 l 978 981 l 807 551 l 976 144 l 1310 986 l 1446 986 l 1033 0 l 925 0 l 729 465 l 532 0 l 424 0 l 13 986 l 147 986 l 482 144 l 650 551 l 479 981 z "},"Ẁ":{ha:1457,x_min:13,x_max:1446,o:"m 479 981 l 597 981 l 728 638 l 860 981 l 978 981 l 807 551 l 976 144 l 1310 986 l 1446 986 l 1033 0 l 925 0 l 729 465 l 532 0 l 424 0 l 13 986 l 147 986 l 482 144 l 650 551 l 479 981 m 583 1274 l 704 1274 l 786 1133 l 707 1106 l 583 1274 z "},X:{ha:885,x_min:4,x_max:881,o:"m 143 986 l 443 575 l 743 986 l 881 986 l 510 486 l 869 0 l 732 0 l 443 397 l 154 0 l 15 0 l 375 486 l 4 986 l 143 986 z "},Y:{ha:910,x_min:18,x_max:892,o:"m 156 986 l 454 472 l 756 986 l 892 986 l 517 360 l 517 0 l 392 0 l 392 363 l 18 986 l 156 986 z "},"Ý":{ha:910,x_min:18,x_max:892,o:"m 156 986 l 454 472 l 756 986 l 892 986 l 517 360 l 517 0 l 392 0 l 392 363 l 18 986 l 156 986 m 475 1104 l 394 1132 l 475 1272 l 597 1272 l 475 1104 z "},"Ŷ":{ha:910,x_min:18,x_max:892,o:"m 156 986 l 454 472 l 756 986 l 892 986 l 517 360 l 517 0 l 392 0 l 392 363 l 18 986 l 156 986 m 269 1147 l 410 1272 l 499 1272 l 639 1147 l 572 1114 l 454 1201 l 336 1114 l 269 1147 z "},"Ÿ":{ha:910,x_min:18,x_max:892,o:"m 156 986 l 454 472 l 756 986 l 892 986 l 517 360 l 517 0 l 392 0 l 392 363 l 18 986 l 156 986 m 290 1126 l 290 1268 l 393 1268 l 393 1126 l 290 1126 m 515 1126 l 515 1268 l 618 1268 l 618 1126 l 515 1126 z "},"Ỳ":{ha:910,x_min:18,x_max:892,o:"m 156 986 l 454 472 l 756 986 l 892 986 l 517 360 l 517 0 l 392 0 l 392 363 l 18 986 l 156 986 m 310 1274 l 431 1274 l 513 1133 l 433 1106 l 310 1274 z "},"Ỹ":{ha:910,x_min:18,x_max:892,o:"m 156 986 l 454 472 l 756 986 l 892 986 l 517 360 l 517 0 l 392 0 l 392 363 l 18 986 l 156 986 m 540 1129 q 485 1138 508 1129 q 442 1158 463 1147 q 403 1178 422 1169 q 361 1188 383 1188 q 324 1178 338 1188 q 304 1156 311 1168 q 295 1133 297 1144 q 293 1121 293 1122 l 221 1121 q 227 1153 221 1129 q 249 1201 233 1176 q 290 1245 264 1226 q 358 1264 317 1264 q 410 1255 388 1264 q 452 1234 432 1246 q 492 1213 472 1222 q 538 1204 513 1204 q 579 1214 564 1204 q 603 1236 594 1224 q 613 1259 611 1249 q 615 1272 615 1269 l 688 1272 q 681 1241 688 1264 q 658 1193 675 1218 q 613 1149 642 1168 q 540 1129 585 1129 z "},Z:{ha:876,x_min:44,x_max:826,o:"m 44 97 l 681 875 l 57 875 l 57 986 l 826 986 l 826 889 l 201 111 l 826 111 l 826 0 l 44 0 l 44 97 z "},"Ź":{ha:876,x_min:44,x_max:826,o:"m 481 1104 l 400 1132 l 481 1272 l 603 1272 l 481 1104 m 44 97 l 681 875 l 57 875 l 57 986 l 826 986 l 826 889 l 201 111 l 826 111 l 826 0 l 44 0 l 44 97 z "},"Ž":{ha:876,x_min:44,x_max:826,o:"m 342 1272 l 460 1185 l 578 1272 l 644 1239 l 504 1114 l 415 1114 l 275 1239 l 342 1272 m 44 97 l 681 875 l 57 875 l 57 986 l 826 986 l 826 889 l 201 111 l 826 111 l 826 0 l 44 0 l 44 97 z "},"Ż":{ha:876,x_min:44,x_max:826,o:"m 44 97 l 681 875 l 57 875 l 57 986 l 826 986 l 826 889 l 201 111 l 826 111 l 826 0 l 44 0 l 44 97 m 404 1125 l 404 1272 l 515 1272 l 515 1125 l 404 1125 z "},a:{ha:769,x_min:42,x_max:711,o:"m 285 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 679 -4 692 -3 q 653 -6 667 -6 q 595 16 617 -6 q 569 68 574 38 l 567 119 q 444 20 518 54 q 285 -14 369 -14 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 z "},"á":{ha:769,x_min:42,x_max:711,o:"m 285 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 679 -4 692 -3 q 653 -6 667 -6 q 595 16 617 -6 q 569 68 574 38 l 567 119 q 444 20 518 54 q 285 -14 369 -14 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 m 390 846 l 310 874 l 390 1014 l 513 1014 l 390 846 z "},"ă":{ha:769,x_min:42,x_max:711,o:"m 285 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 679 -4 692 -3 q 653 -6 667 -6 q 595 16 617 -6 q 569 68 574 38 l 567 119 q 444 20 518 54 q 285 -14 369 -14 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 m 369 919 q 423 947 400 919 q 450 1014 446 974 l 519 1014 q 508 953 519 981 q 476 904 496 925 q 428 872 456 883 q 369 860 401 860 q 310 872 338 860 q 263 904 283 883 q 231 953 243 925 q 219 1014 219 981 l 290 1014 q 314 948 290 976 q 369 919 338 919 z "},"â":{ha:769,x_min:42,x_max:711,o:"m 285 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 679 -4 692 -3 q 653 -6 667 -6 q 595 16 617 -6 q 569 68 574 38 l 567 119 q 444 20 518 54 q 285 -14 369 -14 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 m 185 889 l 325 1014 l 414 1014 l 554 889 l 488 856 l 369 943 l 251 856 l 185 889 z "},"ä":{ha:769,x_min:42,x_max:711,o:"m 285 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 679 -4 692 -3 q 653 -6 667 -6 q 595 16 617 -6 q 569 68 574 38 l 567 119 q 444 20 518 54 q 285 -14 369 -14 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 m 206 867 l 206 1008 l 308 1008 l 308 867 l 206 867 m 431 867 l 431 1008 l 533 1008 l 533 867 l 431 867 z "},"æ":{ha:1296,x_min:42,x_max:1258,o:"m 283 -14 q 188 3 232 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 126 374 86 344 q 223 419 167 403 q 346 436 279 436 q 440 428 393 436 q 525 408 486 421 q 532 456 528 431 q 544 500 536 481 q 485 610 533 571 q 357 649 438 649 q 126 564 249 649 l 86 643 q 368 738 229 738 q 521 703 457 738 q 619 606 585 668 q 735 701 665 665 q 890 738 804 738 q 1040 708 972 738 q 1156 626 1108 678 q 1231 507 1204 575 q 1258 363 1258 439 q 1258 341 1258 354 q 1256 321 1257 328 l 640 321 q 667 222 644 267 q 724 146 689 178 q 803 96 758 114 q 899 78 849 78 q 964 87 932 78 q 1024 111 996 96 q 1073 149 1051 126 q 1106 199 1094 171 l 1211 169 q 1162 96 1193 129 q 1090 38 1131 63 q 999 0 1049 14 q 894 -14 949 -14 q 718 29 796 -14 q 592 143 640 72 q 532 72 568 101 q 454 23 496 42 q 368 -5 413 4 q 283 -14 324 -14 m 315 78 q 438 102 382 78 q 524 167 493 126 q 550 215 547 190 q 533 274 539 239 q 525 336 526 310 q 446 356 488 349 q 364 363 404 363 q 215 324 272 363 q 157 222 157 285 q 169 165 157 192 q 203 119 182 139 q 253 89 224 100 q 315 78 282 78 m 1142 400 q 1117 499 1138 454 q 1063 577 1096 544 q 985 628 1029 610 q 889 646 940 646 q 793 628 838 646 q 715 577 749 610 q 662 499 682 544 q 639 400 642 454 l 1142 400 z "},"ǽ":{ha:1296,x_min:42,x_max:1258,o:"m 639 846 l 558 874 l 639 1014 l 761 1014 l 639 846 m 283 -14 q 188 3 232 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 126 374 86 344 q 223 419 167 403 q 346 436 279 436 q 440 428 393 436 q 525 408 486 421 q 532 456 528 431 q 544 500 536 481 q 485 610 533 571 q 357 649 438 649 q 126 564 249 649 l 86 643 q 368 738 229 738 q 521 703 457 738 q 619 606 585 668 q 735 701 665 665 q 890 738 804 738 q 1040 708 972 738 q 1156 626 1108 678 q 1231 507 1204 575 q 1258 363 1258 439 q 1258 341 1258 354 q 1256 321 1257 328 l 640 321 q 667 222 644 267 q 724 146 689 178 q 803 96 758 114 q 899 78 849 78 q 964 87 932 78 q 1024 111 996 96 q 1073 149 1051 126 q 1106 199 1094 171 l 1211 169 q 1162 96 1193 129 q 1090 38 1131 63 q 999 0 1049 14 q 894 -14 949 -14 q 718 29 796 -14 q 592 143 640 72 q 532 72 568 101 q 454 23 496 42 q 368 -5 413 4 q 283 -14 324 -14 m 315 78 q 438 102 382 78 q 524 167 493 126 q 550 215 547 190 q 533 274 539 239 q 525 336 526 310 q 446 356 488 349 q 364 363 404 363 q 215 324 272 363 q 157 222 157 285 q 169 165 157 192 q 203 119 182 139 q 253 89 224 100 q 315 78 282 78 m 1142 400 q 1117 499 1138 454 q 1063 577 1096 544 q 985 628 1029 610 q 889 646 940 646 q 793 628 838 646 q 715 577 749 610 q 662 499 682 544 q 639 400 642 454 l 1142 400 z "},"à":{ha:769,x_min:42,x_max:711,o:"m 285 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 679 -4 692 -3 q 653 -6 667 -6 q 595 16 617 -6 q 569 68 574 38 l 567 119 q 444 20 518 54 q 285 -14 369 -14 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 m 225 1014 l 346 1014 l 428 874 l 349 846 l 225 1014 z "},"ā":{ha:769,x_min:42,x_max:711,o:"m 285 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 679 -4 692 -3 q 653 -6 667 -6 q 595 16 617 -6 q 569 68 574 38 l 567 119 q 444 20 518 54 q 285 -14 369 -14 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 m 167 908 l 167 989 l 572 989 l 572 908 l 167 908 z "},"&":{ha:946,x_min:63,x_max:939,o:"m 778 0 l 675 107 q 541 17 615 49 q 382 -14 467 -14 q 256 7 314 -14 q 154 65 197 28 q 87 151 111 101 q 63 261 63 201 q 78 351 63 310 q 122 428 94 393 q 183 492 149 463 q 257 549 218 522 q 200 617 224 586 q 162 674 176 647 q 140 726 147 701 q 133 776 133 750 q 153 865 133 824 q 206 935 172 906 q 287 982 240 965 q 388 999 333 999 q 481 985 438 999 q 558 944 525 971 q 609 881 590 918 q 628 797 628 843 q 612 719 628 756 q 569 652 596 683 q 504 593 542 621 q 425 538 467 565 l 676 274 q 717 383 703 324 q 732 508 732 442 l 833 508 q 810 340 832 418 q 749 199 789 263 l 939 0 l 778 0 m 394 83 q 511 108 457 83 q 608 178 565 133 l 328 474 q 222 376 263 426 q 181 260 181 325 q 199 185 181 218 q 247 129 217 151 q 315 95 276 107 q 394 83 353 83 m 246 779 q 251 749 246 764 q 267 716 256 735 q 300 672 279 697 q 354 611 321 646 q 471 699 426 657 q 515 794 515 742 q 479 874 515 843 q 388 906 443 906 q 285 869 325 906 q 246 779 246 832 z "},"ą":{ha:769,x_min:42,x_max:711,o:"m 643 -251 q 556 -212 585 -240 q 526 -144 526 -183 q 551 -74 526 -108 q 629 -3 576 -39 q 588 24 603 4 q 569 68 572 43 l 567 119 q 444 20 518 54 q 285 -14 369 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 624 -67 650 -37 q 597 -128 597 -97 q 674 -187 597 -179 l 643 -251 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 z "},"ʼ":{ha:754,x_min:289,x_max:492,o:"m 368 846 l 289 874 l 340 961 l 336 1014 l 492 1014 l 368 846 z "},"å":{ha:769,x_min:42,x_max:711,o:"m 285 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 679 -4 692 -3 q 653 -6 667 -6 q 595 16 617 -6 q 569 68 574 38 l 567 119 q 444 20 518 54 q 285 -14 369 -14 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 m 256 918 q 288 988 256 963 q 368 1014 319 1014 q 449 988 418 1014 q 481 918 481 963 q 449 848 481 874 q 368 822 418 822 q 288 848 319 822 q 256 918 256 874 m 368 971 q 328 956 344 971 q 313 918 313 942 q 328 881 313 896 q 368 865 344 865 q 408 880 390 865 q 425 918 425 894 q 408 956 425 942 q 368 971 392 971 z "},"ǻ":{ha:769,x_min:42,x_max:711,o:"m 285 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 679 -4 692 -3 q 653 -6 667 -6 q 595 16 617 -6 q 569 68 574 38 l 567 119 q 444 20 518 54 q 285 -14 369 -14 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 m 390 1063 l 310 1090 l 390 1231 l 513 1231 l 390 1063 m 256 918 q 288 988 256 963 q 368 1014 319 1014 q 449 988 418 1014 q 481 918 481 963 q 449 848 481 874 q 368 822 418 822 q 288 848 319 822 q 256 918 256 874 m 368 971 q 328 956 344 971 q 313 918 313 942 q 328 881 313 896 q 368 865 344 865 q 408 880 390 865 q 425 918 425 894 q 408 956 425 942 q 368 971 392 971 z "},"^":{ha:768,x_min:58,x_max:710,o:"m 58 421 l 333 986 l 436 986 l 710 421 l 606 421 l 385 876 l 160 421 l 58 421 z "},"~":{ha:739,x_min:90,x_max:650,o:"m 90 329 q 99 363 90 338 q 126 415 107 388 q 176 463 146 442 q 253 485 207 485 q 315 472 286 485 q 372 445 344 460 q 426 418 399 431 q 482 406 453 406 q 527 416 508 406 q 557 439 546 426 q 573 463 568 451 q 578 478 578 475 l 650 478 q 642 450 650 474 q 614 399 633 426 q 562 351 594 372 q 481 329 529 329 q 415 341 444 329 q 357 367 385 353 q 303 394 329 382 q 251 407 278 407 q 209 395 226 407 q 181 369 192 383 q 167 342 171 354 q 163 329 163 331 l 90 329 l 90 329 z "},"*":{ha:457,x_min:82,x_max:375,o:"m 117 747 l 178 838 l 82 868 l 100 926 l 197 889 l 193 992 l 264 992 l 260 889 l 357 926 l 375 868 l 279 838 l 342 747 l 289 713 l 229 806 l 168 713 l 117 747 z "},"@":{ha:1167,x_min:64,x_max:1092,o:"m 582 838 q 777 800 685 838 q 940 694 869 763 q 1051 527 1010 625 q 1092 308 1092 429 q 1090 256 1092 289 q 1081 188 1088 224 q 1060 114 1074 151 q 1024 46 1047 76 q 966 -3 1000 15 q 885 -22 932 -22 q 826 -12 849 -22 q 791 16 804 -1 q 772 56 778 33 q 764 101 767 78 q 663 31 724 60 q 528 3 601 3 q 372 56 426 3 q 317 192 317 110 q 340 283 317 246 q 400 343 363 321 q 484 375 438 365 q 576 385 531 385 q 681 373 636 385 q 747 353 725 361 q 740 437 747 399 q 713 502 732 475 q 662 544 694 529 q 579 560 629 560 q 475 542 524 560 q 388 496 426 525 l 360 564 q 467 616 410 597 q 590 635 525 635 q 718 608 671 635 q 789 540 765 582 q 819 448 813 499 q 825 349 825 397 l 825 183 q 827 126 825 153 q 836 81 829 100 q 858 50 843 61 q 896 39 872 39 q 964 68 938 39 q 1006 140 990 97 q 1028 228 1022 182 q 1033 311 1033 275 q 999 497 1033 411 q 904 646 965 582 q 760 746 843 710 q 579 782 676 782 q 400 747 483 782 q 255 651 317 713 q 158 505 193 590 q 122 319 122 419 q 156 138 122 222 q 249 -10 189 53 q 390 -110 308 -74 q 569 -147 472 -147 q 682 -133 632 -147 q 783 -94 732 -118 l 803 -147 q 687 -189 746 -175 q 568 -203 628 -203 q 372 -164 464 -203 q 212 -56 281 -125 q 103 110 143 14 q 64 319 64 206 q 107 535 64 439 q 222 698 150 631 q 387 801 293 765 q 582 838 481 838 m 661 106 q 731 166 715 131 q 746 238 746 201 l 746 289 q 683 306 728 292 q 575 319 638 319 q 507 313 539 319 q 450 292 475 307 q 410 255 425 278 q 396 197 396 232 q 433 110 396 144 q 533 75 471 75 q 601 84 567 75 q 661 106 635 93 z "},"ã":{ha:769,x_min:42,x_max:711,o:"m 285 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 679 -4 692 -3 q 653 -6 667 -6 q 595 16 617 -6 q 569 68 574 38 l 567 119 q 444 20 518 54 q 285 -14 369 -14 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 m 456 871 q 401 880 424 871 q 358 900 378 889 q 318 920 338 911 q 276 929 299 929 q 240 919 253 929 q 219 898 226 910 q 210 875 213 886 q 208 863 208 864 l 136 863 q 142 894 136 871 q 164 943 149 918 q 206 987 179 968 q 274 1006 232 1006 q 325 997 303 1006 q 367 976 347 988 q 408 955 388 964 q 453 946 428 946 q 494 956 479 946 q 518 978 510 965 q 528 1001 526 990 q 531 1014 531 1011 l 603 1014 q 597 983 603 1006 q 574 935 590 960 q 528 890 557 910 q 456 871 500 871 z "},b:{ha:865,x_min:99,x_max:814,o:"m 471 -14 q 317 28 386 -14 q 207 136 247 69 l 207 0 l 99 0 l 99 1014 l 221 1014 l 221 581 q 333 694 267 651 q 489 738 400 738 q 624 706 564 738 q 726 622 683 674 q 791 501 768 569 q 814 360 814 432 q 788 215 814 283 q 715 97 761 147 q 606 16 669 46 q 471 -14 543 -14 m 440 92 q 540 114 494 92 q 619 174 586 136 q 671 259 653 211 q 689 360 689 307 q 672 462 689 413 q 623 549 654 511 q 548 609 592 586 q 451 632 504 632 q 378 618 413 632 q 313 581 343 604 q 260 528 283 558 q 221 463 238 497 l 221 253 q 251 189 228 218 q 305 138 274 160 q 372 104 336 117 q 440 92 407 92 z "},"\\":{ha:819,x_min:39,x_max:781,o:"m 176 986 l 781 0 l 644 0 l 39 986 l 176 986 z "},"|":{ha:333,x_min:114,x_max:219,o:"m 114 -181 l 114 1076 l 219 1076 l 219 -181 l 114 -181 z "},"{":{ha:376,x_min:65,x_max:311,o:"m 235 928 l 235 589 q 226 544 235 569 q 194 500 217 519 q 225 456 215 481 q 235 411 235 431 l 235 57 l 311 57 l 311 -43 l 156 -43 q 134 -34 144 -43 q 124 -1 124 -25 l 124 375 q 108 429 124 406 q 65 457 92 453 l 65 546 q 90 554 79 546 q 109 575 101 563 q 120 601 117 588 q 124 625 124 614 l 124 986 q 136 1020 124 1013 q 156 1028 149 1028 l 311 1028 l 311 928 l 235 928 z "},"}":{ha:376,x_min:65,x_max:311,o:"m 65 928 l 65 1028 l 221 1028 q 240 1020 228 1028 q 253 986 253 1013 l 253 625 q 256 601 253 614 q 267 575 260 588 q 285 554 275 563 q 311 546 296 546 l 311 457 q 268 429 283 453 q 253 375 253 406 l 253 -1 q 242 -34 253 -25 q 221 -43 231 -43 l 65 -43 l 65 57 l 142 57 l 142 411 q 151 456 142 431 q 182 500 160 481 q 151 544 160 519 q 142 589 142 569 l 142 928 l 65 928 z "},"[":{ha:375,x_min:117,x_max:311,o:"m 117 -56 l 117 1028 l 311 1028 l 311 928 l 231 928 l 231 44 l 311 44 l 311 -56 l 117 -56 z "},"]":{ha:375,x_min:64,x_max:258,o:"m 64 -56 l 64 44 l 144 44 l 144 928 l 64 928 l 64 1028 l 258 1028 l 258 -56 l 64 -56 z "},"¦":{ha:336,x_min:115,x_max:221,o:"m 221 379 l 221 -181 l 115 -181 l 115 379 l 221 379 m 221 1076 l 221 517 l 115 517 l 115 1076 l 221 1076 z "},"•":{ha:494,x_min:117,x_max:378,o:"m 378 482 q 367 431 378 454 q 340 390 357 407 q 298 362 322 372 q 247 351 274 351 q 197 362 221 351 q 156 390 174 372 q 127 431 138 407 q 117 482 117 454 q 127 532 117 508 q 156 574 138 556 q 197 602 174 592 q 247 613 221 613 q 298 602 274 613 q 340 574 322 592 q 367 532 357 556 q 378 482 378 508 z "},c:{ha:769,x_min:50,x_max:729,o:"m 50 364 q 76 508 50 440 q 151 627 103 576 q 267 708 200 678 q 418 738 335 738 q 605 690 526 738 q 724 561 683 642 l 604 524 q 526 603 576 575 q 415 632 476 632 q 321 612 365 632 q 244 556 276 592 q 194 471 213 519 q 175 364 175 422 q 194 257 175 307 q 247 170 214 207 q 323 113 279 133 q 417 92 367 92 q 480 101 449 92 q 537 125 511 110 q 582 160 563 140 q 610 204 601 181 l 729 168 q 683 94 713 128 q 613 38 653 61 q 523 0 572 14 q 419 -14 474 -14 q 269 17 338 -14 q 153 99 201 47 q 77 219 104 150 q 50 364 50 288 z "},"ć":{ha:769,x_min:50,x_max:729,o:"m 438 846 l 357 874 l 438 1014 l 560 1014 l 438 846 m 50 364 q 76 508 50 440 q 151 627 103 576 q 267 708 200 678 q 418 738 335 738 q 605 690 526 738 q 724 561 683 642 l 604 524 q 526 603 576 575 q 415 632 476 632 q 321 612 365 632 q 244 556 276 592 q 194 471 213 519 q 175 364 175 422 q 194 257 175 307 q 247 170 214 207 q 323 113 279 133 q 417 92 367 92 q 480 101 449 92 q 537 125 511 110 q 582 160 563 140 q 610 204 601 181 l 729 168 q 683 94 713 128 q 613 38 653 61 q 523 0 572 14 q 419 -14 474 -14 q 269 17 338 -14 q 153 99 201 47 q 77 219 104 150 q 50 364 50 288 z "},"č":{ha:769,x_min:50,x_max:729,o:"m 299 1014 l 417 926 l 535 1014 l 601 981 l 461 856 l 372 856 l 232 981 l 299 1014 m 50 364 q 76 508 50 440 q 151 627 103 576 q 267 708 200 678 q 418 738 335 738 q 605 690 526 738 q 724 561 683 642 l 604 524 q 526 603 576 575 q 415 632 476 632 q 321 612 365 632 q 244 556 276 592 q 194 471 213 519 q 175 364 175 422 q 194 257 175 307 q 247 170 214 207 q 323 113 279 133 q 417 92 367 92 q 480 101 449 92 q 537 125 511 110 q 582 160 563 140 q 610 204 601 181 l 729 168 q 683 94 713 128 q 613 38 653 61 q 523 0 572 14 q 419 -14 474 -14 q 269 17 338 -14 q 153 99 201 47 q 77 219 104 150 q 50 364 50 288 z "},"ç":{ha:769,x_min:50,x_max:729,o:"m 311 -175 q 363 -193 329 -185 q 433 -201 397 -201 q 492 -190 471 -201 q 513 -153 513 -179 q 493 -115 513 -125 q 442 -104 474 -104 q 381 -110 413 -104 q 331 -122 349 -117 l 389 -12 q 251 25 314 -7 q 144 108 189 57 q 74 225 99 160 q 50 364 50 290 q 76 508 50 440 q 151 627 103 576 q 267 708 200 678 q 418 738 335 738 q 605 690 526 738 q 724 561 683 642 l 604 524 q 526 603 576 575 q 415 632 476 632 q 321 612 365 632 q 244 556 276 592 q 194 471 213 519 q 175 364 175 422 q 194 257 175 307 q 247 170 214 207 q 323 113 279 133 q 417 92 367 92 q 480 101 449 92 q 537 125 511 110 q 582 160 563 140 q 610 204 601 181 l 729 168 q 624 44 699 93 q 451 -12 550 -4 l 417 -67 q 442 -61 428 -62 q 467 -60 456 -60 q 546 -82 515 -60 q 576 -149 576 -104 q 538 -225 576 -197 q 424 -253 499 -253 q 347 -245 382 -253 q 283 -226 311 -237 l 311 -175 z "},"ĉ":{ha:769,x_min:50,x_max:729,o:"m 232 889 l 372 1014 l 461 1014 l 601 889 l 535 856 l 417 943 l 299 856 l 232 889 m 50 364 q 76 508 50 440 q 151 627 103 576 q 267 708 200 678 q 418 738 335 738 q 605 690 526 738 q 724 561 683 642 l 604 524 q 526 603 576 575 q 415 632 476 632 q 321 612 365 632 q 244 556 276 592 q 194 471 213 519 q 175 364 175 422 q 194 257 175 307 q 247 170 214 207 q 323 113 279 133 q 417 92 367 92 q 480 101 449 92 q 537 125 511 110 q 582 160 563 140 q 610 204 601 181 l 729 168 q 683 94 713 128 q 613 38 653 61 q 523 0 572 14 q 419 -14 474 -14 q 269 17 338 -14 q 153 99 201 47 q 77 219 104 150 q 50 364 50 288 z "},"ċ":{ha:769,x_min:50,x_max:729,o:"m 50 364 q 76 508 50 440 q 151 627 103 576 q 267 708 200 678 q 418 738 335 738 q 605 690 526 738 q 724 561 683 642 l 604 524 q 526 603 576 575 q 415 632 476 632 q 321 612 365 632 q 244 556 276 592 q 194 471 213 519 q 175 364 175 422 q 194 257 175 307 q 247 170 214 207 q 323 113 279 133 q 417 92 367 92 q 480 101 449 92 q 537 125 511 110 q 582 160 563 140 q 610 204 601 181 l 729 168 q 683 94 713 128 q 613 38 653 61 q 523 0 572 14 q 419 -14 474 -14 q 269 17 338 -14 q 153 99 201 47 q 77 219 104 150 q 50 364 50 288 m 361 867 l 361 1014 l 472 1014 l 472 867 l 361 867 z "},"¢":{ha:792,x_min:58,x_max:739,o:"m 383 -167 l 383 -12 q 253 27 313 -7 q 150 113 193 61 q 83 228 107 164 q 58 358 58 292 q 81 494 58 429 q 144 609 103 558 q 247 694 186 660 q 383 736 307 728 l 383 896 l 444 896 l 444 736 q 619 688 546 733 q 732 561 692 642 l 614 524 q 542 599 586 574 q 444 628 497 625 l 444 94 q 497 105 469 96 q 549 128 524 114 q 593 161 574 142 q 619 204 613 181 l 739 168 q 687 88 721 122 q 611 31 653 54 q 526 -3 569 8 q 444 -14 482 -14 l 444 -167 l 383 -167 m 183 358 q 198 269 183 313 q 240 192 213 226 q 303 133 267 157 q 383 100 339 108 l 383 624 q 299 593 336 618 q 235 531 261 568 q 197 449 210 494 q 183 358 183 404 z "},":":{ha:279,x_min:89,x_max:190,o:"m 89 564 l 89 719 l 190 719 l 190 564 l 89 564 m 89 0 l 89 156 l 190 156 l 190 0 l 89 0 z "},",":{ha:293,x_min:89,x_max:204,o:"m 103 -112 l 131 11 l 89 11 l 89 156 l 204 156 l 204 11 l 163 -112 l 103 -112 z "},"©":{ha:1161,x_min:65,x_max:1096,o:"m 578 -10 q 373 28 467 -10 q 211 134 279 67 q 104 293 143 201 q 65 493 65 385 q 104 692 65 600 q 211 850 143 783 q 373 955 279 917 q 578 993 467 993 q 784 955 689 993 q 949 850 879 917 q 1057 692 1018 783 q 1096 493 1096 600 q 1057 293 1096 385 q 949 134 1018 201 q 784 28 879 67 q 578 -10 689 -10 m 578 43 q 759 76 675 43 q 906 167 843 108 q 1003 308 968 226 q 1039 490 1039 390 q 1004 669 1039 586 q 908 812 969 751 q 762 906 846 872 q 578 940 678 940 q 396 906 479 940 q 251 812 313 872 q 156 669 190 751 q 121 492 121 588 q 156 314 121 396 q 251 172 190 232 q 396 77 313 111 q 578 43 479 43 m 589 168 q 460 192 521 168 q 355 258 400 215 q 283 361 310 301 q 257 493 257 421 q 277 611 257 553 q 338 716 297 669 q 439 791 378 763 q 582 819 500 819 q 753 778 679 819 q 861 658 828 736 l 743 621 q 710 667 731 649 q 669 695 690 685 q 624 710 647 706 q 582 714 601 714 q 494 695 532 714 q 432 645 457 676 q 394 574 407 614 q 382 493 382 535 q 401 399 382 440 q 449 331 419 358 q 514 288 478 303 q 585 274 550 274 q 681 299 633 274 q 751 371 729 325 l 869 335 q 833 277 858 307 q 772 223 808 247 q 690 183 736 199 q 589 168 643 168 z "},d:{ha:874,x_min:51,x_max:807,o:"m 397 -14 q 258 17 322 -14 q 149 99 194 47 q 77 218 103 150 q 51 361 51 286 q 76 506 51 438 q 144 626 100 575 q 248 708 188 678 q 381 738 308 738 q 537 692 468 738 q 646 581 606 646 l 646 1014 l 768 1014 l 768 150 q 807 106 768 107 l 807 0 q 776 -4 788 -3 q 753 -6 764 -6 q 690 19 717 -6 q 663 75 663 43 l 663 136 q 548 26 619 65 q 397 -14 476 -14 m 426 92 q 495 104 460 92 q 562 139 531 117 q 616 191 593 161 q 646 254 639 221 l 646 463 q 608 528 633 497 q 552 583 583 560 q 485 619 521 606 q 415 632 450 632 q 317 609 361 632 q 242 548 274 586 q 194 460 211 510 q 178 360 178 411 q 197 256 178 306 q 250 171 217 207 q 328 113 283 135 q 426 92 374 92 z "},"†":{ha:585,x_min:51,x_max:533,o:"m 235 -181 l 235 321 l 51 321 l 51 432 l 235 432 l 235 1076 l 351 1076 l 351 432 l 533 432 l 533 321 l 351 321 l 351 -181 l 235 -181 z "},"‡":{ha:588,x_min:53,x_max:535,o:"m 236 -181 l 236 197 l 53 197 l 53 308 l 236 308 l 236 463 l 53 463 l 53 574 l 236 574 l 236 1076 l 353 1076 l 353 574 l 535 574 l 535 463 l 353 463 l 353 308 l 535 308 l 535 197 l 353 197 l 353 -181 l 236 -181 z "},"ď":{ha:874,x_min:51,x_max:1017,o:"m 894 846 l 814 874 l 894 1014 l 1017 1014 l 894 846 m 397 -14 q 258 17 322 -14 q 149 99 194 47 q 77 218 103 150 q 51 361 51 286 q 76 506 51 438 q 144 626 100 575 q 248 708 188 678 q 381 738 308 738 q 537 692 468 738 q 646 581 606 646 l 646 1014 l 768 1014 l 768 150 q 807 106 768 107 l 807 0 q 776 -4 788 -3 q 753 -6 764 -6 q 690 19 717 -6 q 663 75 663 43 l 663 136 q 548 26 619 65 q 397 -14 476 -14 m 426 92 q 495 104 460 92 q 562 139 531 117 q 616 191 593 161 q 646 254 639 221 l 646 463 q 608 528 633 497 q 552 583 583 560 q 485 619 521 606 q 415 632 450 632 q 317 609 361 632 q 242 548 274 586 q 194 460 211 510 q 178 360 178 411 q 197 256 178 306 q 250 171 217 207 q 328 113 283 135 q 426 92 374 92 z "},"đ":{ha:874,x_min:51,x_max:863,o:"m 397 -14 q 258 17 322 -14 q 149 99 194 47 q 77 218 103 150 q 51 361 51 286 q 76 506 51 438 q 144 626 100 575 q 248 708 188 678 q 381 738 308 738 q 537 692 468 738 q 646 581 606 646 l 646 849 l 493 849 l 493 926 l 646 926 l 646 1014 l 768 1014 l 768 926 l 863 926 l 863 849 l 768 849 l 768 150 q 807 106 768 107 l 807 0 q 776 -4 788 -3 q 753 -6 764 -6 q 690 19 717 -6 q 663 75 663 43 l 663 136 q 548 26 619 65 q 397 -14 476 -14 m 426 92 q 495 104 460 92 q 562 139 531 117 q 616 191 593 161 q 646 254 639 221 l 646 463 q 608 528 633 497 q 552 583 583 560 q 485 619 521 606 q 415 632 450 632 q 317 609 361 632 q 242 548 274 586 q 194 460 211 510 q 178 360 178 411 q 197 256 178 306 q 250 171 217 207 q 328 113 283 135 q 426 92 374 92 z "},"°":{ha:378,x_min:65,x_max:313,o:"m 65 885 q 101 971 65 936 q 189 1006 136 1006 q 277 971 242 1006 q 313 885 313 936 q 277 794 313 829 q 189 758 242 758 q 101 794 136 758 q 65 885 65 831 m 147 924 q 131 882 131 904 q 147 842 131 858 q 189 824 165 824 q 231 842 215 824 q 247 882 247 858 q 231 924 247 904 q 189 940 215 940 q 147 924 164 940 z "},"÷":{ha:740,x_min:90,x_max:650,o:"m 318 563 l 318 704 l 422 704 l 422 563 l 318 563 m 318 92 l 318 233 l 422 233 l 422 92 l 318 92 m 90 349 l 90 449 l 650 449 l 650 349 l 90 349 z "},$:{ha:864,x_min:49,x_max:808,o:"m 706 779 q 664 815 689 797 q 606 847 639 832 q 536 870 574 861 q 457 881 499 879 l 457 551 l 475 547 q 613 509 551 531 q 719 456 675 488 q 785 378 763 424 q 808 265 808 332 q 782 144 808 196 q 710 60 756 93 q 601 9 664 26 q 465 -10 538 -8 l 465 -149 l 404 -149 l 404 -8 q 49 129 201 4 l 108 235 q 160 192 129 214 q 230 153 190 171 q 315 122 269 135 q 411 104 361 108 l 411 436 l 390 442 q 258 481 315 460 q 163 531 201 501 q 106 601 125 560 q 86 701 86 643 q 110 820 86 768 q 176 909 133 872 q 276 967 218 946 q 404 992 335 988 l 404 1132 l 465 1132 l 465 992 q 631 958 557 988 q 764 881 706 929 l 706 779 m 675 253 q 660 315 675 289 q 618 360 646 340 q 550 396 590 381 q 457 425 510 411 l 457 103 q 618 140 561 103 q 675 253 675 178 m 215 721 q 227 661 215 686 q 263 618 239 636 q 324 587 286 600 q 411 561 361 574 l 411 881 q 263 833 310 875 q 215 721 215 792 z "},"ı":{ha:319,x_min:99,x_max:221,o:"m 99 0 l 99 725 l 221 725 l 221 0 l 99 0 z "},"ȷ":{ha:319,x_min:-171,x_max:221,o:"m -4 -258 q -95 -244 -53 -258 q -171 -200 -137 -231 l -114 -118 q -69 -143 -94 -136 q -18 -150 -43 -150 q 25 -141 4 -150 q 63 -117 46 -132 q 89 -79 79 -101 q 99 -32 99 -57 l 99 725 l 221 725 l 221 -24 q 202 -118 221 -75 q 152 -192 183 -161 q 81 -241 121 -224 q -4 -258 40 -258 z "},e:{ha:821,x_min:50,x_max:783,o:"m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 z "},"é":{ha:821,x_min:50,x_max:783,o:"m 436 846 l 356 874 l 436 1014 l 558 1014 l 436 846 m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 z "},"ĕ":{ha:821,x_min:50,x_max:783,o:"m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 m 415 919 q 469 947 446 919 q 496 1014 492 974 l 565 1014 q 553 953 565 981 q 522 904 542 925 q 474 872 501 883 q 415 860 447 860 q 356 872 383 860 q 309 904 329 883 q 277 953 289 925 q 265 1014 265 981 l 336 1014 q 360 948 336 976 q 415 919 383 919 z "},"ě":{ha:821,x_min:50,x_max:783,o:"m 297 1014 l 415 926 l 533 1014 l 600 981 l 460 856 l 371 856 l 231 981 l 297 1014 m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 z "},"ê":{ha:821,x_min:50,x_max:783,o:"m 231 889 l 371 1014 l 460 1014 l 600 889 l 533 856 l 415 943 l 297 856 l 231 889 m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 z "},"ë":{ha:821,x_min:50,x_max:783,o:"m 251 867 l 251 1008 l 354 1008 l 354 867 l 251 867 m 476 867 l 476 1008 l 579 1008 l 579 867 l 476 867 m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 z "},"ė":{ha:821,x_min:50,x_max:783,o:"m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 m 360 867 l 360 1014 l 471 1014 l 471 867 l 360 867 z "},"è":{ha:821,x_min:50,x_max:783,o:"m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 m 271 1014 l 392 1014 l 474 874 l 394 846 l 271 1014 z "},"₈":{ha:563,x_min:50,x_max:511,o:"m 511 49 q 492 -19 511 11 q 442 -72 474 -50 q 368 -106 410 -93 q 279 -118 326 -118 q 188 -105 229 -118 q 115 -69 146 -92 q 67 -15 85 -46 q 50 51 50 17 q 60 100 50 78 q 88 140 71 122 q 128 170 106 157 q 175 192 151 183 q 103 235 135 207 q 72 306 72 263 q 91 367 72 339 q 139 413 110 394 q 206 442 168 432 q 281 453 243 453 q 356 442 318 453 q 422 413 393 432 q 470 367 451 394 q 489 307 489 340 q 459 236 489 265 q 385 192 429 207 q 475 137 439 172 q 511 49 511 101 m 433 57 q 419 99 433 81 q 384 131 406 118 q 335 150 363 143 q 281 157 307 157 q 224 150 251 157 q 175 129 196 143 q 141 97 154 115 q 128 56 128 78 q 142 14 128 32 q 178 -17 156 -4 q 227 -35 200 -29 q 282 -42 254 -42 q 337 -35 310 -42 q 385 -15 364 -28 q 420 17 407 -1 q 433 57 433 35 m 150 299 q 162 265 150 279 q 192 240 174 250 q 234 225 211 231 q 281 219 257 219 q 326 225 303 219 q 369 241 350 231 q 401 266 389 251 q 413 300 413 281 q 401 333 413 318 q 372 358 390 347 q 329 374 353 368 q 281 379 306 379 q 189 358 228 379 q 150 299 150 336 z "},"⁸":{ha:563,x_min:50,x_max:511,o:"m 511 721 q 492 653 511 683 q 442 601 474 622 q 368 567 410 579 q 279 554 326 554 q 188 567 229 554 q 115 603 146 581 q 67 658 85 626 q 50 724 50 689 q 60 772 50 750 q 88 812 71 794 q 128 842 106 829 q 175 864 151 856 q 103 907 135 879 q 72 978 72 935 q 91 1039 72 1011 q 139 1085 110 1067 q 206 1115 168 1104 q 281 1125 243 1125 q 356 1115 318 1125 q 422 1085 393 1104 q 470 1040 451 1067 q 489 979 489 1013 q 459 908 489 938 q 385 864 429 879 q 475 809 439 844 q 511 721 511 774 m 433 729 q 419 772 433 753 q 384 803 406 790 q 335 822 363 815 q 281 829 307 829 q 224 822 251 829 q 175 802 196 815 q 141 770 154 789 q 128 729 128 751 q 142 688 128 706 q 178 657 156 669 q 227 638 200 644 q 282 631 254 631 q 337 638 310 631 q 385 658 364 644 q 420 689 407 671 q 433 729 433 707 m 150 972 q 162 938 150 953 q 192 913 174 924 q 234 898 211 903 q 281 893 257 893 q 326 899 303 893 q 369 914 350 904 q 401 938 389 924 q 413 972 413 953 q 401 1006 413 990 q 372 1031 390 1021 q 329 1046 353 1040 q 281 1051 306 1051 q 189 1030 228 1051 q 150 972 150 1008 z "},"…":{ha:699,x_min:89,x_max:610,o:"m 89 0 l 89 156 l 192 156 l 192 0 l 89 0 m 299 0 l 299 156 l 400 156 l 400 0 l 299 0 m 507 0 l 507 156 l 610 156 l 610 0 l 507 0 z "},"ē":{ha:821,x_min:50,x_max:783,o:"m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 m 213 908 l 213 989 l 618 989 l 618 908 l 213 908 z "},"—":{ha:1265,x_min:89,x_max:1176,o:"m 89 324 l 89 435 l 1176 435 l 1176 324 l 89 324 z "},"–":{ha:808,x_min:89,x_max:719,o:"m 89 324 l 89 435 l 719 435 l 719 324 l 89 324 z "},"ŋ":{ha:819,x_min:99,x_max:728,o:"m 503 -258 q 412 -244 454 -258 q 336 -200 369 -231 l 393 -118 q 438 -143 413 -136 q 489 -150 464 -150 q 532 -141 511 -150 q 569 -117 553 -132 q 596 -79 586 -101 q 606 -32 606 -57 l 606 406 q 570 575 606 522 q 463 628 535 628 q 388 613 425 628 q 317 574 350 599 q 258 514 283 549 q 221 438 233 479 l 221 0 l 99 0 l 99 725 l 210 725 l 210 569 q 334 692 253 646 q 511 738 415 738 q 615 715 574 738 q 682 651 657 692 q 717 554 707 610 q 728 433 728 499 l 728 -24 q 709 -118 728 -75 q 659 -192 690 -161 q 588 -241 628 -224 q 503 -258 547 -258 z "},"ę":{ha:821,x_min:50,x_max:783,o:"m 418 -258 q 331 -219 360 -247 q 301 -151 301 -190 q 399 -12 301 -82 q 257 22 321 -8 q 147 104 193 53 q 76 222 101 156 q 50 363 50 288 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 638 52 706 100 q 482 -8 571 4 q 398 -74 424 -44 q 372 -135 372 -104 q 449 -194 372 -186 l 418 -258 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 z "},"=":{ha:610,x_min:93,x_max:517,o:"m 93 249 l 93 332 l 517 332 l 517 249 l 93 249 m 93 435 l 93 518 l 517 518 l 517 435 l 93 435 z "},"ð":{ha:842,x_min:54,x_max:786,o:"m 701 939 l 593 875 q 684 756 647 818 q 744 633 721 694 q 776 513 767 572 q 786 403 786 454 q 756 228 786 306 q 675 97 726 151 q 556 15 624 43 q 413 -14 488 -14 q 274 13 339 -14 q 160 84 208 39 q 83 191 111 129 q 54 324 54 253 q 81 452 54 392 q 153 558 107 513 q 260 631 199 604 q 393 657 322 657 q 552 617 481 657 q 661 511 624 578 q 611 672 647 594 q 500 828 575 750 l 351 739 l 314 790 l 451 872 q 246 1014 369 944 l 418 1014 q 547 919 489 972 l 664 990 l 701 939 m 179 324 q 198 233 179 275 q 249 159 217 190 q 324 110 281 128 q 417 92 367 92 q 513 111 468 92 q 590 163 557 131 q 642 240 624 196 q 661 332 661 283 q 642 421 661 379 q 591 492 624 463 q 515 540 558 522 q 422 557 472 557 q 326 539 371 557 q 249 489 282 521 q 198 415 217 457 q 179 324 179 372 z "},"ẽ":{ha:821,x_min:50,x_max:783,o:"m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 m 501 871 q 447 880 469 871 q 403 900 424 889 q 364 920 383 911 q 322 929 344 929 q 285 919 299 929 q 265 898 272 910 q 256 875 258 886 q 254 863 254 864 l 182 863 q 188 894 182 871 q 210 943 194 918 q 251 987 225 968 q 319 1006 278 1006 q 371 997 349 1006 q 413 976 393 988 q 453 955 433 964 q 499 946 474 946 q 540 956 525 946 q 564 978 556 965 q 574 1001 572 990 q 576 1014 576 1011 l 649 1014 q 642 983 649 1006 q 619 935 636 960 q 574 890 603 910 q 501 871 546 871 z "},"!":{ha:364,x_min:121,x_max:243,o:"m 121 333 l 121 996 l 243 996 l 243 333 l 121 333 m 121 0 l 121 172 l 243 172 l 243 0 l 121 0 z "},"¡":{ha:361,x_min:119,x_max:242,o:"m 242 658 l 242 -4 l 119 -4 l 119 658 l 242 658 m 242 992 l 242 819 l 119 819 l 119 992 l 242 992 z "},f:{ha:476,x_min:39,x_max:519,o:"m 138 0 l 138 629 l 39 629 l 39 725 l 138 725 l 138 740 q 197 951 138 875 q 360 1028 257 1028 q 444 1016 403 1028 q 519 983 486 1004 l 489 893 q 441 915 469 907 q 385 924 413 924 q 292 878 324 924 q 260 744 260 832 l 260 725 l 453 725 l 453 629 l 260 629 l 260 0 l 138 0 z "},"ﬀ":{ha:835,x_min:39,x_max:869,o:"m 738 922 q 672 906 699 922 q 627 865 644 890 q 601 808 610 840 q 593 744 593 776 l 593 725 l 811 725 l 811 629 l 593 629 l 593 0 l 471 0 l 471 629 l 260 629 l 260 0 l 138 0 l 138 629 l 39 629 l 39 725 l 138 725 l 138 731 q 153 822 139 778 q 197 901 168 867 q 267 955 225 935 q 365 975 310 975 q 456 964 415 975 q 529 938 497 953 q 605 1003 560 978 q 715 1028 650 1028 q 812 1010 776 1028 q 869 983 847 993 l 839 893 q 800 913 822 904 q 738 922 778 922 m 471 725 q 476 787 471 751 q 493 844 482 822 q 441 865 471 860 q 388 869 411 869 q 290 828 318 869 q 260 732 261 788 l 260 725 l 471 725 z "},"ﬃ":{ha:1063,x_min:39,x_max:967,o:"m 138 629 l 39 629 l 39 725 l 138 725 l 138 731 q 152 819 138 775 q 196 897 167 863 q 267 953 225 932 q 365 975 310 975 q 456 964 415 975 q 529 938 497 953 q 615 1003 563 978 q 738 1028 667 1028 q 870 1003 811 1028 q 967 956 929 979 l 914 865 q 842 906 888 889 q 749 922 797 922 q 677 906 707 922 q 628 865 647 890 q 601 808 610 840 q 593 744 593 776 l 593 725 l 964 725 l 964 0 l 842 0 l 842 629 l 593 629 l 593 0 l 471 0 l 471 629 l 260 629 l 260 0 l 138 0 l 138 629 m 471 725 q 476 787 471 751 q 493 844 482 822 q 441 865 471 860 q 388 869 411 869 q 328 858 353 869 q 289 826 304 846 q 267 782 274 807 q 260 732 260 757 l 260 725 l 471 725 z "},"ﬄ":{ha:1179,x_min:39,x_max:1182,o:"m 1039 -10 q 924 31 965 -10 q 883 129 883 72 l 883 768 q 876 822 883 794 q 853 872 869 850 q 810 908 838 894 q 743 922 783 922 q 676 907 703 922 q 631 865 649 892 q 605 804 613 839 q 597 731 597 769 l 597 725 l 739 725 l 739 629 l 597 629 l 597 0 l 475 0 l 475 629 l 260 629 l 260 0 l 138 0 l 138 629 l 39 629 l 39 725 l 138 725 l 138 731 q 153 822 138 778 q 200 901 169 867 q 274 955 231 935 q 372 975 318 975 q 460 964 424 975 q 529 938 497 953 q 742 1028 599 1028 q 858 1010 808 1028 q 940 962 907 993 q 989 888 972 931 q 1006 794 1006 846 l 1006 185 q 1010 156 1006 171 q 1024 128 1014 140 q 1047 108 1033 115 q 1079 100 1060 100 q 1133 108 1106 100 q 1163 117 1160 117 l 1182 17 q 1169 11 1182 15 q 1135 2 1156 7 q 1090 -6 1115 -3 q 1039 -10 1064 -10 m 475 725 q 478 790 475 754 q 492 846 482 826 q 444 865 469 861 q 396 869 419 869 q 337 858 363 869 q 294 826 311 846 q 268 783 276 807 q 260 735 260 758 l 260 725 l 475 725 z "},"ﬁ":{ha:729,x_min:39,x_max:633,o:"m 138 629 l 39 629 l 39 725 l 138 725 l 138 740 q 154 846 138 794 q 204 938 171 897 q 288 1003 238 978 q 406 1028 338 1028 q 541 1003 483 1028 q 633 956 599 979 l 581 865 q 508 906 553 889 q 413 922 464 922 q 344 906 372 922 q 297 865 315 890 q 269 808 278 840 q 260 744 260 776 l 260 725 l 631 725 l 631 0 l 508 0 l 508 629 l 260 629 l 260 0 l 138 0 l 138 629 z "},"ﬂ":{ha:842,x_min:39,x_max:846,o:"m 846 17 q 832 11 844 15 q 799 2 819 7 q 753 -6 778 -3 q 701 -10 728 -10 q 588 31 628 -10 q 547 129 547 72 l 547 768 q 540 822 547 794 q 517 872 533 850 q 474 908 501 894 q 406 922 447 922 q 296 871 329 922 q 260 738 263 819 l 260 725 l 403 725 l 403 629 l 260 629 l 260 0 l 138 0 l 138 629 l 39 629 l 39 725 l 138 725 l 138 750 q 205 952 138 876 q 404 1028 272 1028 q 521 1010 471 1028 q 603 962 571 993 q 653 888 636 931 q 669 794 669 846 l 669 185 q 674 156 669 171 q 688 128 678 140 q 710 108 697 115 q 743 100 724 100 q 797 108 769 100 q 825 117 824 117 l 846 17 z "},"⅝":{ha:1249,x_min:49,x_max:1200,o:"m 1200 160 q 1181 92 1200 122 q 1131 40 1163 61 q 1057 6 1099 18 q 968 -7 1015 -7 q 876 6 918 -7 q 804 42 835 19 q 756 97 774 65 q 739 163 739 128 q 749 211 739 189 q 777 251 760 233 q 817 281 794 268 q 864 303 840 294 q 792 346 824 318 q 761 417 761 374 q 780 478 761 450 q 828 524 799 506 q 894 553 857 543 q 969 564 932 564 q 1044 553 1007 564 q 1111 524 1082 543 q 1159 478 1140 506 q 1178 418 1178 451 q 1148 347 1178 376 q 1074 303 1118 318 q 1164 248 1128 283 q 1200 160 1200 213 m 1122 168 q 1108 210 1122 192 q 1073 242 1094 229 q 1024 261 1051 254 q 969 268 996 268 q 913 261 940 268 q 864 240 885 254 q 830 208 843 226 q 817 167 817 189 q 831 125 817 143 q 867 94 844 107 q 916 76 889 82 q 971 69 943 69 q 1026 76 999 69 q 1074 97 1053 83 q 1109 128 1096 110 q 1122 168 1122 146 m 839 410 q 851 376 839 390 q 881 351 863 361 q 923 336 900 342 q 969 331 946 331 q 1015 336 992 331 q 1058 352 1039 342 q 1090 377 1078 363 q 1101 411 1101 392 q 1090 444 1101 429 q 1060 469 1079 458 q 1018 485 1042 479 q 969 490 994 490 q 878 469 917 490 q 839 410 839 447 m 276 811 q 362 798 322 811 q 431 761 401 785 q 476 704 460 738 q 493 632 493 671 q 475 556 493 590 q 426 496 457 521 q 351 457 394 471 q 260 443 308 443 q 133 471 189 443 q 49 546 76 499 l 97 593 q 167 537 124 557 q 264 517 210 517 q 371 548 328 517 q 414 633 414 579 q 401 685 414 663 q 368 722 389 707 q 322 744 347 736 q 269 751 296 751 q 191 733 229 751 q 132 686 153 715 l 63 686 q 79 762 68 715 q 102 857 90 808 q 124 949 114 906 q 138 1014 133 992 l 456 1014 l 456 938 l 194 938 l 153 775 q 206 801 175 792 q 276 811 238 811 m 203 46 l 592 514 l 964 993 l 1024 942 l 639 476 l 261 -7 l 203 46 z "},"⁵":{ha:528,x_min:40,x_max:485,o:"m 268 922 q 353 909 314 922 q 422 872 393 896 q 468 815 451 849 q 485 743 485 782 q 467 667 485 701 q 417 607 449 632 q 343 568 386 582 q 251 554 300 554 q 124 582 181 554 q 40 657 68 610 l 89 704 q 158 648 115 668 q 256 628 201 628 q 363 659 319 628 q 406 744 406 690 q 393 796 406 774 q 360 833 381 818 q 313 855 339 847 q 261 863 288 863 q 183 844 221 863 q 124 797 144 826 l 54 797 q 71 873 60 826 q 94 968 82 919 q 115 1060 106 1017 q 129 1125 125 1103 l 447 1125 l 447 1049 l 186 1049 l 144 886 q 198 913 167 903 q 268 922 229 922 z "},"⁄":{ha:233,x_min:-294,x_max:526,o:"m -294 46 l 94 514 l 467 993 l 526 942 l 142 476 l -236 -7 l -294 46 z "},"₅":{ha:528,x_min:40,x_max:485,o:"m 268 250 q 353 237 314 250 q 422 200 393 224 q 468 143 451 176 q 485 69 485 110 q 467 -7 485 28 q 417 -66 449 -42 q 343 -104 386 -90 q 251 -118 300 -118 q 124 -90 181 -118 q 40 -17 68 -62 l 89 31 q 158 -25 115 -4 q 256 -46 201 -46 q 363 -14 319 -46 q 406 72 406 18 q 393 124 406 101 q 360 160 381 146 q 313 183 339 175 q 261 190 288 190 q 183 172 221 190 q 124 125 144 154 l 54 125 q 71 201 60 154 q 94 296 82 247 q 115 388 106 344 q 129 453 125 431 l 447 453 l 447 376 l 186 376 l 144 214 q 198 240 167 231 q 268 250 229 250 z "},"ƒ":{ha:742,x_min:42,x_max:693,o:"m 208 -258 q 118 -244 161 -258 q 42 -200 75 -231 l 99 -118 q 144 -143 118 -136 q 194 -150 169 -150 q 238 -141 217 -150 q 275 -117 258 -132 q 301 -79 292 -101 q 311 -32 311 -57 l 311 544 l 213 544 l 213 640 l 311 640 l 311 740 q 371 951 311 875 q 533 1028 431 1028 q 617 1016 575 1028 q 693 983 660 1004 l 663 893 q 614 915 643 907 q 557 924 585 924 q 465 878 496 924 q 433 744 433 832 l 433 640 l 626 640 l 626 544 l 433 544 l 433 -29 q 415 -122 433 -79 q 365 -194 396 -164 q 292 -242 333 -225 q 208 -258 251 -258 z "},"₄":{ha:543,x_min:32,x_max:504,o:"m 346 -111 l 346 28 l 32 28 l 32 101 l 369 453 l 422 453 l 422 103 l 504 103 l 504 28 l 422 28 l 422 -111 l 346 -111 m 111 103 l 349 103 l 349 353 l 111 103 z "},"⁴":{ha:544,x_min:32,x_max:504,o:"m 346 563 l 346 700 l 32 700 l 32 774 l 369 1125 l 422 1125 l 422 775 l 504 775 l 504 700 l 422 700 l 422 563 l 346 563 m 111 775 l 349 775 l 349 1025 l 111 775 z "},g:{ha:867,x_min:53,x_max:768,o:"m 388 -8 q 252 22 314 -8 q 146 104 190 53 q 77 222 101 156 q 53 361 53 289 q 77 506 53 438 q 146 626 101 575 q 252 708 190 678 q 389 738 314 738 q 547 693 481 738 q 660 581 614 649 l 660 725 l 768 725 l 768 8 q 739 -128 768 -69 q 660 -228 710 -187 q 542 -289 610 -268 q 399 -310 475 -310 q 198 -267 275 -310 q 69 -150 121 -225 l 140 -87 q 251 -183 183 -151 q 399 -215 319 -215 q 494 -201 449 -215 q 572 -160 539 -187 q 626 -90 606 -132 q 646 8 646 -49 l 646 136 q 597 76 625 103 q 535 30 568 49 q 464 1 501 11 q 388 -8 426 -8 m 425 92 q 500 106 464 92 q 567 142 536 119 q 618 194 597 165 q 646 254 639 224 l 646 463 q 606 531 631 500 q 551 584 582 561 q 485 619 521 607 q 414 632 450 632 q 315 608 358 632 q 240 546 271 585 q 193 458 210 507 q 176 358 176 408 q 196 256 176 304 q 249 171 215 207 q 327 113 282 135 q 425 92 372 92 z "},"ğ":{ha:865,x_min:51,x_max:767,o:"m 386 -8 q 251 22 313 -8 q 144 104 189 53 q 76 222 100 156 q 51 361 51 289 q 76 506 51 438 q 144 626 100 575 q 251 708 189 678 q 388 738 313 738 q 546 693 479 738 q 658 581 613 649 l 658 725 l 767 725 l 767 8 q 738 -128 767 -69 q 658 -228 708 -187 q 541 -289 608 -268 q 397 -310 474 -310 q 197 -267 274 -310 q 68 -150 119 -225 l 139 -87 q 250 -183 182 -151 q 397 -215 318 -215 q 492 -201 447 -215 q 571 -160 538 -187 q 624 -90 604 -132 q 644 8 644 -49 l 644 136 q 595 76 624 103 q 533 30 567 49 q 463 1 500 11 q 386 -8 425 -8 m 424 92 q 499 106 463 92 q 565 142 535 119 q 617 194 596 165 q 644 254 638 224 l 644 463 q 605 531 629 500 q 550 584 581 561 q 484 619 519 607 q 413 632 449 632 q 313 608 357 632 q 239 546 269 585 q 192 458 208 507 q 175 358 175 408 q 194 256 175 304 q 247 171 214 207 q 326 113 281 135 q 424 92 371 92 m 458 919 q 512 947 489 919 q 539 1014 535 974 l 608 1014 q 597 953 608 981 q 565 904 585 925 q 517 872 544 883 q 458 860 490 860 q 399 872 426 860 q 352 904 372 883 q 320 953 332 925 q 308 1014 308 981 l 379 1014 q 403 948 379 976 q 458 919 426 919 z "},"ĝ":{ha:865,x_min:51,x_max:767,o:"m 274 889 l 414 1014 l 503 1014 l 643 889 l 576 856 l 458 943 l 340 856 l 274 889 m 386 -8 q 251 22 313 -8 q 144 104 189 53 q 76 222 100 156 q 51 361 51 289 q 76 506 51 438 q 144 626 100 575 q 251 708 189 678 q 388 738 313 738 q 546 693 479 738 q 658 581 613 649 l 658 725 l 767 725 l 767 8 q 738 -128 767 -69 q 658 -228 708 -187 q 541 -289 608 -268 q 397 -310 474 -310 q 197 -267 274 -310 q 68 -150 119 -225 l 139 -87 q 250 -183 182 -151 q 397 -215 318 -215 q 492 -201 447 -215 q 571 -160 538 -187 q 624 -90 604 -132 q 644 8 644 -49 l 644 136 q 595 76 624 103 q 533 30 567 49 q 463 1 500 11 q 386 -8 425 -8 m 424 92 q 499 106 463 92 q 565 142 535 119 q 617 194 596 165 q 644 254 638 224 l 644 463 q 605 531 629 500 q 550 584 581 561 q 484 619 519 607 q 413 632 449 632 q 313 608 357 632 q 239 546 269 585 q 192 458 208 507 q 175 358 175 408 q 194 256 175 304 q 247 171 214 207 q 326 113 281 135 q 424 92 371 92 z "},"ģ":{ha:865,x_min:51,x_max:767,o:"m 386 -8 q 251 22 313 -8 q 144 104 189 53 q 76 222 100 156 q 51 361 51 289 q 76 506 51 438 q 144 626 100 575 q 251 708 189 678 q 388 738 313 738 q 546 693 479 738 q 658 581 613 649 l 658 725 l 767 725 l 767 8 q 738 -128 767 -69 q 658 -228 708 -187 q 541 -289 608 -268 q 397 -310 474 -310 q 197 -267 274 -310 q 68 -150 119 -225 l 139 -87 q 250 -183 182 -151 q 397 -215 318 -215 q 492 -201 447 -215 q 571 -160 538 -187 q 624 -90 604 -132 q 644 8 644 -49 l 644 136 q 595 76 624 103 q 533 30 567 49 q 463 1 500 11 q 386 -8 425 -8 m 424 92 q 499 106 463 92 q 565 142 535 119 q 617 194 596 165 q 644 254 638 224 l 644 463 q 605 531 629 500 q 550 584 581 561 q 484 619 519 607 q 413 632 449 632 q 313 608 357 632 q 239 546 269 585 q 192 458 208 507 q 175 358 175 408 q 194 256 175 304 q 247 171 214 207 q 326 113 281 135 q 424 92 371 92 m 482 1035 l 454 922 l 489 922 l 489 806 l 381 806 l 381 922 l 422 1035 l 482 1035 z "},"ġ":{ha:865,x_min:51,x_max:767,o:"m 386 -8 q 251 22 313 -8 q 144 104 189 53 q 76 222 100 156 q 51 361 51 289 q 76 506 51 438 q 144 626 100 575 q 251 708 189 678 q 388 738 313 738 q 546 693 479 738 q 658 581 613 649 l 658 725 l 767 725 l 767 8 q 738 -128 767 -69 q 658 -228 708 -187 q 541 -289 608 -268 q 397 -310 474 -310 q 197 -267 274 -310 q 68 -150 119 -225 l 139 -87 q 250 -183 182 -151 q 397 -215 318 -215 q 492 -201 447 -215 q 571 -160 538 -187 q 624 -90 604 -132 q 644 8 644 -49 l 644 136 q 595 76 624 103 q 533 30 567 49 q 463 1 500 11 q 386 -8 425 -8 m 424 92 q 499 106 463 92 q 565 142 535 119 q 617 194 596 165 q 644 254 638 224 l 644 463 q 605 531 629 500 q 550 584 581 561 q 484 619 519 607 q 413 632 449 632 q 313 608 357 632 q 239 546 269 585 q 192 458 208 507 q 175 358 175 408 q 194 256 175 304 q 247 171 214 207 q 326 113 281 135 q 424 92 371 92 m 403 867 l 403 1014 l 514 1014 l 514 867 l 403 867 z "},"ß":{ha:768,x_min:99,x_max:719,o:"m 335 104 q 439 117 392 106 q 521 151 486 128 q 574 212 556 175 q 593 299 593 249 q 535 442 593 389 q 383 496 478 496 l 357 496 l 357 607 l 382 607 q 490 646 449 607 q 532 750 532 685 q 519 810 532 785 q 486 853 507 836 q 438 878 465 869 q 382 886 411 886 q 308 871 339 886 q 256 829 276 856 q 225 769 235 803 q 215 699 215 736 l 215 0 l 99 0 l 99 718 q 120 828 99 778 q 180 915 142 879 q 271 972 218 951 q 386 992 324 992 q 490 976 442 992 q 573 930 538 960 q 628 859 608 900 q 649 768 649 818 q 638 697 649 731 q 608 634 626 663 q 564 586 589 606 q 510 558 539 567 q 599 523 560 547 q 665 463 638 499 q 706 383 692 428 q 719 289 719 339 q 691 163 719 218 q 611 72 663 108 q 489 15 560 35 q 335 -8 418 -6 l 335 104 z "},">":{ha:708,x_min:79,x_max:663,o:"m 663 325 l 79 -22 l 79 114 l 485 360 l 79 610 l 79 740 l 663 389 l 663 325 z "},"«":{ha:828,x_min:56,x_max:743,o:"m 56 389 l 407 640 l 407 538 l 154 360 l 407 186 l 407 83 l 56 325 l 56 389 m 392 389 l 743 640 l 743 538 l 490 360 l 743 186 l 743 83 l 392 325 l 392 389 z "},"»":{ha:828,x_min:85,x_max:772,o:"m 772 325 l 421 83 l 421 186 l 674 360 l 421 538 l 421 640 l 772 389 l 772 325 m 436 325 l 85 83 l 85 186 l 338 360 l 85 538 l 85 640 l 436 389 l 436 325 z "},"‹":{ha:492,x_min:56,x_max:407,o:"m 56 389 l 407 640 l 407 538 l 154 360 l 407 186 l 407 83 l 56 325 l 56 389 z "},"›":{ha:492,x_min:85,x_max:436,o:"m 436 325 l 85 83 l 85 186 l 338 360 l 85 538 l 85 640 l 436 389 l 436 325 z "},h:{ha:819,x_min:99,x_max:728,o:"m 728 0 l 606 0 l 606 406 q 567 573 606 518 q 453 628 528 628 q 381 613 417 628 q 313 574 344 599 q 258 514 282 549 q 221 438 233 479 l 221 0 l 99 0 l 99 1014 l 221 1014 l 221 569 q 338 693 264 649 q 499 738 411 738 q 607 714 563 738 q 678 650 651 690 q 716 553 704 610 q 728 433 728 497 l 728 0 z "},"ħ":{ha:819,x_min:21,x_max:728,o:"m 728 0 l 606 0 l 606 406 q 567 573 606 518 q 453 628 528 628 q 381 613 417 628 q 313 574 344 599 q 258 514 282 549 q 221 438 233 479 l 221 0 l 99 0 l 99 849 l 21 849 l 21 926 l 99 926 l 99 1014 l 221 1014 l 221 926 l 390 926 l 390 849 l 221 849 l 221 569 q 338 693 264 649 q 499 738 411 738 q 607 714 563 738 q 678 650 651 690 q 716 553 704 610 q 728 433 728 497 l 728 0 z "},"ĥ":{ha:819,x_min:99,x_max:728,o:"m 315 889 l 446 1013 l 528 1013 l 658 889 l 596 856 l 488 942 l 378 856 l 315 889 m 728 0 l 606 0 l 606 406 q 567 573 606 518 q 453 628 528 628 q 381 613 417 628 q 313 574 344 599 q 258 514 282 549 q 221 438 233 479 l 221 0 l 99 0 l 99 1014 l 221 1014 l 221 569 q 338 693 264 649 q 499 738 411 738 q 607 714 563 738 q 678 650 651 690 q 716 553 704 610 q 728 433 728 497 l 728 0 z "},"-":{ha:588,x_min:89,x_max:499,o:"m 89 324 l 89 435 l 499 435 l 499 324 l 89 324 z "},i:{ha:319,x_min:99,x_max:221,o:"m 99 0 l 99 725 l 221 725 l 221 0 l 99 0 m 99 861 l 99 1014 l 221 1014 l 221 861 l 99 861 z "},"í":{ha:319,x_min:99,x_max:303,o:"m 181 846 l 100 874 l 181 1014 l 303 1014 l 181 846 m 99 0 l 99 725 l 221 725 l 221 0 l 99 0 z "},"ĭ":{ha:319,x_min:10,x_max:310,o:"m 99 0 l 99 725 l 221 725 l 221 0 l 99 0 m 160 919 q 213 947 190 919 q 240 1014 236 974 l 310 1014 q 298 953 310 981 q 266 904 286 925 q 219 872 246 883 q 160 860 192 860 q 101 872 128 860 q 53 904 74 883 q 22 953 33 925 q 10 1014 10 981 l 81 1014 q 104 948 81 976 q 160 919 128 919 z "},"î":{ha:319,x_min:-25,x_max:344,o:"m -25 889 l 115 1014 l 204 1014 l 344 889 l 278 856 l 160 943 l 42 856 l -25 889 m 99 0 l 99 725 l 221 725 l 221 0 l 99 0 z "},"ï":{ha:319,x_min:-4,x_max:324,o:"m -4 867 l -4 1008 l 99 1008 l 99 867 l -4 867 m 221 867 l 221 1008 l 324 1008 l 324 867 l 221 867 m 99 0 l 99 725 l 221 725 l 221 0 l 99 0 z "},"ì":{ha:319,x_min:15,x_max:221,o:"m 99 0 l 99 725 l 221 725 l 221 0 l 99 0 m 15 1014 l 136 1014 l 218 874 l 139 846 l 15 1014 z "},"ĳ":{ha:649,x_min:99,x_max:550,o:"m 99 0 l 99 725 l 221 725 l 221 0 l 99 0 m 99 861 l 99 1014 l 221 1014 l 221 861 l 99 861 m 325 -258 q 234 -244 276 -258 q 158 -200 192 -231 l 215 -118 q 260 -143 235 -136 q 311 -150 286 -150 q 354 -141 333 -150 q 392 -117 375 -132 q 418 -79 408 -101 q 428 -32 428 -57 l 428 725 l 550 725 l 550 -24 q 531 -118 550 -75 q 481 -192 513 -161 q 410 -241 450 -224 q 325 -258 369 -258 m 428 861 l 428 1014 l 550 1014 l 550 861 l 428 861 z "},j:{ha:329,x_min:-161,x_max:231,o:"m 6 -258 q -85 -244 -43 -258 q -161 -200 -128 -231 l -104 -118 q -59 -143 -85 -136 q -8 -150 -33 -150 q 35 -141 14 -150 q 72 -117 56 -132 q 99 -79 89 -101 q 108 -32 108 -57 l 108 725 l 231 725 l 231 -24 q 212 -118 231 -75 q 162 -192 193 -161 q 90 -241 131 -224 q 6 -258 50 -258 m 108 861 l 108 1014 l 231 1014 l 231 861 l 108 861 z "},"ī":{ha:319,x_min:-42,x_max:364,o:"m 99 0 l 99 725 l 221 725 l 221 0 l 99 0 m -42 908 l -42 989 l 364 989 l 364 908 l -42 908 z "},"į":{ha:319,x_min:36,x_max:221,o:"m 153 -251 q 65 -212 94 -240 q 36 -144 36 -183 q 62 -72 36 -108 q 143 0 88 -36 l 99 0 l 99 725 l 221 725 l 221 0 q 133 -67 160 -37 q 107 -128 107 -97 q 183 -187 107 -179 l 153 -251 m 99 861 l 99 1014 l 221 1014 l 221 861 l 99 861 z "},"ĩ":{ha:319,x_min:-74,x_max:393,o:"m 99 0 l 99 725 l 221 725 l 221 0 l 99 0 m 246 871 q 191 880 214 871 q 148 900 168 889 q 108 920 128 911 q 67 929 89 929 q 30 919 43 929 q 10 898 17 910 q 1 875 3 886 q -1 863 -1 864 l -74 863 q -67 894 -74 871 q -46 943 -61 918 q -4 987 -31 968 q 64 1006 22 1006 q 115 997 93 1006 q 158 976 138 988 q 198 955 178 964 q 243 946 218 946 q 285 956 269 946 q 308 978 300 965 q 319 1001 317 990 q 321 1014 321 1011 l 393 1014 q 387 983 393 1006 q 364 935 381 960 q 319 890 347 910 q 246 871 290 871 z "},"ĵ":{ha:319,x_min:-171,x_max:344,o:"m -4 -258 q -95 -244 -53 -258 q -171 -200 -137 -231 l -114 -118 q -69 -143 -94 -136 q -18 -150 -43 -150 q 25 -141 4 -150 q 63 -117 46 -132 q 89 -79 79 -101 q 99 -32 99 -57 l 99 725 l 221 725 l 221 -24 q 202 -118 221 -75 q 152 -192 183 -161 q 81 -241 121 -224 q -4 -258 40 -258 m -25 889 l 115 1014 l 204 1014 l 344 889 l 278 856 l 160 943 l 42 856 l -25 889 z "},k:{ha:749,x_min:99,x_max:742,o:"m 610 0 l 360 354 l 221 224 l 221 0 l 99 0 l 99 1014 l 221 1014 l 221 347 l 593 724 l 728 724 l 439 424 l 742 0 l 610 0 z "},"ķ":{ha:749,x_min:99,x_max:742,o:"m 338 -296 l 365 -183 l 331 -183 l 331 -67 l 439 -67 l 439 -183 l 397 -296 l 338 -296 m 610 0 l 360 354 l 221 224 l 221 0 l 99 0 l 99 1014 l 221 1014 l 221 347 l 593 724 l 728 724 l 439 424 l 742 0 l 610 0 z "},"ĸ":{ha:749,x_min:99,x_max:742,o:"m 610 0 l 360 354 l 221 224 l 221 0 l 99 0 l 99 725 l 221 725 l 221 347 l 593 724 l 728 724 l 439 424 l 742 0 l 610 0 z "},l:{ha:397,x_min:101,x_max:400,o:"m 101 1014 l 224 1014 l 224 188 q 245 124 224 147 q 306 101 267 101 q 342 106 321 101 q 381 118 363 111 l 400 19 q 328 -1 369 7 q 254 -10 286 -10 q 142 31 183 -10 q 101 143 101 71 l 101 1014 z "},"ĺ":{ha:397,x_min:94,x_max:400,o:"m 175 1069 l 94 1097 l 175 1238 l 297 1238 l 175 1069 m 101 1014 l 224 1014 l 224 188 q 245 124 224 147 q 306 101 267 101 q 342 106 321 101 q 381 118 363 111 l 400 19 q 328 -1 369 7 q 254 -10 286 -10 q 142 31 183 -10 q 101 143 101 71 l 101 1014 z "},"ľ":{ha:397,x_min:101,x_max:488,o:"m 365 846 l 285 874 l 365 1014 l 488 1014 l 365 846 m 101 1014 l 224 1014 l 224 188 q 245 124 224 147 q 306 101 267 101 q 342 106 321 101 q 381 118 363 111 l 400 19 q 328 -1 369 7 q 254 -10 286 -10 q 142 31 183 -10 q 101 143 101 71 l 101 1014 z "},"ļ":{ha:397,x_min:101,x_max:400,o:"m 197 -296 l 225 -183 l 190 -183 l 190 -67 l 299 -67 l 299 -183 l 257 -296 l 197 -296 m 101 1014 l 224 1014 l 224 188 q 245 124 224 147 q 306 101 267 101 q 342 106 321 101 q 381 118 363 111 l 400 19 q 328 -1 369 7 q 254 -10 286 -10 q 142 31 183 -10 q 101 143 101 71 l 101 1014 z "},"ŀ":{ha:471,x_min:101,x_max:449,o:"m 101 1014 l 224 1014 l 224 188 q 245 124 224 147 q 306 101 267 101 q 342 106 321 101 q 381 118 363 111 l 400 19 q 328 -1 369 7 q 254 -10 286 -10 q 142 31 183 -10 q 101 143 101 71 l 101 1014 m 346 374 l 346 546 l 449 546 l 449 374 l 346 374 z "},"<":{ha:708,x_min:46,x_max:629,o:"m 46 389 l 629 740 l 629 610 l 224 360 l 629 114 l 629 -22 l 46 325 l 46 389 z "},"¬":{ha:821,x_min:93,x_max:724,o:"m 724 521 l 724 167 l 618 167 l 618 410 l 93 410 l 93 521 l 724 521 z "},"ł":{ha:428,x_min:11,x_max:429,o:"m 131 453 l 47 393 l 11 461 l 131 547 l 131 1014 l 253 1014 l 253 636 l 375 725 l 413 657 l 253 542 l 253 188 q 274 124 253 147 q 335 101 296 101 q 371 106 350 101 q 410 118 392 111 l 429 19 q 357 -1 399 7 q 283 -10 315 -10 q 172 31 213 -10 q 131 143 131 71 l 131 453 z "},m:{ha:1283,x_min:99,x_max:1192,o:"m 1192 0 l 1069 0 l 1069 406 q 1033 574 1069 519 q 924 628 996 628 q 790 574 849 628 q 706 436 731 521 l 706 0 l 583 0 l 583 406 q 547 575 583 522 q 439 628 511 628 q 306 576 365 628 q 221 438 246 524 l 221 0 l 99 0 l 99 725 l 210 725 l 210 569 q 325 694 254 650 q 485 738 396 738 q 630 688 576 738 q 696 561 683 639 q 972 738 793 738 q 1077 715 1035 738 q 1144 651 1119 692 q 1181 554 1169 610 q 1192 433 1192 499 l 1192 0 z "},"−":{ha:746,x_min:93,x_max:653,o:"m 93 374 l 93 474 l 653 474 l 653 374 l 93 374 z "},"µ":{ha:872,x_min:108,x_max:786,o:"m 108 725 l 231 725 l 231 314 q 388 92 231 92 q 460 104 424 92 q 527 140 496 117 q 583 196 558 163 q 625 271 608 229 l 625 725 l 747 725 l 747 150 q 786 106 747 107 l 786 0 q 753 -3 765 -3 q 729 -4 740 -4 q 666 22 690 -4 q 642 79 642 47 l 642 156 q 597 92 625 122 q 535 38 569 61 q 462 0 501 14 q 381 -14 422 -14 q 278 17 317 -14 q 224 93 239 49 l 224 -294 l 108 -294 l 108 725 z "},"×":{ha:644,x_min:85,x_max:561,o:"m 561 218 l 483 142 l 322 303 l 161 142 l 85 219 l 244 379 l 88 538 l 165 614 l 322 457 l 481 615 l 557 538 l 400 379 l 561 218 z "},n:{ha:819,x_min:99,x_max:728,o:"m 728 0 l 606 0 l 606 406 q 570 575 606 522 q 463 628 535 628 q 388 613 425 628 q 317 574 350 599 q 258 514 283 549 q 221 438 233 479 l 221 0 l 99 0 l 99 725 l 210 725 l 210 569 q 334 692 253 646 q 511 738 415 738 q 615 715 574 738 q 682 651 657 692 q 717 554 707 610 q 728 433 728 499 l 728 0 z "},"ń":{ha:819,x_min:99,x_max:728,o:"m 442 846 l 361 874 l 442 1014 l 564 1014 l 442 846 m 728 0 l 606 0 l 606 406 q 570 575 606 522 q 463 628 535 628 q 388 613 425 628 q 317 574 350 599 q 258 514 283 549 q 221 438 233 479 l 221 0 l 99 0 l 99 725 l 210 725 l 210 569 q 334 692 253 646 q 511 738 415 738 q 615 715 574 738 q 682 651 657 692 q 717 554 707 610 q 728 433 728 499 l 728 0 z "},"ŉ":{ha:819,x_min:-12,x_max:728,o:"m 67 846 l -12 874 l 39 961 l 35 1014 l 190 1014 l 67 846 m 728 0 l 606 0 l 606 406 q 570 575 606 522 q 463 628 535 628 q 388 613 425 628 q 317 574 350 599 q 258 514 283 549 q 221 438 233 479 l 221 0 l 99 0 l 99 725 l 210 725 l 210 569 q 334 692 253 646 q 511 738 415 738 q 615 715 574 738 q 682 651 657 692 q 717 554 707 610 q 728 433 728 499 l 728 0 z "},"ň":{ha:819,x_min:99,x_max:728,o:"m 303 1014 l 421 926 l 539 1014 l 606 981 l 465 856 l 376 856 l 236 981 l 303 1014 m 728 0 l 606 0 l 606 406 q 570 575 606 522 q 463 628 535 628 q 388 613 425 628 q 317 574 350 599 q 258 514 283 549 q 221 438 233 479 l 221 0 l 99 0 l 99 725 l 210 725 l 210 569 q 334 692 253 646 q 511 738 415 738 q 615 715 574 738 q 682 651 657 692 q 717 554 707 610 q 728 433 728 499 l 728 0 z "},"ņ":{ha:819,x_min:99,x_max:728,o:"m 356 -296 l 383 -183 l 349 -183 l 349 -67 l 457 -67 l 457 -183 l 415 -296 l 356 -296 m 728 0 l 606 0 l 606 406 q 570 575 606 522 q 463 628 535 628 q 388 613 425 628 q 317 574 350 599 q 258 514 283 549 q 221 438 233 479 l 221 0 l 99 0 l 99 725 l 210 725 l 210 569 q 334 692 253 646 q 511 738 415 738 q 615 715 574 738 q 682 651 657 692 q 717 554 707 610 q 728 433 728 499 l 728 0 z "},"ṅ":{ha:819,x_min:99,x_max:728,o:"m 365 867 l 365 1014 l 476 1014 l 476 867 l 365 867 m 728 0 l 606 0 l 606 406 q 570 575 606 522 q 463 628 535 628 q 388 613 425 628 q 317 574 350 599 q 258 514 283 549 q 221 438 233 479 l 221 0 l 99 0 l 99 725 l 210 725 l 210 569 q 334 692 253 646 q 511 738 415 738 q 615 715 574 738 q 682 651 657 692 q 717 554 707 610 q 728 433 728 499 l 728 0 z "},"₉":{ha:571,x_min:44,x_max:517,o:"m 44 263 q 63 338 44 303 q 113 400 81 374 q 187 442 144 426 q 279 457 229 457 q 451 392 385 457 q 517 208 517 326 q 449 -37 517 44 q 269 -118 382 -118 q 154 -93 207 -118 q 74 -22 101 -68 l 121 29 q 181 -26 140 -6 q 272 -46 222 -46 q 396 6 349 -46 q 444 153 443 57 q 375 94 424 117 q 274 72 326 72 q 183 87 225 72 q 110 127 140 101 q 62 188 79 153 q 44 263 44 222 m 278 386 q 216 376 244 386 q 165 349 188 367 q 131 310 143 332 q 118 263 118 288 q 131 215 118 238 q 166 176 144 193 q 217 150 188 160 q 279 140 246 140 q 341 150 313 140 q 392 176 369 160 q 426 215 414 193 q 439 263 439 238 q 426 310 439 288 q 391 349 413 332 q 340 376 369 367 q 278 386 311 386 z "},"⁹":{ha:568,x_min:43,x_max:515,o:"m 43 929 q 61 1006 43 971 q 111 1068 79 1042 q 185 1110 143 1094 q 278 1125 228 1125 q 449 1060 383 1125 q 515 876 515 994 q 448 631 515 713 q 268 549 381 549 q 153 574 206 549 q 72 646 100 600 l 119 696 q 180 641 139 661 q 271 621 221 621 q 394 673 347 621 q 443 821 442 725 q 374 763 422 785 q 272 740 325 740 q 181 755 224 740 q 108 795 139 769 q 60 855 78 821 q 43 929 43 889 m 276 1054 q 215 1044 243 1054 q 164 1017 186 1035 q 129 978 142 1000 q 117 931 117 956 q 130 883 117 906 q 165 844 143 861 q 215 818 186 828 q 278 808 244 808 q 340 818 311 808 q 390 844 368 828 q 425 883 413 861 q 438 929 438 904 q 424 977 438 954 q 390 1017 411 1000 q 339 1044 368 1035 q 276 1054 310 1054 z "},"ñ":{ha:819,x_min:99,x_max:728,o:"m 728 0 l 606 0 l 606 406 q 570 575 606 522 q 463 628 535 628 q 388 613 425 628 q 317 574 350 599 q 258 514 283 549 q 221 438 233 479 l 221 0 l 99 0 l 99 725 l 210 725 l 210 569 q 334 692 253 646 q 511 738 415 738 q 615 715 574 738 q 682 651 657 692 q 717 554 707 610 q 728 433 728 499 l 728 0 m 507 871 q 452 880 475 871 q 409 900 429 889 q 369 920 389 911 q 328 929 350 929 q 291 919 304 929 q 271 898 278 910 q 262 875 264 886 q 260 863 260 864 l 188 863 q 194 894 188 871 q 215 943 200 918 q 257 987 231 968 q 325 1006 283 1006 q 376 997 354 1006 q 419 976 399 988 q 459 955 439 964 q 504 946 479 946 q 546 956 531 946 q 569 978 561 965 q 580 1001 578 990 q 582 1014 582 1011 l 654 1014 q 648 983 654 1006 q 625 935 642 960 q 580 890 608 910 q 507 871 551 871 z "},"#":{ha:961,x_min:51,x_max:910,o:"m 910 621 l 724 621 l 664 374 l 849 374 l 849 279 l 642 279 l 574 0 l 472 0 l 542 279 l 308 279 l 240 0 l 139 0 l 208 279 l 51 279 l 51 374 l 231 374 l 290 621 l 113 621 l 113 710 l 313 710 l 379 986 l 481 986 l 413 710 l 646 710 l 713 986 l 814 986 l 746 710 l 910 710 l 910 621 m 564 374 l 624 621 l 390 621 l 331 374 l 564 374 z "},o:{ha:832,x_min:50,x_max:782,o:"m 415 -14 q 266 17 333 -14 q 151 99 199 47 q 76 218 103 150 q 50 361 50 286 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 z "},"ó":{ha:832,x_min:50,x_max:782,o:"m 436 846 l 356 874 l 436 1014 l 558 1014 l 436 846 m 415 -14 q 266 17 333 -14 q 151 99 199 47 q 76 218 103 150 q 50 361 50 286 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 z "},"ŏ":{ha:832,x_min:50,x_max:782,o:"m 415 -14 q 266 17 333 -14 q 151 99 199 47 q 76 218 103 150 q 50 361 50 286 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 m 415 919 q 469 947 446 919 q 496 1014 492 974 l 565 1014 q 553 953 565 981 q 522 904 542 925 q 474 872 501 883 q 415 860 447 860 q 356 872 383 860 q 309 904 329 883 q 277 953 289 925 q 265 1014 265 981 l 336 1014 q 360 948 336 976 q 415 919 383 919 z "},"ô":{ha:832,x_min:50,x_max:782,o:"m 231 889 l 371 1014 l 460 1014 l 600 889 l 533 856 l 415 943 l 297 856 l 231 889 m 415 -14 q 266 17 333 -14 q 151 99 199 47 q 76 218 103 150 q 50 361 50 286 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 z "},"ö":{ha:832,x_min:50,x_max:782,o:"m 251 867 l 251 1008 l 354 1008 l 354 867 l 251 867 m 476 867 l 476 1008 l 579 1008 l 579 867 l 476 867 m 415 -14 q 266 17 333 -14 q 151 99 199 47 q 76 218 103 150 q 50 361 50 286 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 z "},"œ":{ha:1428,x_min:50,x_max:1389,o:"m 414 -14 q 269 15 336 -14 q 154 94 203 43 q 78 213 106 144 q 50 360 50 281 q 78 509 50 440 q 155 628 106 578 q 271 708 204 679 q 415 738 338 738 q 598 681 518 738 q 718 526 678 625 q 840 683 761 628 q 1025 738 918 738 q 1167 710 1103 738 q 1280 634 1232 683 q 1356 516 1328 585 q 1389 363 1385 447 q 1389 341 1389 354 q 1388 321 1389 328 l 786 321 q 812 225 790 269 q 867 147 833 181 q 946 95 901 114 q 1040 76 990 76 q 1108 85 1075 76 q 1169 110 1142 94 q 1217 149 1197 126 q 1249 199 1238 171 l 1351 169 q 1300 94 1332 128 q 1226 37 1268 61 q 1135 -1 1185 13 q 1035 -14 1086 -14 q 853 42 935 -14 q 719 193 771 97 q 590 40 668 94 q 414 -14 513 -14 m 415 92 q 510 113 467 92 q 587 169 554 133 q 638 255 619 206 q 657 361 657 304 q 638 467 657 418 q 588 553 619 517 q 511 611 556 590 q 417 632 467 632 q 322 610 367 632 q 245 552 278 589 q 194 465 213 515 q 175 358 175 415 q 194 253 175 301 q 244 168 213 204 q 321 112 276 132 q 415 92 365 92 m 1271 400 q 1246 499 1267 454 q 1192 577 1225 544 q 1115 628 1158 610 q 1022 646 1071 646 q 931 628 974 646 q 857 577 889 610 q 806 499 825 544 q 783 400 786 454 l 1271 400 z "},"ò":{ha:832,x_min:50,x_max:782,o:"m 415 -14 q 266 17 333 -14 q 151 99 199 47 q 76 218 103 150 q 50 361 50 286 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 m 272 1014 l 393 1014 l 475 874 l 396 846 l 272 1014 z "},"ő":{ha:832,x_min:50,x_max:782,o:"m 328 846 l 264 874 l 339 1014 l 444 1014 l 328 846 m 517 846 l 453 874 l 528 1014 l 633 1014 l 517 846 m 415 -14 q 266 17 333 -14 q 151 99 199 47 q 76 218 103 150 q 50 361 50 286 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 z "},"ō":{ha:832,x_min:50,x_max:782,o:"m 214 908 l 214 989 l 619 989 l 619 908 l 214 908 m 415 -14 q 266 17 333 -14 q 151 99 199 47 q 76 218 103 150 q 50 361 50 286 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 z "},"⅛":{ha:1232,x_min:63,x_max:1183,o:"m 1183 160 q 1165 92 1183 122 q 1114 40 1146 61 q 1040 6 1082 18 q 951 -7 999 -7 q 860 6 901 -7 q 788 42 818 19 q 740 97 757 65 q 722 163 722 128 q 733 211 722 189 q 760 251 743 233 q 801 281 778 268 q 847 303 824 294 q 776 346 807 318 q 744 417 744 374 q 763 478 744 450 q 811 524 782 506 q 878 553 840 543 q 953 564 915 564 q 1028 553 990 564 q 1094 524 1065 543 q 1142 478 1124 506 q 1161 418 1161 451 q 1131 347 1161 376 q 1057 303 1101 318 q 1147 248 1111 283 q 1183 160 1183 213 m 1106 168 q 1092 210 1106 192 q 1056 242 1078 229 q 1007 261 1035 254 q 953 268 979 268 q 896 261 924 268 q 847 240 868 254 q 813 208 826 226 q 800 167 800 189 q 814 125 800 143 q 850 94 828 107 q 899 76 872 82 q 954 69 926 69 q 1009 76 982 69 q 1058 97 1036 83 q 1092 128 1079 110 q 1106 168 1106 146 m 822 410 q 834 376 822 390 q 865 351 846 361 q 906 336 883 342 q 953 331 929 331 q 999 336 975 331 q 1042 352 1022 342 q 1073 377 1061 363 q 1085 411 1085 392 q 1074 444 1085 429 q 1044 469 1063 458 q 1001 485 1025 479 q 953 490 978 490 q 861 469 900 490 q 822 410 822 447 m 375 521 l 375 444 l 83 444 l 83 521 l 194 521 l 194 929 q 172 909 188 921 q 138 887 157 897 q 99 869 119 876 q 63 861 79 861 l 63 938 q 108 949 85 938 q 150 975 131 961 q 182 1001 169 989 q 194 1015 194 1014 l 272 1015 l 272 521 l 375 521 m 172 46 l 561 514 l 933 993 l 993 942 l 608 476 l 231 -7 l 172 46 z "},"¹":{ha:389,x_min:47,x_max:360,o:"m 360 632 l 360 556 l 68 556 l 68 632 l 179 632 l 179 1040 q 157 1020 172 1032 q 123 998 142 1008 q 84 980 104 988 q 47 972 64 972 l 47 1049 q 92 1060 69 1049 q 135 1086 115 1072 q 167 1113 154 1100 q 179 1126 179 1125 l 257 1126 l 257 632 l 360 632 z "},"½":{ha:1239,x_min:61,x_max:1182,o:"m 746 0 q 756 95 746 54 q 786 167 765 136 q 840 220 807 197 q 917 261 872 243 q 979 285 947 274 q 1038 313 1011 297 q 1081 349 1064 328 q 1097 400 1097 369 q 1065 469 1097 442 q 968 496 1032 496 q 910 489 936 496 q 863 471 883 482 q 826 447 842 460 q 799 421 810 433 l 751 476 q 776 502 758 486 q 822 533 793 518 q 890 560 850 549 q 979 571 929 571 q 1130 523 1079 571 q 1181 399 1181 475 q 1162 325 1181 354 q 1116 276 1143 296 q 1056 243 1089 256 q 997 222 1024 231 q 929 190 956 208 q 888 153 903 172 q 869 113 874 133 q 864 75 864 93 l 1182 75 l 1182 0 l 746 0 m 374 521 l 374 444 l 82 444 l 82 521 l 193 521 l 193 929 q 171 909 186 921 q 137 887 156 897 q 98 869 118 876 q 61 861 78 861 l 61 938 q 106 949 83 938 q 149 975 129 961 q 181 1001 168 989 q 193 1015 193 1014 l 271 1015 l 271 521 l 374 521 m 153 46 l 542 514 l 914 993 l 974 942 l 589 476 l 211 -7 l 153 46 z "},"₂":{ha:556,x_min:47,x_max:500,o:"m 47 -111 q 58 -16 47 -57 q 90 56 68 25 q 145 109 111 86 q 225 150 179 132 q 290 174 257 163 q 351 201 324 186 q 395 238 378 217 q 413 289 413 258 q 378 358 413 331 q 278 385 344 385 q 217 378 244 385 q 168 360 190 371 q 130 335 146 349 q 103 310 114 322 l 53 365 q 78 391 60 375 q 126 422 97 407 q 197 449 156 438 q 289 460 238 460 q 446 412 393 460 q 499 288 499 364 q 479 214 499 243 q 431 165 460 185 q 369 132 403 144 q 308 111 336 119 q 238 79 265 97 q 196 42 211 61 q 175 2 181 22 q 169 -36 169 -18 l 500 -36 l 500 -111 l 47 -111 z "},"₁":{ha:418,x_min:47,x_max:390,o:"m 390 -36 l 390 -111 l 68 -111 l 68 -36 l 194 -36 l 194 374 q 169 352 186 364 q 132 330 153 340 q 88 313 111 319 q 47 306 65 306 l 47 382 q 98 394 72 382 q 145 419 124 406 q 181 446 167 433 q 194 460 194 458 l 272 460 l 272 -36 l 390 -36 z "},"¼":{ha:1192,x_min:61,x_max:1143,o:"m 985 0 l 985 139 l 671 139 l 671 213 l 1008 564 l 1061 564 l 1061 214 l 1143 214 l 1143 139 l 1061 139 l 1061 0 l 985 0 m 750 214 l 988 214 l 988 464 l 750 214 m 374 521 l 374 444 l 82 444 l 82 521 l 193 521 l 193 929 q 171 909 186 921 q 137 887 156 897 q 98 869 118 876 q 61 861 78 861 l 61 938 q 106 949 83 938 q 149 975 129 961 q 181 1001 168 989 q 193 1015 193 1014 l 271 1015 l 271 521 l 374 521 m 204 46 l 593 514 l 965 993 l 1025 942 l 640 476 l 263 -7 l 204 46 z "},"⅓":{ha:1235,x_min:64,x_max:1185,o:"m 953 -7 q 806 24 865 -7 q 733 113 747 56 l 778 164 q 792 133 779 149 q 828 102 806 117 q 883 78 851 88 q 951 69 914 69 q 1062 94 1017 69 q 1107 160 1107 118 q 1051 231 1107 206 q 900 256 996 256 l 868 256 l 868 325 l 900 325 q 1038 346 988 325 q 1088 411 1088 367 q 1045 476 1088 453 q 949 500 1003 500 q 851 479 892 500 q 789 425 811 458 l 738 485 q 824 548 765 525 q 949 571 882 571 q 1036 559 996 571 q 1106 526 1076 547 q 1153 478 1136 506 q 1169 417 1169 450 q 1137 337 1169 368 q 1042 293 1104 306 q 1147 243 1108 283 q 1185 149 1185 203 q 1166 82 1185 111 q 1115 33 1147 53 q 1040 3 1082 13 q 953 -7 999 -7 m 376 521 l 376 444 l 85 444 l 85 521 l 196 521 l 196 929 q 174 909 189 921 q 140 887 158 897 q 101 869 121 876 q 64 861 81 861 l 64 938 q 109 949 86 938 q 151 975 132 961 q 183 1001 171 989 q 196 1015 196 1014 l 274 1015 l 274 521 l 376 521 m 156 46 l 544 514 l 917 993 l 976 942 l 592 476 l 214 -7 l 156 46 z "},"₃":{ha:549,x_min:44,x_max:496,o:"m 264 -118 q 117 -87 176 -118 q 44 1 58 -56 l 89 53 q 103 22 90 38 q 140 -9 117 6 q 194 -33 163 -24 q 263 -42 225 -42 q 373 -17 328 -42 q 418 49 418 7 q 363 119 418 94 q 211 144 307 144 l 179 144 l 179 214 l 211 214 q 349 235 299 214 q 399 300 399 256 q 356 365 399 342 q 260 389 314 389 q 163 368 203 389 q 100 314 122 347 l 49 374 q 135 437 76 414 q 260 460 193 460 q 347 448 307 460 q 417 415 388 436 q 464 367 447 394 q 481 306 481 339 q 448 226 481 257 q 353 182 415 194 q 458 132 419 172 q 496 38 496 92 q 477 -29 496 0 q 426 -78 458 -58 q 351 -108 393 -99 q 264 -118 310 -118 z "},"ǫ":{ha:832,x_min:50,x_max:782,o:"m 413 -258 q 325 -219 354 -247 q 296 -151 296 -190 q 393 -12 296 -82 q 252 23 315 -8 q 144 106 189 54 q 75 222 100 157 q 50 361 50 288 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 760 231 782 293 q 698 119 738 168 q 601 35 658 69 q 476 -8 544 1 q 392 -74 418 -44 q 367 -135 367 -104 q 443 -194 367 -186 l 413 -258 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 z "},"ª":{ha:608,x_min:64,x_max:532,o:"m 229 478 q 164 490 194 478 q 111 522 133 501 q 76 571 89 543 q 64 632 64 599 q 122 744 64 701 q 271 788 179 788 q 342 781 307 788 q 404 764 376 775 l 404 799 q 372 886 404 854 q 281 918 340 918 q 203 903 242 918 q 124 861 165 889 l 92 924 q 289 988 189 988 q 446 936 389 988 q 503 788 503 885 l 503 606 q 532 572 503 574 l 532 486 q 509 483 518 483 q 489 482 500 482 q 441 497 458 482 q 421 536 424 513 l 419 568 q 335 501 385 524 q 229 478 286 478 m 257 551 q 332 566 297 551 q 386 604 367 581 q 404 640 404 621 l 404 707 q 347 723 378 718 q 288 728 317 728 q 193 704 229 728 q 157 640 157 681 q 185 577 157 603 q 257 551 214 551 z "},"º":{ha:622,x_min:58,x_max:564,o:"m 311 478 q 208 499 254 478 q 128 554 161 519 q 76 635 94 589 q 58 732 58 682 q 76 830 58 783 q 128 912 94 876 q 208 967 161 947 q 311 988 254 988 q 415 967 368 988 q 494 912 461 947 q 546 830 528 876 q 564 732 564 783 q 546 635 564 682 q 494 554 528 589 q 415 499 461 519 q 311 478 368 478 m 158 731 q 170 664 158 694 q 203 611 182 633 q 251 576 224 589 q 311 563 279 563 q 371 576 343 563 q 419 612 399 589 q 452 666 440 635 q 464 733 464 697 q 452 800 464 769 q 419 853 440 831 q 371 889 399 876 q 311 901 343 901 q 251 888 279 901 q 203 852 224 875 q 170 798 182 829 q 158 731 158 767 z "},"ø":{ha:832,x_min:50,x_max:782,o:"m 111 -3 l 174 75 q 83 202 115 128 q 50 361 50 276 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 518 724 469 738 q 607 685 567 710 l 640 728 l 718 728 l 656 649 q 749 521 715 596 q 782 361 782 446 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 q 221 40 307 -14 l 188 -3 l 111 -3 m 415 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 637 470 657 421 q 583 556 617 519 l 289 131 q 415 92 344 92 m 175 360 q 194 252 175 301 q 247 167 214 203 l 540 593 q 481 622 513 611 q 415 632 450 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 z "},"ǿ":{ha:832,x_min:50,x_max:782,o:"m 436 846 l 356 874 l 436 1014 l 558 1014 l 436 846 m 111 -3 l 174 75 q 83 202 115 128 q 50 361 50 276 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 518 724 469 738 q 607 685 567 710 l 640 728 l 718 728 l 656 649 q 749 521 715 596 q 782 361 782 446 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 q 221 40 307 -14 l 188 -3 l 111 -3 m 415 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 637 470 657 421 q 583 556 617 519 l 289 131 q 415 92 344 92 m 175 360 q 194 252 175 301 q 247 167 214 203 l 540 593 q 481 622 513 611 q 415 632 450 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 z "},"õ":{ha:832,x_min:50,x_max:782,o:"m 415 -14 q 266 17 333 -14 q 151 99 199 47 q 76 218 103 150 q 50 361 50 286 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 m 503 871 q 448 880 471 871 q 405 900 425 889 q 365 920 385 911 q 324 929 346 929 q 287 919 300 929 q 267 898 274 910 q 258 875 260 886 q 256 863 256 864 l 183 863 q 190 894 183 871 q 211 943 196 918 q 253 987 226 968 q 321 1006 279 1006 q 372 997 350 1006 q 415 976 394 988 q 455 955 435 964 q 500 946 475 946 q 542 956 526 946 q 565 978 557 965 q 576 1001 574 990 q 578 1014 578 1011 l 650 1014 q 644 983 650 1006 q 621 935 638 960 q 576 890 604 910 q 503 871 547 871 z "},p:{ha:865,x_min:99,x_max:814,o:"m 489 -14 q 330 31 399 -14 q 221 143 261 75 l 221 -296 l 99 -296 l 99 725 l 207 725 l 207 589 q 319 697 250 656 q 471 738 388 738 q 608 707 546 738 q 717 624 671 676 q 788 504 763 572 q 814 363 814 436 q 790 216 814 285 q 724 97 767 147 q 621 16 681 46 q 489 -14 561 -14 m 451 92 q 549 115 506 92 q 624 176 593 138 q 672 263 656 214 q 689 363 689 311 q 669 466 689 417 q 617 552 650 515 q 538 610 583 589 q 440 632 493 632 q 372 619 407 632 q 305 584 336 606 q 251 533 274 563 q 221 469 228 503 l 221 263 q 260 195 236 226 q 314 141 283 164 q 379 105 344 118 q 451 92 414 92 z "},"¶":{ha:858,x_min:49,x_max:797,o:"m 49 646 q 151 897 49 807 q 440 986 254 986 l 797 986 l 797 892 l 700 892 l 700 -111 l 594 -111 l 594 311 l 501 311 l 501 -111 l 396 -111 l 396 311 q 252 336 317 313 q 142 403 188 360 q 73 508 97 446 q 49 646 49 569 m 153 649 q 172 545 153 589 q 225 471 192 501 q 302 424 258 440 q 396 406 346 408 l 396 892 q 215 824 278 889 q 153 649 153 760 m 594 892 l 501 892 l 501 406 l 594 406 l 594 892 z "},"(":{ha:393,x_min:58,x_max:350,o:"m 58 481 q 74 621 58 551 q 116 759 89 690 q 178 896 143 828 q 256 1033 214 964 l 350 992 q 292 892 324 951 q 235 763 261 832 q 190 619 208 693 q 172 476 172 544 q 219 241 172 367 q 347 -11 267 115 l 257 -58 q 114 209 169 72 q 58 481 58 346 z "},")":{ha:393,x_min:43,x_max:335,o:"m 335 481 q 279 209 335 346 q 136 -58 224 72 l 46 -11 q 174 241 126 115 q 221 476 221 367 q 203 619 221 544 q 158 763 185 693 q 101 892 132 832 q 43 992 69 951 l 138 1033 q 215 896 179 964 q 277 759 250 828 q 319 621 304 690 q 335 481 335 551 z "},"%":{ha:1018,x_min:51,x_max:967,o:"m 265 594 q 182 610 221 594 q 114 653 143 626 q 68 718 85 681 q 51 797 51 756 q 68 876 51 839 q 114 941 85 914 q 182 984 143 968 q 265 1000 221 1000 q 349 984 310 1000 q 417 941 388 968 q 463 876 446 914 q 479 797 479 839 q 463 718 479 756 q 417 653 446 681 q 349 610 388 626 q 265 594 310 594 m 265 661 q 315 672 292 661 q 354 702 338 683 q 381 745 371 721 q 390 797 390 769 q 380 850 390 825 q 353 894 369 875 q 313 923 336 913 q 265 933 290 933 q 216 922 239 933 q 176 892 193 911 q 150 849 160 874 q 140 797 140 824 q 150 744 140 769 q 177 701 160 719 q 217 672 194 682 q 265 661 240 661 m 753 -14 q 669 2 708 -14 q 601 45 631 18 q 556 110 572 72 q 539 189 539 147 q 556 268 539 231 q 601 333 572 306 q 669 376 631 360 q 753 392 708 392 q 836 376 797 392 q 904 333 875 360 q 950 268 933 306 q 967 189 967 231 q 950 110 967 147 q 904 45 933 72 q 836 2 875 18 q 753 -14 797 -14 m 753 53 q 802 64 779 53 q 842 94 825 75 q 868 137 858 113 q 878 189 878 161 q 867 242 878 217 q 840 285 857 267 q 801 315 824 304 q 753 325 778 325 q 703 314 726 325 q 664 284 681 303 q 638 240 647 265 q 628 189 628 215 q 638 136 628 161 q 665 92 647 111 q 705 63 682 74 q 753 53 728 53 m 99 46 l 488 514 l 860 993 l 919 942 l 535 476 l 157 -7 l 99 46 z "},".":{ha:281,x_min:89,x_max:192,o:"m 89 0 l 89 156 l 192 156 l 192 0 l 89 0 z "},"‰":{ha:1522,x_min:60,x_max:1476,o:"m 274 594 q 190 610 229 594 q 122 653 151 626 q 76 718 93 681 q 60 797 60 756 q 76 876 60 839 q 122 941 93 914 q 190 984 151 968 q 274 1000 229 1000 q 357 984 318 1000 q 425 941 396 968 q 471 876 454 914 q 488 797 488 839 q 471 718 488 756 q 425 653 454 681 q 357 610 396 626 q 274 594 318 594 m 274 661 q 323 672 300 661 q 363 702 346 683 q 389 745 379 721 q 399 797 399 769 q 388 850 399 825 q 361 894 378 875 q 322 923 344 913 q 274 933 299 933 q 224 922 247 933 q 185 892 201 911 q 158 849 168 874 q 149 797 149 824 q 159 744 149 769 q 186 701 169 719 q 226 672 203 682 q 274 661 249 661 m 761 -14 q 678 2 717 -14 q 610 45 639 18 q 564 110 581 72 q 547 189 547 147 q 564 268 547 231 q 610 333 581 306 q 678 376 639 360 q 761 392 717 392 q 844 376 806 392 q 913 333 883 360 q 958 268 942 306 q 975 189 975 231 q 958 110 975 147 q 913 45 942 72 q 844 2 883 18 q 761 -14 806 -14 m 761 53 q 810 64 788 53 q 850 94 833 75 q 876 137 867 113 q 886 189 886 161 q 876 242 886 217 q 849 285 865 267 q 809 315 832 304 q 761 325 786 325 q 712 314 735 325 q 672 284 689 303 q 646 240 656 265 q 636 189 636 215 q 646 136 636 161 q 673 92 656 111 q 713 63 690 74 q 761 53 736 53 m 1263 -14 q 1179 2 1218 -14 q 1111 45 1140 18 q 1065 110 1082 72 q 1049 189 1049 147 q 1065 268 1049 231 q 1111 333 1082 306 q 1179 376 1140 360 q 1263 392 1218 392 q 1346 376 1307 392 q 1414 333 1385 360 q 1460 268 1443 306 q 1476 189 1476 231 q 1460 110 1476 147 q 1414 45 1443 72 q 1346 2 1385 18 q 1263 -14 1307 -14 m 1263 53 q 1312 64 1289 53 q 1351 94 1335 75 q 1378 137 1368 113 q 1388 189 1388 161 q 1377 242 1388 217 q 1350 285 1367 267 q 1310 315 1333 304 q 1263 325 1288 325 q 1213 314 1236 325 q 1174 284 1190 303 q 1147 240 1157 265 q 1138 189 1138 215 q 1147 136 1138 161 q 1174 92 1157 111 q 1215 63 1192 74 q 1263 53 1238 53 m 107 46 l 496 514 l 868 993 l 928 942 l 543 476 l 165 -7 l 107 46 z "},"+":{ha:578,x_min:69,x_max:508,o:"m 508 543 l 508 443 l 344 443 l 344 265 l 233 265 l 233 443 l 69 443 l 69 543 l 233 543 l 233 721 l 344 721 l 344 543 l 508 543 z "},"±":{ha:647,x_min:93,x_max:554,o:"m 93 71 l 93 171 l 554 171 l 554 71 l 93 71 m 554 561 l 554 461 l 379 461 l 379 272 l 268 272 l 268 461 l 93 461 l 93 561 l 268 561 l 268 750 l 379 750 l 379 561 l 554 561 z "},q:{ha:865,x_min:51,x_max:806,o:"m 376 -14 q 244 17 304 -14 q 142 99 185 47 q 75 219 99 151 q 51 363 51 288 q 78 507 51 439 q 151 626 104 575 q 260 708 197 678 q 394 738 322 738 q 549 696 479 738 q 658 588 618 654 l 658 725 l 767 725 l 767 -140 q 806 -185 767 -183 l 806 -290 q 740 -294 772 -294 q 673 -266 701 -294 q 644 -197 644 -237 l 644 143 q 376 -14 544 -14 m 418 92 q 552 137 496 92 q 644 247 608 182 l 644 456 q 615 523 638 490 q 562 579 593 556 q 494 617 531 603 q 421 632 457 632 q 322 609 367 632 q 245 548 278 586 q 194 460 213 510 q 176 360 176 411 q 194 256 176 306 q 244 171 213 207 q 321 113 276 135 q 418 92 365 92 z "},"?":{ha:665,x_min:47,x_max:614,o:"m 200 293 q 226 424 200 368 q 317 521 253 481 q 374 556 342 538 q 436 598 407 574 q 485 656 465 622 q 506 738 506 690 q 491 806 506 776 q 453 856 476 836 q 399 887 429 876 q 335 897 368 897 q 269 887 300 897 q 211 858 238 876 q 164 816 185 840 q 129 765 143 792 l 47 819 q 96 896 65 863 q 165 952 126 929 q 248 987 204 975 q 338 999 292 999 q 439 983 389 999 q 528 933 489 967 q 590 850 567 900 q 614 732 614 800 q 599 642 614 679 q 561 576 585 604 q 506 528 538 549 q 439 488 474 507 q 389 458 414 474 q 345 422 364 443 q 315 369 326 400 q 303 293 303 339 l 200 293 m 203 0 l 203 161 l 306 161 l 306 0 l 203 0 z "},"¿":{ha:657,x_min:46,x_max:613,o:"m 460 410 q 433 278 460 335 q 343 182 407 222 q 285 147 318 165 q 224 105 253 129 q 174 47 194 81 q 154 -35 154 13 q 169 -103 154 -74 q 207 -153 183 -133 q 261 -184 231 -174 q 325 -194 292 -194 q 391 -184 360 -194 q 449 -156 422 -174 q 496 -113 475 -137 q 531 -62 517 -89 l 613 -117 q 563 -193 593 -160 q 494 -249 533 -226 q 412 -284 456 -272 q 322 -296 368 -296 q 221 -280 271 -296 q 132 -231 171 -264 q 69 -147 93 -197 q 46 -29 46 -97 q 60 61 46 24 q 99 126 75 99 q 154 175 122 154 q 221 215 186 196 q 271 244 246 229 q 315 281 296 260 q 345 333 333 303 q 357 410 357 364 l 460 410 m 457 703 l 457 542 l 354 542 l 354 703 l 457 703 z "},'"':{ha:450,x_min:93,x_max:357,o:"m 93 697 l 93 997 l 199 997 l 199 697 l 93 697 m 251 697 l 251 997 l 357 997 l 357 697 l 251 697 z "},"„":{ha:485,x_min:89,x_max:396,o:"m 103 -160 l 131 0 l 89 0 l 89 158 l 204 158 l 204 0 l 163 -160 l 103 -160 m 294 -160 l 322 0 l 281 0 l 281 158 l 396 158 l 396 0 l 354 -160 l 294 -160 z "},"‚":{ha:293,x_min:89,x_max:204,o:"m 103 -160 l 131 0 l 89 0 l 89 158 l 204 158 l 204 0 l 163 -160 l 103 -160 z "},"“":{ha:479,x_min:86,x_max:393,o:"m 188 1014 l 160 854 l 201 854 l 201 696 l 86 696 l 86 854 l 128 1014 l 188 1014 m 379 1014 l 351 854 l 393 854 l 393 696 l 278 696 l 278 854 l 319 1014 l 379 1014 z "},"‘":{ha:288,x_min:86,x_max:201,o:"m 188 1014 l 160 854 l 201 854 l 201 696 l 86 696 l 86 854 l 128 1014 l 188 1014 z "},"”":{ha:469,x_min:85,x_max:392,o:"m 99 696 l 126 856 l 85 856 l 85 1014 l 200 1014 l 200 856 l 158 696 l 99 696 m 290 696 l 318 856 l 276 856 l 276 1014 l 392 1014 l 392 856 l 350 696 l 290 696 z "},"’":{ha:278,x_min:85,x_max:200,o:"m 99 696 l 126 856 l 85 856 l 85 1014 l 200 1014 l 200 856 l 158 696 l 99 696 z "},"'":{ha:292,x_min:93,x_max:199,o:"m 93 696 l 93 997 l 199 997 l 199 696 l 93 696 z "},r:{ha:504,x_min:99,x_max:482,o:"m 482 618 q 320 571 390 615 q 221 447 250 526 l 221 0 l 99 0 l 99 725 l 213 725 l 213 557 q 311 678 250 632 q 442 731 372 725 q 465 731 456 731 q 482 729 475 731 l 482 618 z "},"ŕ":{ha:504,x_min:99,x_max:482,o:"m 314 846 l 233 874 l 314 1014 l 436 1014 l 314 846 m 482 618 q 320 571 390 615 q 221 447 250 526 l 221 0 l 99 0 l 99 725 l 213 725 l 213 557 q 311 678 250 632 q 442 731 372 725 q 465 731 456 731 q 482 729 475 731 l 482 618 z "},"ř":{ha:504,x_min:99,x_max:482,o:"m 175 1014 l 293 926 l 411 1014 l 478 981 l 338 856 l 249 856 l 108 981 l 175 1014 m 482 618 q 320 571 390 615 q 221 447 250 526 l 221 0 l 99 0 l 99 725 l 213 725 l 213 557 q 311 678 250 632 q 442 731 372 725 q 465 731 456 731 q 482 729 475 731 l 482 618 z "},"ŗ":{ha:504,x_min:97,x_max:482,o:"m 104 -296 l 132 -183 l 97 -183 l 97 -67 l 206 -67 l 206 -183 l 164 -296 l 104 -296 m 482 618 q 320 571 390 615 q 221 447 250 526 l 221 0 l 99 0 l 99 725 l 213 725 l 213 557 q 311 678 250 632 q 442 731 372 725 q 465 731 456 731 q 482 729 475 731 l 482 618 z "},"®":{ha:1161,x_min:65,x_max:1096,o:"m 579 -10 q 374 28 468 -10 q 212 134 281 67 q 104 293 143 201 q 65 493 65 385 q 104 692 65 600 q 212 850 143 783 q 374 955 281 917 q 579 993 468 993 q 785 955 690 993 q 949 850 879 917 q 1057 692 1018 783 q 1096 493 1096 600 q 1057 293 1096 385 q 949 134 1018 201 q 785 28 879 67 q 579 -10 690 -10 m 579 42 q 760 74 676 42 q 905 167 843 107 q 1002 309 967 226 q 1038 492 1038 392 q 1003 669 1038 588 q 907 812 968 751 q 762 906 846 872 q 579 940 678 940 q 397 906 481 940 q 252 812 313 872 q 158 669 192 751 q 124 493 124 588 q 158 315 124 397 q 252 172 192 232 q 397 76 313 111 q 579 42 481 42 m 364 804 l 631 804 q 707 787 672 804 q 767 741 742 769 q 806 676 792 713 q 819 604 819 640 q 783 487 819 539 q 686 419 746 435 l 838 181 l 736 181 l 594 406 l 454 406 l 454 181 l 364 181 l 364 804 m 626 485 q 703 518 676 485 q 731 604 731 551 q 699 690 731 657 q 622 722 668 722 l 454 722 l 454 485 l 626 485 z "},s:{ha:686,x_min:35,x_max:640,o:"m 353 -14 q 181 13 265 -14 q 35 92 96 40 l 88 174 q 215 101 151 125 q 350 76 279 76 q 476 108 429 76 q 522 196 522 139 q 510 241 522 222 q 472 274 497 260 q 408 299 447 288 q 318 322 369 310 q 206 354 253 339 q 128 390 158 369 q 83 440 97 411 q 69 513 69 469 q 91 609 69 567 q 150 680 113 651 q 238 723 188 708 q 347 738 289 738 q 500 711 429 738 q 619 642 571 685 l 564 568 q 461 628 518 608 q 344 649 404 649 q 231 620 278 649 q 185 529 185 592 q 194 488 185 504 q 224 458 203 471 q 277 436 244 446 q 356 415 310 426 q 481 381 428 399 q 570 340 535 364 q 623 285 606 317 q 640 207 640 253 q 563 46 640 106 q 353 -14 485 -14 z "},"ﬆ":{ha:1150,x_min:43,x_max:1135,o:"m 1135 36 q 1105 23 1124 31 q 1063 8 1086 15 q 1014 -5 1040 0 q 961 -10 988 -10 q 844 27 892 -10 q 796 142 796 64 l 796 629 l 697 629 l 697 725 l 796 725 q 792 845 796 797 q 774 921 788 893 q 735 960 760 949 q 672 972 711 972 q 602 962 631 972 q 556 933 574 951 q 531 891 539 915 q 522 839 522 867 q 532 770 522 803 q 554 711 542 738 q 578 667 567 685 q 594 643 590 649 l 540 569 q 439 632 492 615 q 338 649 386 649 q 276 642 306 649 q 224 623 247 636 q 186 587 200 610 q 172 531 172 564 q 190 472 172 494 q 234 438 207 450 q 294 419 261 425 q 357 408 326 413 q 463 388 413 400 q 552 354 514 376 q 613 297 590 332 q 635 207 635 261 q 611 107 635 149 q 548 38 588 65 q 457 -1 508 11 q 351 -14 406 -14 q 180 16 263 -14 q 43 89 97 46 l 93 172 q 350 76 221 76 q 412 83 381 76 q 467 103 443 89 q 507 140 492 117 q 522 194 522 163 q 503 253 522 232 q 456 286 485 274 q 391 304 426 299 q 322 315 356 310 q 218 338 265 325 q 136 372 171 350 q 82 428 101 394 q 63 513 63 461 q 86 614 63 571 q 148 684 110 657 q 234 724 186 711 q 331 738 282 738 q 422 728 374 738 q 506 694 469 718 q 476 763 488 731 q 464 840 464 794 q 476 915 464 879 q 517 976 489 950 q 589 1018 544 1003 q 699 1033 633 1033 q 820 1014 776 1033 q 886 956 864 994 q 913 859 908 917 q 918 725 918 801 l 1079 725 l 1079 629 l 918 629 l 918 179 q 942 121 918 139 q 1001 103 967 103 q 1065 115 1035 103 q 1107 133 1096 126 l 1135 36 z "},"ś":{ha:686,x_min:35,x_max:640,o:"m 365 846 l 285 874 l 365 1014 l 488 1014 l 365 846 m 353 -14 q 181 13 265 -14 q 35 92 96 40 l 88 174 q 215 101 151 125 q 350 76 279 76 q 476 108 429 76 q 522 196 522 139 q 510 241 522 222 q 472 274 497 260 q 408 299 447 288 q 318 322 369 310 q 206 354 253 339 q 128 390 158 369 q 83 440 97 411 q 69 513 69 469 q 91 609 69 567 q 150 680 113 651 q 238 723 188 708 q 347 738 289 738 q 500 711 429 738 q 619 642 571 685 l 564 568 q 461 628 518 608 q 344 649 404 649 q 231 620 278 649 q 185 529 185 592 q 194 488 185 504 q 224 458 203 471 q 277 436 244 446 q 356 415 310 426 q 481 381 428 399 q 570 340 535 364 q 623 285 606 317 q 640 207 640 253 q 563 46 640 106 q 353 -14 485 -14 z "},"š":{ha:686,x_min:35,x_max:640,o:"m 226 1014 l 344 926 l 463 1014 l 529 981 l 389 856 l 300 856 l 160 981 l 226 1014 m 353 -14 q 181 13 265 -14 q 35 92 96 40 l 88 174 q 215 101 151 125 q 350 76 279 76 q 476 108 429 76 q 522 196 522 139 q 510 241 522 222 q 472 274 497 260 q 408 299 447 288 q 318 322 369 310 q 206 354 253 339 q 128 390 158 369 q 83 440 97 411 q 69 513 69 469 q 91 609 69 567 q 150 680 113 651 q 238 723 188 708 q 347 738 289 738 q 500 711 429 738 q 619 642 571 685 l 564 568 q 461 628 518 608 q 344 649 404 649 q 231 620 278 649 q 185 529 185 592 q 194 488 185 504 q 224 458 203 471 q 277 436 244 446 q 356 415 310 426 q 481 381 428 399 q 570 340 535 364 q 623 285 606 317 q 640 207 640 253 q 563 46 640 106 q 353 -14 485 -14 z "},"ə":{ha:821,x_min:38,x_max:771,o:"m 406 -14 q 256 16 324 -14 q 140 97 189 46 q 65 217 92 149 q 38 361 38 285 q 38 383 38 369 q 40 403 39 396 l 642 403 q 617 501 638 457 q 563 578 596 546 q 487 627 529 610 q 397 644 444 644 q 332 635 364 644 q 272 611 300 626 q 223 574 244 596 q 190 525 201 551 l 85 554 q 134 627 103 593 q 206 685 165 661 q 297 724 247 710 q 403 738 347 738 q 551 708 483 738 q 668 626 619 678 q 744 505 717 574 q 771 358 771 436 q 744 215 771 282 q 670 97 718 147 q 555 16 622 46 q 406 -14 488 -14 m 407 78 q 497 96 456 78 q 570 147 539 114 q 621 224 601 179 q 644 322 640 269 l 156 322 q 181 223 160 268 q 237 146 203 178 q 315 96 271 114 q 407 78 358 78 z "},"ŝ":{ha:686,x_min:35,x_max:640,o:"m 160 889 l 300 1014 l 389 1014 l 529 889 l 463 856 l 344 943 l 226 856 l 160 889 m 353 -14 q 181 13 265 -14 q 35 92 96 40 l 88 174 q 215 101 151 125 q 350 76 279 76 q 476 108 429 76 q 522 196 522 139 q 510 241 522 222 q 472 274 497 260 q 408 299 447 288 q 318 322 369 310 q 206 354 253 339 q 128 390 158 369 q 83 440 97 411 q 69 513 69 469 q 91 609 69 567 q 150 680 113 651 q 238 723 188 708 q 347 738 289 738 q 500 711 429 738 q 619 642 571 685 l 564 568 q 461 628 518 608 q 344 649 404 649 q 231 620 278 649 q 185 529 185 592 q 194 488 185 504 q 224 458 203 471 q 277 436 244 446 q 356 415 310 426 q 481 381 428 399 q 570 340 535 364 q 623 285 606 317 q 640 207 640 253 q 563 46 640 106 q 353 -14 485 -14 z "},"§":{ha:718,x_min:65,x_max:657,o:"m 597 279 q 657 135 657 239 q 629 19 657 68 q 559 -60 601 -29 q 466 -107 517 -92 q 368 -122 415 -122 q 274 -110 318 -122 q 195 -78 231 -97 q 132 -35 160 -58 q 85 10 104 -11 l 164 85 q 260 16 213 38 q 364 -6 308 -6 q 424 3 394 -6 q 478 30 454 13 q 516 73 501 47 q 531 131 531 99 q 517 187 531 165 q 480 219 503 208 q 429 235 457 231 q 375 242 401 240 q 262 262 313 246 q 175 307 211 278 q 119 378 139 336 q 99 474 99 419 q 109 542 99 513 q 132 588 119 571 q 85 650 106 608 q 65 747 65 692 q 89 845 65 800 q 151 923 113 890 q 239 974 189 956 q 343 993 289 993 q 440 980 397 993 q 515 946 482 967 q 571 899 547 925 q 611 849 594 874 l 517 804 q 446 865 493 847 q 350 883 399 883 q 290 874 318 883 q 238 847 261 865 q 202 804 215 829 q 189 749 189 779 q 201 689 189 713 q 235 651 214 665 q 287 630 257 636 q 351 624 317 624 q 453 612 401 624 q 544 574 504 600 q 610 506 585 547 q 636 403 636 464 q 624 330 636 363 q 597 279 613 297 m 218 458 q 248 375 218 400 q 320 340 278 350 q 408 327 363 329 q 483 313 453 325 q 510 351 500 326 q 519 400 519 375 q 503 459 519 435 q 464 497 488 483 q 411 517 440 511 q 356 524 382 524 q 249 542 292 524 q 226 505 235 528 q 218 458 218 482 z "},";":{ha:307,x_min:96,x_max:211,o:"m 96 564 l 96 719 l 197 719 l 197 564 l 96 564 m 110 -112 l 138 11 l 96 11 l 96 156 l 211 156 l 211 11 l 169 -112 l 110 -112 z "},"⅞":{ha:1214,x_min:57,x_max:1164,o:"m 1164 160 q 1145 92 1164 122 q 1094 40 1126 61 q 1021 6 1063 18 q 932 -7 979 -7 q 840 6 882 -7 q 768 42 799 19 q 720 97 738 65 q 703 163 703 128 q 713 211 703 189 q 741 251 724 233 q 781 281 758 268 q 828 303 804 294 q 756 346 788 318 q 725 417 725 374 q 744 478 725 450 q 792 524 763 506 q 858 553 821 543 q 933 564 896 564 q 1008 553 971 564 q 1075 524 1046 543 q 1123 478 1104 506 q 1142 418 1142 451 q 1112 347 1142 376 q 1038 303 1082 318 q 1128 248 1092 283 q 1164 160 1164 213 m 1086 168 q 1072 210 1086 192 q 1037 242 1058 229 q 988 261 1015 254 q 933 268 960 268 q 876 261 904 268 q 828 240 849 254 q 794 208 807 226 q 781 167 781 189 q 794 125 781 143 q 831 94 808 107 q 880 76 853 82 q 935 69 907 69 q 990 76 963 69 q 1038 97 1017 83 q 1073 128 1060 110 q 1086 168 1086 146 m 803 410 q 815 376 803 390 q 845 351 826 361 q 887 336 864 342 q 933 331 910 331 q 979 336 956 331 q 1022 352 1003 342 q 1053 377 1042 363 q 1065 411 1065 392 q 1054 444 1065 429 q 1024 469 1043 458 q 982 485 1006 479 q 933 490 958 490 q 842 469 881 490 q 803 410 803 447 m 106 46 l 494 514 l 867 993 l 926 942 l 542 476 l 164 -7 l 106 46 m 399 938 l 57 938 l 57 1014 l 521 1014 l 189 451 l 101 451 l 399 938 z "},"⁷":{ha:507,x_min:35,x_max:499,o:"m 376 1049 l 35 1049 l 35 1125 l 499 1125 l 167 563 l 79 563 l 376 1049 z "},"₇":{ha:507,x_min:35,x_max:499,o:"m 378 376 l 35 376 l 35 453 l 499 453 l 167 -111 l 79 -111 l 378 376 z "},"₆":{ha:569,x_min:54,x_max:526,o:"m 526 76 q 508 1 526 36 q 458 -61 490 -35 q 383 -103 426 -87 q 290 -118 340 -118 q 119 -53 185 -118 q 54 131 54 13 q 122 375 54 293 q 301 457 189 457 q 416 432 364 457 q 496 361 468 407 l 450 310 q 389 365 431 344 q 299 385 347 385 q 174 333 221 385 q 126 185 128 281 q 195 244 147 222 q 296 265 243 265 q 388 251 346 265 q 460 210 429 236 q 509 150 492 185 q 526 76 526 115 m 293 -49 q 355 -39 326 -49 q 406 -12 383 -29 q 440 28 428 6 q 453 75 453 50 q 440 123 453 100 q 406 163 428 146 q 354 189 383 179 q 292 199 325 199 q 229 189 258 199 q 178 163 200 179 q 143 124 156 146 q 131 76 131 101 q 144 28 131 51 q 179 -12 157 6 q 231 -39 201 -29 q 293 -49 260 -49 z "},"⁶":{ha:568,x_min:53,x_max:525,o:"m 525 744 q 507 667 525 703 q 457 606 489 632 q 382 564 425 579 q 289 549 339 549 q 118 614 183 549 q 53 797 53 679 q 120 1043 53 961 q 300 1125 188 1125 q 415 1100 363 1125 q 494 1029 467 1075 l 449 978 q 388 1032 429 1011 q 297 1053 346 1053 q 173 1001 219 1053 q 125 853 126 949 q 194 912 146 890 q 294 933 242 933 q 386 919 344 933 q 459 878 428 904 q 508 818 490 853 q 525 744 525 783 m 292 619 q 353 629 325 619 q 404 656 382 639 q 439 696 426 674 q 451 743 451 718 q 439 791 451 768 q 404 831 426 814 q 353 857 382 847 q 290 867 324 867 q 228 857 257 867 q 176 831 199 847 q 142 792 154 814 q 129 744 129 769 q 142 697 129 719 q 178 656 156 674 q 229 629 200 639 q 292 619 258 619 z "},"Æ":{ha:1335,x_min:-35,x_max:1285,o:"m 594 986 l 1272 986 l 1272 875 l 751 875 l 751 558 l 1197 558 l 1197 447 l 751 447 l 751 111 l 1285 111 l 1285 0 l 628 0 l 628 289 l 282 289 l 101 0 l -35 0 l 594 986 m 619 400 l 619 840 l 338 400 l 619 400 z "},"£":{ha:711,x_min:74,x_max:656,o:"m 74 521 l 194 521 q 165 578 181 550 q 137 633 150 606 q 115 691 124 661 q 107 753 107 721 q 128 847 107 803 q 184 923 149 890 q 267 974 219 956 q 369 993 315 993 q 518 954 449 993 q 632 847 588 915 l 564 772 q 476 859 531 826 q 367 892 422 892 q 308 880 335 892 q 262 849 282 868 q 231 801 242 829 q 219 743 219 774 q 228 688 219 715 q 251 634 238 661 q 280 579 264 607 q 310 521 296 551 l 558 521 l 558 426 l 340 426 q 344 397 343 411 q 346 367 346 382 q 315 238 346 299 q 210 96 285 176 q 313 110 261 110 q 413 97 368 110 q 507 85 458 85 q 562 91 535 85 q 625 110 589 97 l 656 17 q 580 -11 619 -1 q 501 -21 540 -21 q 441 -15 469 -21 q 383 -3 413 -10 q 324 8 354 3 q 263 14 294 14 q 185 7 228 14 q 104 -11 142 0 l 74 78 q 201 228 163 163 q 239 361 239 293 q 231 426 239 394 l 74 426 l 74 521 z "},t:{ha:489,x_min:35,x_max:474,o:"m 474 36 q 444 23 463 31 q 403 8 426 15 q 353 -5 381 0 q 297 -10 326 -10 q 182 27 231 -10 q 133 142 133 64 l 133 629 l 35 629 l 35 725 l 133 725 l 133 967 l 256 967 l 256 725 l 418 725 l 418 629 l 256 629 l 256 179 q 282 121 258 139 q 338 103 306 103 q 403 115 374 103 q 444 133 433 126 l 474 36 z "},"ŧ":{ha:490,x_min:36,x_max:475,o:"m 475 36 q 446 23 464 31 q 405 8 428 15 q 355 -5 382 0 q 299 -10 328 -10 q 183 27 232 -10 q 135 142 135 64 l 135 408 l 36 408 l 36 486 l 135 486 l 135 629 l 36 629 l 36 725 l 135 725 l 135 967 l 257 967 l 257 725 l 419 725 l 419 629 l 257 629 l 257 486 l 419 486 l 419 408 l 257 408 l 257 179 q 283 121 260 139 q 339 103 307 103 q 405 115 375 103 q 446 133 435 126 l 475 36 z "},"ť":{ha:489,x_min:35,x_max:542,o:"m 419 846 l 339 874 l 419 1014 l 542 1014 l 419 846 m 474 36 q 444 23 463 31 q 403 8 426 15 q 353 -5 381 0 q 297 -10 326 -10 q 182 27 231 -10 q 133 142 133 64 l 133 629 l 35 629 l 35 725 l 133 725 l 133 967 l 256 967 l 256 725 l 418 725 l 418 629 l 256 629 l 256 179 q 282 121 258 139 q 338 103 306 103 q 403 115 374 103 q 444 133 433 126 l 474 36 z "},"þ":{ha:838,x_min:99,x_max:789,o:"m 789 357 q 760 213 788 282 q 683 90 732 143 q 570 6 635 38 q 431 -25 506 -25 q 304 8 358 -25 q 224 83 250 40 l 224 -296 l 99 -296 l 99 986 l 224 986 l 224 624 q 309 706 257 671 q 443 742 361 742 q 588 708 524 742 q 696 618 651 674 q 765 494 740 563 q 789 357 789 425 m 664 358 q 648 462 664 413 q 602 549 632 511 q 530 608 572 586 q 436 631 488 631 q 367 618 399 631 q 308 585 335 606 q 260 536 282 564 q 224 478 239 508 l 224 240 q 243 183 224 211 q 293 134 263 156 q 359 99 324 113 q 428 86 394 86 q 523 109 479 86 q 598 169 567 132 q 647 256 629 207 q 664 358 664 306 z "},"⅜":{ha:1239,x_min:57,x_max:1190,o:"m 276 436 q 130 468 189 436 q 57 556 71 500 l 101 608 q 116 577 103 593 q 152 547 129 561 q 206 523 175 532 q 275 514 238 514 q 385 538 340 514 q 431 604 431 563 q 375 674 431 650 q 224 699 319 699 l 192 699 l 192 769 l 224 769 q 361 790 311 769 q 411 856 411 811 q 369 921 411 897 q 272 944 326 944 q 175 924 215 944 q 113 869 135 903 l 61 929 q 147 992 89 969 q 272 1015 206 1015 q 360 1003 319 1015 q 430 971 400 992 q 476 922 460 950 q 493 860 493 893 q 460 781 493 811 q 365 738 428 750 q 470 688 432 728 q 508 593 508 647 q 490 526 508 556 q 438 476 471 496 q 364 447 406 457 q 276 436 322 436 m 1190 160 q 1172 92 1190 122 q 1121 40 1153 61 q 1047 6 1089 18 q 958 -7 1006 -7 q 867 6 908 -7 q 794 42 825 19 q 747 97 764 65 q 729 163 729 128 q 740 211 729 189 q 767 251 750 233 q 808 281 785 268 q 854 303 831 294 q 783 346 814 318 q 751 417 751 374 q 770 478 751 450 q 818 524 789 506 q 885 553 847 543 q 960 564 922 564 q 1035 553 997 564 q 1101 524 1072 543 q 1149 478 1131 506 q 1168 418 1168 451 q 1138 347 1168 376 q 1064 303 1108 318 q 1154 248 1118 283 q 1190 160 1190 213 m 1113 168 q 1099 210 1113 192 q 1063 242 1085 229 q 1014 261 1042 254 q 960 268 986 268 q 903 261 931 268 q 854 240 875 254 q 820 208 833 226 q 807 167 807 189 q 821 125 807 143 q 857 94 835 107 q 906 76 879 82 q 961 69 933 69 q 1016 76 989 69 q 1065 97 1043 83 q 1099 128 1086 110 q 1113 168 1113 146 m 829 410 q 841 376 829 390 q 872 351 853 361 q 913 336 890 342 q 960 331 936 331 q 1006 336 982 331 q 1049 352 1029 342 q 1080 377 1068 363 q 1092 411 1092 392 q 1081 444 1092 429 q 1051 469 1069 458 q 1008 485 1032 479 q 960 490 985 490 q 868 469 907 490 q 829 410 829 447 m 208 46 l 597 514 l 969 993 l 1029 942 l 644 476 l 267 -7 l 208 46 z "},"³":{ha:547,x_min:44,x_max:496,o:"m 264 547 q 117 579 176 547 q 44 667 58 611 l 89 719 q 103 688 90 704 q 140 658 117 672 q 194 634 163 643 q 263 625 225 625 q 373 649 328 625 q 418 715 418 674 q 363 785 418 761 q 211 810 307 810 l 179 810 l 179 881 l 211 881 q 349 901 299 881 q 399 967 399 922 q 356 1032 399 1008 q 260 1056 314 1056 q 163 1035 203 1056 q 100 981 122 1014 l 49 1040 q 135 1103 76 1081 q 260 1126 193 1126 q 347 1115 307 1126 q 417 1082 388 1103 q 464 1033 447 1061 q 481 971 481 1004 q 448 892 481 922 q 353 849 415 861 q 458 799 419 839 q 496 704 496 758 q 477 637 496 667 q 426 588 458 607 q 351 558 393 568 q 264 547 310 547 z "},"¾":{ha:1203,x_min:56,x_max:1153,o:"m 275 436 q 128 468 188 436 q 56 556 69 500 l 100 608 q 115 577 101 593 q 151 547 128 561 q 205 523 174 532 q 274 514 236 514 q 384 538 339 514 q 429 604 429 563 q 374 674 429 650 q 222 699 318 699 l 190 699 l 190 769 l 222 769 q 360 790 310 769 q 410 856 410 811 q 367 921 410 897 q 271 944 325 944 q 174 924 214 944 q 111 869 133 903 l 60 929 q 146 992 88 969 q 271 1015 204 1015 q 358 1003 318 1015 q 428 971 399 992 q 475 922 458 950 q 492 860 492 893 q 459 781 492 811 q 364 738 426 750 q 469 688 431 728 q 507 593 507 647 q 488 526 507 556 q 437 476 469 496 q 363 447 404 457 q 275 436 321 436 m 994 0 l 994 139 l 681 139 l 681 213 l 1018 564 l 1071 564 l 1071 214 l 1153 214 l 1153 139 l 1071 139 l 1071 0 l 994 0 m 760 214 l 997 214 l 997 464 l 760 214 m 247 46 l 636 514 l 1008 993 l 1068 942 l 683 476 l 306 -7 l 247 46 z "},"™":{ha:1056,x_min:88,x_max:950,o:"m 435 906 l 303 906 l 303 583 l 219 583 l 219 906 l 88 906 l 88 989 l 435 989 l 435 906 m 831 986 l 950 986 l 950 583 l 867 583 l 867 872 l 758 642 l 690 642 l 582 872 l 582 583 l 499 583 l 499 986 l 617 986 l 724 739 l 831 986 z "},"²":{ha:550,x_min:47,x_max:499,o:"m 47 556 q 58 651 47 610 q 90 722 68 692 q 144 776 111 753 q 224 817 178 799 q 290 841 256 829 q 351 869 324 853 q 395 906 378 885 q 413 957 413 926 q 378 1024 413 997 q 278 1051 344 1051 q 168 1026 211 1051 q 103 978 125 1001 l 53 1032 q 78 1058 60 1042 q 126 1089 96 1074 q 197 1115 156 1104 q 289 1126 238 1126 q 446 1078 393 1126 q 499 956 499 1031 q 479 881 499 911 q 431 831 460 851 q 368 799 401 811 q 307 778 335 786 q 237 746 264 764 q 194 708 210 728 q 174 669 179 689 q 168 631 168 649 l 489 631 l 489 556 l 47 556 z "},"⅔":{ha:1249,x_min:58,x_max:1200,o:"m 968 -7 q 822 24 881 -7 q 749 113 763 56 l 793 164 q 808 133 794 149 q 844 102 821 117 q 898 78 867 88 q 967 69 929 69 q 1077 94 1032 69 q 1122 160 1122 118 q 1067 231 1122 206 q 915 256 1011 256 l 883 256 l 883 325 l 915 325 q 1053 346 1003 325 q 1103 411 1103 367 q 1060 476 1103 453 q 964 500 1018 500 q 867 479 907 500 q 804 425 826 458 l 753 485 q 839 548 781 525 q 964 571 897 571 q 1051 559 1011 571 q 1122 526 1092 547 q 1168 478 1151 506 q 1185 417 1185 450 q 1152 337 1185 368 q 1057 293 1119 306 q 1162 243 1124 283 q 1200 149 1200 203 q 1181 82 1200 111 q 1130 33 1163 53 q 1056 3 1097 13 q 968 -7 1014 -7 m 58 444 q 68 540 58 499 q 99 611 78 581 q 151 665 119 642 q 228 706 183 688 q 291 730 258 718 q 351 758 324 742 q 394 794 378 774 q 411 846 411 815 q 378 913 411 886 q 281 940 346 940 q 222 933 249 940 q 175 915 196 926 q 138 891 154 904 q 111 867 122 878 l 64 921 q 88 947 69 931 q 134 978 106 963 q 202 1004 163 993 q 292 1015 242 1015 q 442 967 392 1015 q 493 844 493 919 q 474 770 493 800 q 428 720 456 740 q 367 688 400 700 q 308 667 335 675 q 241 635 267 653 q 201 597 215 617 q 181 558 186 578 q 175 519 175 538 l 485 519 l 485 444 l 58 444 m 226 46 l 615 514 l 988 993 l 1047 942 l 663 476 l 285 -7 l 226 46 z "},u:{ha:835,x_min:92,x_max:768,o:"m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 735 -3 747 -3 q 713 -4 724 -4 q 652 17 676 -4 q 626 71 628 39 l 624 156 q 496 30 575 74 q 322 -14 417 -14 z "},"ú":{ha:835,x_min:92,x_max:768,o:"m 429 846 l 349 874 l 429 1014 l 551 1014 l 429 846 m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 735 -3 747 -3 q 713 -4 724 -4 q 652 17 676 -4 q 626 71 628 39 l 624 156 q 496 30 575 74 q 322 -14 417 -14 z "},"ŭ":{ha:835,x_min:92,x_max:768,o:"m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 735 -3 747 -3 q 713 -4 724 -4 q 652 17 676 -4 q 626 71 628 39 l 624 156 q 496 30 575 74 q 322 -14 417 -14 m 408 919 q 462 947 439 919 q 489 1014 485 974 l 558 1014 q 547 953 558 981 q 515 904 535 925 q 467 872 494 883 q 408 860 440 860 q 349 872 376 860 q 302 904 322 883 q 270 953 282 925 q 258 1014 258 981 l 329 1014 q 353 948 329 976 q 408 919 376 919 z "},"û":{ha:835,x_min:92,x_max:768,o:"m 224 889 l 364 1014 l 453 1014 l 593 889 l 526 856 l 408 943 l 290 856 l 224 889 m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 735 -3 747 -3 q 713 -4 724 -4 q 652 17 676 -4 q 626 71 628 39 l 624 156 q 496 30 575 74 q 322 -14 417 -14 z "},"ü":{ha:835,x_min:92,x_max:768,o:"m 244 867 l 244 1008 l 347 1008 l 347 867 l 244 867 m 469 867 l 469 1008 l 572 1008 l 572 867 l 469 867 m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 735 -3 747 -3 q 713 -4 724 -4 q 652 17 676 -4 q 626 71 628 39 l 624 156 q 496 30 575 74 q 322 -14 417 -14 z "},"ù":{ha:835,x_min:92,x_max:768,o:"m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 735 -3 747 -3 q 713 -4 724 -4 q 652 17 676 -4 q 626 71 628 39 l 624 156 q 496 30 575 74 q 322 -14 417 -14 m 265 1014 l 386 1014 l 468 874 l 389 846 l 265 1014 z "},"ű":{ha:835,x_min:92,x_max:768,o:"m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 735 -3 747 -3 q 713 -4 724 -4 q 652 17 676 -4 q 626 71 628 39 l 624 156 q 496 30 575 74 q 322 -14 417 -14 m 321 846 l 257 874 l 332 1014 l 438 1014 l 321 846 m 510 846 l 446 874 l 521 1014 l 626 1014 l 510 846 z "},"ū":{ha:835,x_min:92,x_max:768,o:"m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 735 -3 747 -3 q 713 -4 724 -4 q 652 17 676 -4 q 626 71 628 39 l 624 156 q 496 30 575 74 q 322 -14 417 -14 m 207 908 l 207 989 l 613 989 l 613 908 l 207 908 z "},_:{ha:699,x_min:88,x_max:611,o:"m 88 -111 l 88 0 l 611 0 l 611 -111 l 88 -111 z "}," ":{ha:351,x_min:0,x_max:0,o:""},"­":{ha:808,x_min:89,x_max:719,o:"m 89 324 l 89 435 l 719 435 l 719 324 l 89 324 z "},"Ş":{ha:846,x_min:40,x_max:800,o:"m 338 -175 q 390 -193 356 -185 q 460 -201 424 -201 q 518 -190 497 -201 q 539 -153 539 -179 q 519 -115 539 -125 q 468 -104 500 -104 q 407 -110 439 -104 q 357 -122 375 -117 l 417 -8 q 215 29 310 -6 q 40 129 119 64 l 100 235 q 158 188 122 211 q 238 145 193 164 q 335 115 283 126 q 444 103 388 103 q 608 140 550 103 q 667 253 667 178 q 648 323 667 294 q 593 372 629 351 q 503 409 557 393 q 382 442 450 425 q 250 481 307 460 q 155 531 193 501 q 97 601 117 560 q 78 701 78 643 q 104 826 78 772 q 178 918 131 881 q 290 974 225 956 q 432 993 356 993 q 613 963 532 993 q 756 881 693 932 l 697 779 q 653 817 681 799 q 590 849 625 835 q 515 873 556 864 q 429 882 474 882 q 260 839 314 882 q 207 721 207 796 q 222 654 207 681 q 270 609 238 628 q 351 576 303 590 q 467 547 400 563 q 605 509 543 531 q 710 456 667 488 q 777 378 754 424 q 800 265 800 332 q 776 149 800 199 q 708 65 751 99 q 606 14 665 32 q 479 -8 547 -4 l 443 -67 q 468 -61 454 -62 q 493 -60 482 -60 q 572 -82 542 -60 q 603 -149 603 -104 q 564 -225 603 -197 q 450 -253 525 -253 q 373 -245 408 -253 q 310 -226 338 -237 l 338 -175 z "},"ş":{ha:686,x_min:35,x_max:640,o:"m 244 -175 q 297 -193 263 -185 q 367 -201 331 -201 q 425 -190 404 -201 q 446 -153 446 -179 q 426 -115 446 -125 q 375 -104 407 -104 q 314 -110 346 -104 q 264 -122 282 -117 l 322 -12 q 166 19 242 -7 q 35 92 90 44 l 88 174 q 215 101 151 125 q 350 76 279 76 q 476 108 429 76 q 522 196 522 139 q 510 241 522 222 q 472 274 497 260 q 408 299 447 288 q 318 322 369 310 q 206 354 253 339 q 128 390 158 369 q 83 440 97 411 q 69 513 69 469 q 91 609 69 567 q 150 680 113 651 q 238 723 188 708 q 347 738 289 738 q 500 711 429 738 q 619 642 571 685 l 564 568 q 461 628 518 608 q 344 649 404 649 q 231 620 278 649 q 185 529 185 592 q 194 488 185 504 q 224 458 203 471 q 277 436 244 446 q 356 415 310 426 q 481 381 428 399 q 570 340 535 364 q 623 285 606 317 q 640 207 640 253 q 571 53 640 111 q 383 -12 501 -6 l 350 -67 q 375 -61 361 -62 q 400 -60 389 -60 q 479 -82 449 -60 q 510 -149 510 -104 q 471 -225 510 -197 q 357 -253 432 -253 q 280 -245 315 -253 q 217 -226 244 -237 l 244 -175 z "},"Ţ":{ha:851,x_min:22,x_max:828,o:"m 319 -175 q 372 -193 338 -185 q 442 -201 406 -201 q 500 -190 479 -201 q 521 -153 521 -179 q 501 -115 521 -125 q 450 -104 482 -104 q 389 -110 421 -104 q 339 -122 357 -117 l 404 0 l 363 0 l 363 875 l 22 875 l 22 986 l 828 986 l 828 875 l 488 875 l 488 0 l 467 0 l 425 -67 q 450 -61 436 -62 q 475 -60 464 -60 q 554 -82 524 -60 q 585 -149 585 -104 q 546 -225 585 -197 q 432 -253 507 -253 q 355 -245 390 -253 q 292 -226 319 -237 l 319 -175 z "},"ţ":{ha:489,x_min:35,x_max:474,o:"m 189 -175 q 241 -193 207 -185 q 311 -201 275 -201 q 369 -190 349 -201 q 390 -153 390 -179 q 371 -115 390 -125 q 319 -104 351 -104 q 258 -110 290 -104 q 208 -122 226 -117 l 268 -8 q 172 35 211 -1 q 133 142 133 71 l 133 629 l 35 629 l 35 725 l 133 725 l 133 967 l 256 967 l 256 725 l 418 725 l 418 629 l 256 629 l 256 179 q 282 121 258 139 q 338 103 306 103 q 403 115 374 103 q 444 133 433 126 l 474 36 q 417 13 454 26 q 332 -7 379 -1 l 294 -67 q 319 -61 306 -62 q 344 -60 333 -60 q 424 -82 393 -60 q 454 -149 454 -104 q 415 -225 454 -197 q 301 -253 376 -253 q 224 -245 260 -253 q 161 -226 189 -237 l 189 -175 z "},"Ș":{ha:846,x_min:40,x_max:800,o:"m 393 -296 l 421 -183 l 386 -183 l 386 -67 l 494 -67 l 494 -183 l 453 -296 l 393 -296 m 697 779 q 653 817 681 799 q 590 849 625 835 q 515 873 556 864 q 429 882 474 882 q 260 839 314 882 q 207 721 207 796 q 222 654 207 681 q 270 609 238 628 q 351 576 303 590 q 467 547 400 563 q 605 509 543 531 q 710 456 667 488 q 777 378 754 424 q 800 265 800 332 q 772 142 800 194 q 697 56 744 90 q 583 6 649 22 q 442 -10 518 -10 q 226 26 328 -10 q 40 129 124 61 l 100 235 q 158 188 122 211 q 238 145 193 164 q 335 115 283 126 q 444 103 388 103 q 608 140 550 103 q 667 253 667 178 q 648 323 667 294 q 593 372 629 351 q 503 409 557 393 q 382 442 450 425 q 250 481 307 460 q 155 531 193 501 q 97 601 117 560 q 78 701 78 643 q 104 826 78 772 q 178 918 131 881 q 290 974 225 956 q 432 993 356 993 q 613 963 532 993 q 756 881 693 932 l 697 779 z "},"ș":{ha:686,x_min:35,x_max:640,o:"m 300 -296 l 328 -183 l 293 -183 l 293 -67 l 401 -67 l 401 -183 l 360 -296 l 300 -296 m 353 -14 q 181 13 265 -14 q 35 92 96 40 l 88 174 q 215 101 151 125 q 350 76 279 76 q 476 108 429 76 q 522 196 522 139 q 510 241 522 222 q 472 274 497 260 q 408 299 447 288 q 318 322 369 310 q 206 354 253 339 q 128 390 158 369 q 83 440 97 411 q 69 513 69 469 q 91 609 69 567 q 150 680 113 651 q 238 723 188 708 q 347 738 289 738 q 500 711 429 738 q 619 642 571 685 l 564 568 q 461 628 518 608 q 344 649 404 649 q 231 620 278 649 q 185 529 185 592 q 194 488 185 504 q 224 458 203 471 q 277 436 244 446 q 356 415 310 426 q 481 381 428 399 q 570 340 535 364 q 623 285 606 317 q 640 207 640 253 q 563 46 640 106 q 353 -14 485 -14 z "},"Ț":{ha:853,x_min:24,x_max:829,o:"m 379 -296 l 407 -183 l 372 -183 l 372 -67 l 481 -67 l 481 -183 l 439 -296 l 379 -296 m 829 875 l 489 875 l 489 0 l 364 0 l 364 875 l 24 875 l 24 986 l 829 986 l 829 875 z "},"ț":{ha:489,x_min:35,x_max:474,o:"m 244 -296 l 272 -183 l 238 -183 l 238 -67 l 346 -67 l 346 -183 l 304 -296 l 244 -296 m 474 36 q 444 23 463 31 q 403 8 426 15 q 353 -5 381 0 q 297 -10 326 -10 q 182 27 231 -10 q 133 142 133 64 l 133 629 l 35 629 l 35 725 l 133 725 l 133 967 l 256 967 l 256 725 l 418 725 l 418 629 l 256 629 l 256 179 q 282 121 258 139 q 338 103 306 103 q 403 115 374 103 q 444 133 433 126 l 474 36 z "},"μ":{ha:843,x_min:99,x_max:776,o:"m 99 725 l 221 725 l 221 314 q 378 92 221 92 q 450 104 414 92 q 517 140 486 117 q 574 196 549 163 q 615 271 599 229 l 615 725 l 738 725 l 738 150 q 776 106 738 107 l 776 0 q 743 -3 756 -3 q 719 -4 731 -4 q 656 22 681 -4 q 632 79 632 47 l 632 156 q 588 92 615 122 q 526 38 560 61 q 452 0 492 14 q 371 -14 413 -14 q 268 17 307 -14 q 214 93 229 49 l 214 -294 l 99 -294 l 99 725 z "},"∕":{ha:832,x_min:-12,x_max:846,o:"m -12 53 l 774 993 l 846 933 l 60 -7 l -12 53 z "},"∙":{ha:281,x_min:89,x_max:192,o:"m 89 340 l 89 513 l 192 513 l 192 340 l 89 340 z "},"ų":{ha:835,x_min:92,x_max:768,o:"m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 681 -67 707 -37 q 654 -128 654 -97 q 731 -187 654 -179 l 700 -251 q 613 -212 642 -240 q 583 -144 583 -183 q 689 -1 583 -72 q 644 24 661 6 q 626 71 628 43 l 624 156 q 496 30 575 74 q 322 -14 417 -14 z "},"ů":{ha:835,x_min:92,x_max:768,o:"m 296 918 q 328 988 296 963 q 408 1014 360 1014 q 490 988 458 1014 q 521 918 521 963 q 490 848 521 874 q 408 822 458 822 q 328 848 360 822 q 296 918 296 874 m 408 971 q 369 956 385 971 q 353 918 353 942 q 369 881 353 896 q 408 865 385 865 q 448 880 431 865 q 465 918 465 894 q 449 956 465 942 q 408 971 432 971 m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 735 -3 747 -3 q 713 -4 724 -4 q 652 17 676 -4 q 626 71 628 39 l 624 156 q 496 30 575 74 q 322 -14 417 -14 z "},"ũ":{ha:835,x_min:92,x_max:768,o:"m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 735 -3 747 -3 q 713 -4 724 -4 q 652 17 676 -4 q 626 71 628 39 l 624 156 q 496 30 575 74 q 322 -14 417 -14 m 496 871 q 441 880 464 871 q 398 900 418 889 q 358 920 378 911 q 317 929 339 929 q 280 919 293 929 q 260 898 267 910 q 251 875 253 886 q 249 863 249 864 l 176 863 q 183 894 176 871 q 204 943 189 918 q 246 987 219 968 q 314 1006 272 1006 q 365 997 343 1006 q 408 976 388 988 q 448 955 428 964 q 493 946 468 946 q 535 956 519 946 q 558 978 550 965 q 569 1001 567 990 q 571 1014 571 1011 l 643 1014 q 637 983 643 1006 q 614 935 631 960 q 569 890 597 910 q 496 871 540 871 z "},v:{ha:747,x_min:22,x_max:725,o:"m 308 0 l 22 725 l 149 725 l 378 107 l 608 725 l 725 725 l 439 0 l 308 0 z "},w:{ha:1140,x_min:15,x_max:1125,o:"m 1007 725 l 1125 725 l 817 0 l 715 0 l 569 354 l 425 0 l 324 0 l 15 725 l 132 725 l 382 121 l 504 422 l 379 724 l 481 724 l 569 492 l 658 724 l 760 724 l 636 422 l 758 121 l 1007 725 z "},"ẃ":{ha:1140,x_min:15,x_max:1125,o:"m 590 846 l 510 874 l 590 1014 l 713 1014 l 590 846 m 1007 725 l 1125 725 l 817 0 l 715 0 l 569 354 l 425 0 l 324 0 l 15 725 l 132 725 l 382 121 l 504 422 l 379 724 l 481 724 l 569 492 l 658 724 l 760 724 l 636 422 l 758 121 l 1007 725 z "},"ŵ":{ha:1140,x_min:15,x_max:1125,o:"m 385 889 l 525 1014 l 614 1014 l 754 889 l 688 856 l 569 943 l 451 856 l 385 889 m 1007 725 l 1125 725 l 817 0 l 715 0 l 569 354 l 425 0 l 324 0 l 15 725 l 132 725 l 382 121 l 504 422 l 379 724 l 481 724 l 569 492 l 658 724 l 760 724 l 636 422 l 758 121 l 1007 725 z "},"ẅ":{ha:1140,x_min:15,x_max:1125,o:"m 406 867 l 406 1008 l 508 1008 l 508 867 l 406 867 m 631 867 l 631 1008 l 733 1008 l 733 867 l 631 867 m 1007 725 l 1125 725 l 817 0 l 715 0 l 569 354 l 425 0 l 324 0 l 15 725 l 132 725 l 382 121 l 504 422 l 379 724 l 481 724 l 569 492 l 658 724 l 760 724 l 636 422 l 758 121 l 1007 725 z "},"ẁ":{ha:1140,x_min:15,x_max:1125,o:"m 1007 725 l 1125 725 l 817 0 l 715 0 l 569 354 l 425 0 l 324 0 l 15 725 l 132 725 l 382 121 l 504 422 l 379 724 l 481 724 l 569 492 l 658 724 l 760 724 l 636 422 l 758 121 l 1007 725 m 426 1014 l 547 1014 l 629 874 l 550 846 l 426 1014 z "},x:{ha:713,x_min:17,x_max:696,o:"m 146 725 l 344 458 l 356 436 l 368 458 l 565 725 l 694 725 l 424 361 l 696 0 l 567 0 l 368 265 l 356 286 l 344 265 l 146 0 l 17 0 l 289 361 l 18 725 l 146 725 z "},y:{ha:757,x_min:17,x_max:732,o:"m 132 -197 q 168 -201 150 -200 q 196 -203 186 -203 q 226 -195 213 -203 q 252 -165 239 -187 q 282 -103 265 -143 q 324 0 299 -64 l 17 725 l 143 725 l 390 110 l 615 725 l 732 725 l 379 -190 q 315 -276 360 -239 q 190 -312 269 -312 q 165 -311 178 -312 q 132 -306 151 -310 l 132 -197 z "},"ý":{ha:757,x_min:17,x_max:732,o:"m 132 -197 q 168 -201 150 -200 q 196 -203 186 -203 q 226 -195 213 -203 q 252 -165 239 -187 q 282 -103 265 -143 q 324 0 299 -64 l 17 725 l 143 725 l 390 110 l 615 725 l 732 725 l 379 -190 q 315 -276 360 -239 q 190 -312 269 -312 q 165 -311 178 -312 q 132 -306 151 -310 l 132 -197 m 411 846 l 331 874 l 411 1014 l 533 1014 l 411 846 z "},"ŷ":{ha:757,x_min:17,x_max:732,o:"m 132 -197 q 168 -201 150 -200 q 196 -203 186 -203 q 226 -195 213 -203 q 252 -165 239 -187 q 282 -103 265 -143 q 324 0 299 -64 l 17 725 l 143 725 l 390 110 l 615 725 l 732 725 l 379 -190 q 315 -276 360 -239 q 190 -312 269 -312 q 165 -311 178 -312 q 132 -306 151 -310 l 132 -197 m 206 889 l 346 1014 l 435 1014 l 575 889 l 508 856 l 390 943 l 272 856 l 206 889 z "},"ÿ":{ha:757,x_min:17,x_max:732,o:"m 132 -197 q 168 -201 150 -200 q 196 -203 186 -203 q 226 -195 213 -203 q 252 -165 239 -187 q 282 -103 265 -143 q 324 0 299 -64 l 17 725 l 143 725 l 390 110 l 615 725 l 732 725 l 379 -190 q 315 -276 360 -239 q 190 -312 269 -312 q 165 -311 178 -312 q 132 -306 151 -310 l 132 -197 m 226 867 l 226 1008 l 329 1008 l 329 867 l 226 867 m 451 867 l 451 1008 l 554 1008 l 554 867 l 451 867 z "},"¥":{ha:954,x_min:40,x_max:914,o:"m 631 524 l 743 524 l 743 440 l 585 440 l 538 360 l 538 321 l 744 321 l 744 238 l 538 238 l 538 0 l 413 0 l 413 238 l 208 238 l 208 321 l 413 321 l 413 363 l 368 440 l 208 440 l 208 524 l 324 524 l 40 986 l 176 986 l 475 472 l 776 986 l 914 986 l 631 524 z "},"ỳ":{ha:757,x_min:17,x_max:732,o:"m 132 -197 q 168 -201 150 -200 q 196 -203 186 -203 q 226 -195 213 -203 q 252 -165 239 -187 q 282 -103 265 -143 q 324 0 299 -64 l 17 725 l 143 725 l 390 110 l 615 725 l 732 725 l 379 -190 q 315 -276 360 -239 q 190 -312 269 -312 q 165 -311 178 -312 q 132 -306 151 -310 l 132 -197 m 246 1014 l 367 1014 l 449 874 l 369 846 l 246 1014 z "},"ỹ":{ha:757,x_min:17,x_max:732,o:"m 132 -197 q 168 -201 150 -200 q 196 -203 186 -203 q 226 -195 213 -203 q 252 -165 239 -187 q 282 -103 265 -143 q 324 0 299 -64 l 17 725 l 143 725 l 390 110 l 615 725 l 732 725 l 379 -190 q 315 -276 360 -239 q 190 -312 269 -312 q 165 -311 178 -312 q 132 -306 151 -310 l 132 -197 m 476 871 q 422 880 444 871 q 378 900 399 889 q 339 920 358 911 q 297 929 319 929 q 260 919 274 929 q 240 898 247 910 q 231 875 233 886 q 229 863 229 864 l 157 863 q 163 894 157 871 q 185 943 169 918 q 226 987 200 968 q 294 1006 253 1006 q 346 997 324 1006 q 388 976 368 988 q 428 955 408 964 q 474 946 449 946 q 515 956 500 946 q 539 978 531 965 q 549 1001 547 990 q 551 1014 551 1011 l 624 1014 q 617 983 624 1006 q 594 935 611 960 q 549 890 578 910 q 476 871 521 871 z "},z:{ha:685,x_min:42,x_max:638,o:"m 42 79 l 506 636 l 54 636 l 54 725 l 636 725 l 636 646 l 175 89 l 638 89 l 638 0 l 42 0 l 42 79 z "},"ź":{ha:685,x_min:42,x_max:638,o:"m 375 846 l 294 874 l 375 1014 l 497 1014 l 375 846 m 42 79 l 506 636 l 54 636 l 54 725 l 636 725 l 636 646 l 175 89 l 638 89 l 638 0 l 42 0 l 42 79 z "},"ž":{ha:685,x_min:42,x_max:638,o:"m 235 1014 l 353 926 l 471 1014 l 538 981 l 397 856 l 308 856 l 168 981 l 235 1014 m 42 79 l 506 636 l 54 636 l 54 725 l 636 725 l 636 646 l 175 89 l 638 89 l 638 0 l 42 0 l 42 79 z "},"ż":{ha:685,x_min:42,x_max:638,o:"m 42 79 l 506 636 l 54 636 l 54 725 l 636 725 l 636 646 l 175 89 l 638 89 l 638 0 l 42 0 l 42 79 m 297 867 l 297 1014 l 408 1014 l 408 867 l 297 867 z "},"₀":{ha:649,x_min:50,x_max:599,o:"m 325 -118 q 206 -92 257 -118 q 119 -24 154 -65 q 67 69 85 18 q 50 167 50 119 q 69 269 50 218 q 124 360 89 319 q 210 427 160 401 q 325 453 261 453 q 444 426 393 453 q 529 356 494 399 q 581 263 564 314 q 599 167 599 213 q 580 65 599 115 q 526 -27 561 14 q 440 -93 490 -68 q 325 -118 389 -118 m 129 167 q 142 93 129 131 q 179 26 154 56 q 240 -23 204 -4 q 325 -42 276 -42 q 412 -22 375 -42 q 473 30 449 -1 q 509 97 497 61 q 521 167 521 133 q 508 241 521 204 q 469 308 494 278 q 408 358 444 339 q 325 376 372 376 q 238 356 275 376 q 177 305 201 336 q 141 237 153 274 q 129 167 129 200 z "},"⁰":{ha:649,x_min:50,x_max:599,o:"m 325 554 q 206 581 257 554 q 119 649 154 607 q 67 741 85 690 q 50 839 50 792 q 69 941 50 890 q 124 1033 89 992 q 210 1099 160 1074 q 325 1125 261 1125 q 444 1098 393 1125 q 529 1028 494 1071 q 581 935 564 986 q 599 839 599 885 q 580 737 599 788 q 526 645 561 686 q 440 579 490 604 q 325 554 389 554 m 129 839 q 142 765 129 803 q 179 698 154 728 q 240 649 204 668 q 325 631 276 631 q 412 651 375 631 q 473 702 449 671 q 509 769 497 733 q 521 839 521 806 q 508 913 521 876 q 469 981 494 950 q 408 1030 444 1011 q 325 1049 372 1049 q 238 1028 275 1049 q 177 977 201 1008 q 141 909 153 946 q 129 839 129 872 z "}," ":{ha:1278,x_min:0,x_max:0,o:""}," ":{ha:814,x_min:0,x_max:0,o:""},"₤":{ha:694,x_min:71,x_max:653,o:"m 71 561 l 171 561 q 125 653 146 607 q 104 753 104 700 q 125 847 104 803 q 181 923 146 890 q 265 974 217 956 q 367 993 313 993 q 515 954 446 993 q 629 847 585 915 l 561 772 q 474 859 528 826 q 364 892 419 892 q 306 880 332 892 q 259 849 279 868 q 228 801 239 829 q 217 743 217 774 q 239 653 217 696 q 286 561 261 610 l 556 561 l 556 489 l 319 489 q 340 407 335 449 l 556 407 l 556 335 l 340 335 q 304 222 335 276 q 207 96 274 167 q 310 110 258 110 q 410 97 365 110 q 504 85 456 85 q 559 91 532 85 q 622 110 586 97 l 653 17 q 577 -11 617 -1 q 499 -21 538 -21 q 438 -15 467 -21 q 381 -3 410 -10 q 322 8 351 3 q 260 14 292 14 q 182 7 225 14 q 101 -11 139 0 l 71 78 q 190 214 151 154 q 235 335 228 274 l 71 335 l 71 407 l 232 407 q 222 449 229 429 q 207 489 215 469 l 71 489 l 71 561 z "},"₦":{ha:1186,x_min:51,x_max:1133,o:"m 1133 522 l 1011 522 l 1011 440 l 1133 440 l 1133 368 l 1011 368 l 1011 0 l 906 0 l 610 368 l 303 368 l 303 0 l 178 0 l 178 368 l 51 368 l 51 440 l 178 440 l 178 522 l 51 522 l 51 594 l 178 594 l 178 986 l 275 986 l 586 594 l 886 594 l 886 985 l 1011 985 l 1011 594 l 1133 594 l 1133 522 m 303 440 l 553 440 l 488 522 l 303 522 l 303 440 m 710 440 l 886 440 l 886 522 l 644 522 l 710 440 m 303 594 l 429 594 l 303 753 l 303 594 m 886 218 l 886 368 l 767 368 l 886 218 z "},"₩":{ha:1578,x_min:53,x_max:1524,o:"m 53 496 l 276 496 l 236 592 l 53 592 l 53 664 l 206 664 l 72 986 l 207 986 l 335 664 l 665 664 l 539 981 l 657 981 l 788 638 l 919 981 l 1038 981 l 911 664 l 1242 664 l 1369 986 l 1506 986 l 1371 664 l 1524 664 l 1524 592 l 1340 592 l 1300 496 l 1524 496 l 1524 424 l 1269 424 l 1093 0 l 985 0 l 789 465 l 592 0 l 483 0 l 306 424 l 53 424 l 53 496 m 1036 144 l 1146 424 l 919 424 l 1036 144 m 542 144 l 657 424 l 431 424 l 542 144 m 867 551 l 889 496 l 1175 496 l 1213 592 l 882 592 l 867 551 m 693 592 l 364 592 l 401 496 l 686 496 l 710 551 l 693 592 z "},"₣":{ha:850,x_min:40,x_max:818,o:"m 167 0 l 167 176 l 40 176 l 40 271 l 167 271 l 167 986 l 818 986 l 818 875 l 292 875 l 292 546 l 735 546 l 735 442 l 292 442 l 292 271 l 456 271 l 456 176 l 292 176 l 292 0 l 167 0 z "},"₡":{ha:774,x_min:53,x_max:732,o:"m 317 0 q 208 52 257 17 q 125 135 160 88 q 72 242 90 183 q 53 364 53 300 q 71 485 53 428 q 124 591 89 543 q 207 673 158 639 q 317 724 256 707 l 317 896 l 378 896 l 378 735 q 399 737 389 736 q 421 738 410 738 q 441 738 432 738 q 461 735 450 738 l 461 896 l 522 896 l 522 725 q 644 663 593 706 q 726 561 696 621 l 607 524 q 529 603 579 575 q 418 632 479 632 q 324 612 368 632 q 247 556 279 592 q 197 471 215 519 q 178 364 178 422 q 197 257 178 307 q 249 170 217 207 q 326 113 282 133 q 419 92 369 92 q 483 101 451 92 q 540 125 514 110 q 585 160 565 140 q 613 204 604 181 l 732 168 q 652 63 707 107 q 522 -1 597 18 l 522 -167 l 461 -167 l 461 -11 q 442 -13 451 -12 q 422 -14 432 -14 q 400 -13 411 -14 q 378 -11 389 -12 l 378 -167 l 317 -167 l 317 0 z "},"̏":{ha:469,x_min:44,x_max:414,o:"m 233 1014 l 339 1014 l 414 874 l 350 846 l 233 1014 m 44 1014 l 150 1014 l 225 874 l 161 846 l 44 1014 z "},"̑":{ha:411,x_min:56,x_max:356,o:"m 206 954 q 150 926 174 954 q 126 860 126 897 l 56 860 q 67 921 56 893 q 99 969 79 949 q 147 1002 119 990 q 206 1014 174 1014 q 265 1002 238 1014 q 312 969 292 990 q 344 921 332 949 q 356 860 356 893 l 286 860 q 259 927 282 900 q 206 954 236 954 z "},"¤":{ha:747,x_min:67,x_max:681,o:"m 222 675 q 291 711 253 699 q 374 724 329 724 q 456 711 418 724 q 525 675 493 699 l 624 775 l 681 718 l 581 618 q 626 468 626 553 q 579 318 626 385 l 681 218 l 631 168 l 528 264 q 458 227 497 240 q 374 214 419 214 q 289 227 328 214 q 218 264 250 240 l 117 168 l 67 218 l 167 318 q 133 388 144 350 q 121 468 121 426 q 165 618 121 554 l 67 718 l 124 775 l 222 675 m 221 467 q 233 400 221 431 q 265 347 244 369 q 314 312 286 325 q 374 299 342 299 q 433 312 406 299 q 482 348 461 325 q 515 402 503 371 q 526 469 526 433 q 515 536 526 506 q 482 590 503 567 q 433 625 461 613 q 374 638 406 638 q 314 624 342 638 q 265 588 286 611 q 233 534 244 565 q 221 467 221 503 z "},"№":{ha:1607,x_min:118,x_max:1582,o:"m 243 753 l 243 0 l 118 0 l 118 986 l 215 986 l 826 218 l 826 985 l 951 985 l 951 0 l 846 0 l 243 753 m 1329 478 q 1226 499 1272 478 q 1146 554 1179 519 q 1094 635 1113 589 q 1076 732 1076 682 q 1094 830 1076 783 q 1146 912 1113 876 q 1226 967 1179 947 q 1329 988 1272 988 q 1433 967 1386 988 q 1513 912 1479 947 q 1564 830 1546 876 q 1582 732 1582 783 q 1564 635 1582 682 q 1513 554 1546 589 q 1433 499 1479 519 q 1329 478 1386 478 m 1176 731 q 1188 664 1176 694 q 1221 611 1200 633 q 1269 576 1242 589 q 1329 563 1297 563 q 1389 576 1361 563 q 1438 612 1417 589 q 1470 666 1458 635 q 1482 733 1482 697 q 1470 800 1482 769 q 1438 853 1458 831 q 1389 889 1417 876 q 1329 901 1361 901 q 1269 888 1297 901 q 1221 852 1242 875 q 1188 798 1200 829 q 1176 731 1176 767 z "},"₹":{ha:693,x_min:58,x_max:642,o:"m 642 746 l 494 746 q 501 708 499 726 q 504 671 504 690 q 490 572 504 619 q 448 485 475 524 q 383 418 421 446 q 297 378 344 390 l 536 0 l 394 0 l 100 465 l 207 465 q 277 482 246 465 q 331 527 308 499 q 365 593 353 556 q 378 671 378 631 q 364 746 378 707 l 58 746 l 58 818 l 321 818 q 265 860 297 844 q 199 875 233 875 l 58 875 l 58 986 l 642 986 l 642 914 l 392 914 q 434 869 415 893 q 467 818 453 846 l 642 818 l 642 746 z "},"℠":{ha:1026,x_min:71,x_max:931,o:"m 811 986 l 931 986 l 931 583 l 847 583 l 847 872 l 739 642 l 671 642 l 563 872 l 563 583 l 479 583 l 479 986 l 597 986 l 704 739 l 811 986 m 363 878 q 315 907 347 893 q 244 921 283 921 q 169 881 169 921 q 186 850 169 863 q 261 825 203 838 q 374 782 332 810 q 415 692 415 754 q 368 605 415 632 q 250 578 321 578 q 71 636 149 578 l 110 699 q 166 666 128 681 q 251 651 204 651 q 326 686 326 651 q 306 721 326 708 q 225 749 285 733 q 119 790 154 765 q 83 872 83 815 q 129 962 83 931 q 246 993 175 993 q 328 981 292 993 q 394 947 365 968 l 363 878 z "},"Ə":{ha:1022,x_min:38,x_max:967,o:"m 506 -7 q 323 32 408 -7 q 174 138 238 71 q 74 294 111 204 q 38 485 38 383 q 38 519 38 503 q 42 544 39 536 l 829 544 q 793 676 822 615 q 720 783 764 738 q 619 853 676 828 q 499 878 563 878 q 406 864 450 878 q 324 826 361 850 q 260 767 288 801 q 219 693 232 733 l 101 747 q 172 847 128 801 q 269 925 215 893 q 385 975 324 957 q 510 993 446 993 q 689 954 606 993 q 834 847 772 915 q 931 688 896 779 q 967 490 967 596 q 931 295 967 386 q 833 137 896 204 q 687 31 771 69 q 506 -7 603 -7 m 508 106 q 631 131 574 106 q 731 199 688 156 q 801 304 774 243 q 832 436 828 365 l 172 436 q 204 306 176 367 q 278 201 232 246 q 383 131 324 157 q 508 106 442 106 z "},"≈":{ha:604,x_min:88,x_max:517,o:"m 517 465 q 467 420 497 439 q 389 401 436 401 q 334 410 357 401 q 291 431 311 419 q 251 451 271 442 q 210 460 232 460 q 166 449 182 460 q 143 424 150 438 l 88 485 q 133 531 104 511 q 207 550 161 550 q 258 541 236 550 q 301 520 281 532 q 341 499 321 508 q 386 490 361 490 q 435 500 418 490 q 464 521 453 510 l 517 465 m 517 275 q 467 235 497 251 q 389 218 436 218 q 334 227 357 218 q 291 247 311 236 q 251 267 271 258 q 210 276 232 276 q 166 265 182 276 q 143 240 150 254 l 88 301 q 133 347 104 328 q 207 367 161 367 q 258 358 236 367 q 301 337 281 349 q 341 316 321 325 q 386 307 361 307 q 435 316 418 307 q 464 338 453 325 l 517 275 z "},"≠":{ha:668,x_min:122,x_max:546,o:"m 122 518 l 372 518 l 465 688 l 518 657 l 442 518 l 546 518 l 546 435 l 397 435 l 340 332 l 546 332 l 546 249 l 294 249 l 203 79 l 150 110 l 225 249 l 122 249 l 122 332 l 271 332 l 328 435 l 122 435 l 122 518 z "},"≤":{ha:626,x_min:78,x_max:540,o:"m 79 71 l 79 171 l 540 171 l 540 71 l 79 71 m 78 542 l 536 768 l 536 651 l 256 513 l 536 378 l 536 256 l 78 478 l 78 542 z "},"≥":{ha:626,x_min:86,x_max:549,o:"m 86 71 l 86 171 l 547 171 l 547 71 l 86 71 m 549 478 l 90 256 l 90 378 l 371 513 l 90 651 l 90 768 l 549 542 l 549 478 z "},"Ǳ":{ha:1853,x_min:118,x_max:1803,o:"m 118 0 l 118 986 l 460 986 q 667 947 578 986 q 817 842 757 908 q 906 685 876 775 q 936 494 936 596 q 903 291 936 382 q 807 135 869 200 q 656 35 744 71 q 460 0 568 0 l 118 0 m 810 494 q 787 648 810 578 q 719 768 764 718 q 608 847 674 818 q 460 875 543 875 l 243 875 l 243 111 l 460 111 q 610 140 544 111 q 720 221 676 169 q 787 342 764 272 q 810 494 810 413 m 1021 97 l 1657 875 l 1033 875 l 1033 986 l 1803 986 l 1803 889 l 1178 111 l 1803 111 l 1803 0 l 1021 0 l 1021 97 z "},"ǲ":{ha:1679,x_min:118,x_max:1632,o:"m 118 0 l 118 986 l 460 986 q 667 947 578 986 q 817 842 757 908 q 906 685 876 775 q 936 494 936 596 q 903 291 936 382 q 807 135 869 200 q 656 35 744 71 q 460 0 568 0 l 118 0 m 810 494 q 787 648 810 578 q 719 768 764 718 q 608 847 674 818 q 460 875 543 875 l 243 875 l 243 111 l 460 111 q 610 140 544 111 q 720 221 676 169 q 787 342 764 272 q 810 494 810 413 m 1036 79 l 1500 636 l 1049 636 l 1049 725 l 1631 725 l 1631 646 l 1169 89 l 1632 89 l 1632 0 l 1036 0 l 1036 79 z "},"ǳ":{ha:1558,x_min:51,x_max:1511,o:"m 397 -14 q 258 17 322 -14 q 149 99 194 47 q 77 218 103 150 q 51 361 51 286 q 76 506 51 438 q 144 626 100 575 q 248 708 188 678 q 381 738 308 738 q 537 692 468 738 q 646 581 606 646 l 646 1014 l 768 1014 l 768 150 q 807 106 768 107 l 807 0 q 776 -4 788 -3 q 753 -6 764 -6 q 690 19 717 -6 q 663 75 663 43 l 663 136 q 548 26 619 65 q 397 -14 476 -14 m 426 92 q 495 104 460 92 q 562 139 531 117 q 616 191 593 161 q 646 254 639 221 l 646 463 q 608 528 633 497 q 552 583 583 560 q 485 619 521 606 q 415 632 450 632 q 317 609 361 632 q 242 548 274 586 q 194 460 211 510 q 178 360 178 411 q 197 256 178 306 q 250 171 217 207 q 328 113 283 135 q 426 92 374 92 m 915 79 l 1379 636 l 928 636 l 928 725 l 1510 725 l 1510 646 l 1049 89 l 1511 89 l 1511 0 l 915 0 l 915 79 z "},"Ǉ":{ha:1485,x_min:118,x_max:1378,o:"m 118 0 l 118 986 l 243 986 l 243 111 l 793 111 l 793 0 l 118 0 m 860 147 q 935 113 888 128 q 1042 97 982 97 q 1154 122 1113 97 q 1217 197 1196 147 q 1246 318 1239 246 q 1253 485 1253 390 l 1253 986 l 1378 986 l 1378 485 q 1367 280 1378 372 q 1322 122 1357 188 q 1220 21 1286 57 q 1042 -15 1154 -15 q 828 46 917 -15 l 860 147 z "},"ǈ":{ha:1140,x_min:118,x_max:1042,o:"m 118 0 l 118 986 l 243 986 l 243 111 l 793 111 l 793 0 l 118 0 m 817 -258 q 726 -244 768 -258 q 650 -200 683 -231 l 707 -118 q 752 -143 726 -136 q 803 -150 778 -150 q 846 -141 825 -150 q 883 -117 867 -132 q 910 -79 900 -101 q 919 -32 919 -57 l 919 725 l 1042 725 l 1042 -24 q 1023 -118 1042 -75 q 973 -192 1004 -161 q 901 -241 942 -224 q 817 -258 861 -258 m 919 861 l 919 1014 l 1042 1014 l 1042 861 l 919 861 z "},"ǉ":{ha:726,x_min:101,x_max:628,o:"m 101 1014 l 224 1014 l 224 188 q 245 124 224 147 q 306 101 267 101 q 342 106 321 101 q 381 118 363 111 l 400 19 q 328 -1 369 7 q 254 -10 286 -10 q 142 31 183 -10 q 101 143 101 71 l 101 1014 m 403 -258 q 312 -244 354 -258 q 236 -200 269 -231 l 293 -118 q 338 -143 313 -136 q 389 -150 364 -150 q 432 -141 411 -150 q 469 -117 453 -132 q 496 -79 486 -101 q 506 -32 506 -57 l 506 725 l 628 725 l 628 -24 q 609 -118 628 -75 q 559 -192 590 -161 q 488 -241 528 -224 q 403 -258 447 -258 m 506 861 l 506 1014 l 628 1014 l 628 861 l 506 861 z "},"Ǌ":{ha:1743,x_min:118,x_max:1636,o:"m 243 753 l 243 0 l 118 0 l 118 986 l 215 986 l 826 218 l 826 985 l 951 985 l 951 0 l 846 0 l 243 753 m 1118 147 q 1193 113 1146 128 q 1300 97 1240 97 q 1413 122 1371 97 q 1476 197 1454 147 q 1504 318 1497 246 q 1511 485 1511 390 l 1511 986 l 1636 986 l 1636 485 q 1626 280 1636 372 q 1580 122 1615 188 q 1478 21 1544 57 q 1300 -15 1413 -15 q 1086 46 1175 -15 l 1118 147 z "},"ǋ":{ha:1399,x_min:118,x_max:1300,o:"m 243 753 l 243 0 l 118 0 l 118 986 l 215 986 l 826 218 l 826 985 l 951 985 l 951 0 l 846 0 l 243 753 m 1075 -258 q 984 -244 1026 -258 q 908 -200 942 -231 l 965 -118 q 1010 -143 985 -136 q 1061 -150 1036 -150 q 1104 -141 1083 -150 q 1142 -117 1125 -132 q 1168 -79 1158 -101 q 1178 -32 1178 -57 l 1178 725 l 1300 725 l 1300 -24 q 1281 -118 1300 -75 q 1231 -192 1263 -161 q 1160 -241 1200 -224 q 1075 -258 1119 -258 m 1178 861 l 1178 1014 l 1300 1014 l 1300 861 l 1178 861 z "},"ǌ":{ha:1149,x_min:99,x_max:1050,o:"m 728 0 l 606 0 l 606 406 q 570 575 606 522 q 463 628 535 628 q 388 613 425 628 q 317 574 350 599 q 258 514 283 549 q 221 438 233 479 l 221 0 l 99 0 l 99 725 l 210 725 l 210 569 q 334 692 253 646 q 511 738 415 738 q 615 715 574 738 q 682 651 657 692 q 717 554 707 610 q 728 433 728 499 l 728 0 m 825 -258 q 734 -244 776 -258 q 658 -200 692 -231 l 715 -118 q 760 -143 735 -136 q 811 -150 786 -150 q 854 -141 833 -150 q 892 -117 875 -132 q 918 -79 908 -101 q 928 -32 928 -57 l 928 725 l 1050 725 l 1050 -24 q 1031 -118 1050 -75 q 981 -192 1013 -161 q 910 -241 950 -224 q 825 -258 869 -258 m 928 861 l 928 1014 l 1050 1014 l 1050 861 l 928 861 z "},"Ǆ":{ha:1871,x_min:118,x_max:1821,o:"m 118 0 l 118 986 l 460 986 q 667 947 578 986 q 817 842 757 908 q 906 685 876 775 q 936 494 936 596 q 903 291 936 382 q 807 135 869 200 q 656 35 744 71 q 460 0 568 0 l 118 0 m 810 494 q 787 648 810 578 q 719 768 764 718 q 608 847 674 818 q 460 875 543 875 l 243 875 l 243 111 l 460 111 q 610 140 544 111 q 720 221 676 169 q 787 342 764 272 q 810 494 810 413 m 1336 1272 l 1454 1185 l 1572 1272 l 1639 1239 l 1499 1114 l 1410 1114 l 1269 1239 l 1336 1272 m 1039 97 l 1675 875 l 1051 875 l 1051 986 l 1821 986 l 1821 889 l 1196 111 l 1821 111 l 1821 0 l 1039 0 l 1039 97 z "},"ǅ":{ha:1679,x_min:118,x_max:1632,o:"m 118 0 l 118 986 l 460 986 q 667 947 578 986 q 817 842 757 908 q 906 685 876 775 q 936 494 936 596 q 903 291 936 382 q 807 135 869 200 q 656 35 744 71 q 460 0 568 0 l 118 0 m 810 494 q 787 648 810 578 q 719 768 764 718 q 608 847 674 818 q 460 875 543 875 l 243 875 l 243 111 l 460 111 q 610 140 544 111 q 720 221 676 169 q 787 342 764 272 q 810 494 810 413 m 1229 1014 l 1347 926 l 1465 1014 l 1532 981 l 1392 856 l 1303 856 l 1163 981 l 1229 1014 m 1036 79 l 1500 636 l 1049 636 l 1049 725 l 1631 725 l 1631 646 l 1169 89 l 1632 89 l 1632 0 l 1036 0 l 1036 79 z "},"ǆ":{ha:1558,x_min:51,x_max:1511,o:"m 397 -14 q 258 17 322 -14 q 149 99 194 47 q 77 218 103 150 q 51 361 51 286 q 76 506 51 438 q 144 626 100 575 q 248 708 188 678 q 381 738 308 738 q 537 692 468 738 q 646 581 606 646 l 646 1014 l 768 1014 l 768 150 q 807 106 768 107 l 807 0 q 776 -4 788 -3 q 753 -6 764 -6 q 690 19 717 -6 q 663 75 663 43 l 663 136 q 548 26 619 65 q 397 -14 476 -14 m 426 92 q 495 104 460 92 q 562 139 531 117 q 616 191 593 161 q 646 254 639 221 l 646 463 q 608 528 633 497 q 552 583 583 560 q 485 619 521 606 q 415 632 450 632 q 317 609 361 632 q 242 548 274 586 q 194 460 211 510 q 178 360 178 411 q 197 256 178 306 q 250 171 217 207 q 328 113 283 135 q 426 92 374 92 m 1108 1014 l 1226 926 l 1344 1014 l 1411 981 l 1271 856 l 1182 856 l 1042 981 l 1108 1014 m 915 79 l 1379 636 l 928 636 l 928 725 l 1510 725 l 1510 646 l 1049 89 l 1511 89 l 1511 0 l 915 0 l 915 79 z "},"Ȁ":{ha:940,x_min:14,x_max:926,o:"m 418 986 l 524 986 l 926 0 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 418 986 m 649 386 l 471 842 l 288 386 l 649 386 m 426 1275 l 532 1275 l 607 1135 l 543 1107 l 426 1275 m 238 1275 l 343 1275 l 418 1135 l 354 1107 l 238 1275 z "},"Ȃ":{ha:940,x_min:14,x_max:926,o:"m 418 986 l 524 986 l 926 0 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 418 986 m 649 386 l 471 842 l 288 386 l 649 386 m 471 1213 q 415 1184 439 1213 q 392 1118 392 1156 l 321 1118 q 333 1179 321 1151 q 365 1228 344 1207 q 412 1260 385 1249 q 471 1272 439 1272 q 530 1260 503 1272 q 577 1228 557 1249 q 609 1179 597 1207 q 621 1118 621 1151 l 551 1118 q 524 1185 547 1158 q 471 1213 501 1213 z "},"Ḍ":{ha:994,x_min:118,x_max:936,o:"m 118 0 l 118 986 l 460 986 q 667 947 578 986 q 817 842 757 908 q 906 685 876 775 q 936 494 936 596 q 903 291 936 382 q 807 135 869 200 q 656 35 744 71 q 460 0 568 0 l 118 0 m 810 494 q 787 648 810 578 q 719 768 764 718 q 608 847 674 818 q 460 875 543 875 l 243 875 l 243 111 l 460 111 q 610 140 544 111 q 720 221 676 169 q 787 342 764 272 q 810 494 810 413 m 414 -253 l 414 -106 l 525 -106 l 525 -253 l 414 -253 z "},"Ẹ":{ha:840,x_min:118,x_max:788,o:"m 788 111 l 788 0 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 m 390 -253 l 390 -106 l 501 -106 l 501 -253 l 390 -253 z "},"Ȅ":{ha:840,x_min:118,x_max:788,o:"m 788 111 l 788 0 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 m 425 1275 l 531 1275 l 606 1135 l 542 1107 l 425 1275 m 236 1275 l 342 1275 l 417 1135 l 353 1107 l 236 1275 z "},"Ȇ":{ha:840,x_min:118,x_max:788,o:"m 788 111 l 788 0 l 118 0 l 118 986 l 775 986 l 775 875 l 243 875 l 243 556 l 706 556 l 706 451 l 243 451 l 243 111 l 788 111 m 463 1213 q 407 1184 431 1213 q 383 1118 383 1156 l 313 1118 q 324 1179 313 1151 q 356 1228 336 1207 q 403 1260 376 1249 q 463 1272 431 1272 q 522 1260 494 1272 q 569 1228 549 1249 q 601 1179 589 1207 q 613 1118 613 1151 l 543 1118 q 516 1185 539 1158 q 463 1213 493 1213 z "},"Ǵ":{ha:992,x_min:54,x_max:919,o:"m 814 133 q 514 -7 683 -7 q 331 36 415 -7 q 186 149 247 79 q 90 310 125 219 q 54 496 54 400 q 89 685 54 596 q 185 844 124 775 q 331 953 246 913 q 514 993 415 993 q 749 933 657 993 q 890 778 842 874 l 794 711 q 676 839 750 797 q 511 881 603 881 q 375 848 436 881 q 271 762 314 815 q 204 638 228 708 q 181 493 181 568 q 207 344 181 414 q 279 220 233 274 q 388 136 325 167 q 524 106 450 106 q 814 261 685 106 l 814 397 l 601 397 l 601 492 l 919 492 l 919 0 l 814 0 l 814 133 m 542 1104 l 461 1132 l 542 1272 l 664 1272 l 542 1104 z "},"Ḥ":{ha:1029,x_min:118,x_max:911,o:"m 911 986 l 911 0 l 786 0 l 786 449 l 243 449 l 243 0 l 118 0 l 118 986 l 243 986 l 243 560 l 786 560 l 786 986 l 911 986 m 458 -253 l 458 -106 l 569 -106 l 569 -253 l 458 -253 z "},"Ị":{ha:361,x_min:118,x_max:243,o:"m 118 0 l 118 986 l 243 986 l 243 0 l 118 0 m 121 -253 l 121 -106 l 232 -106 l 232 -253 l 121 -253 z "},"Ȉ":{ha:361,x_min:-33,x_max:336,o:"m 118 0 l 118 986 l 243 986 l 243 0 l 118 0 m 156 1275 l 261 1275 l 336 1135 l 272 1107 l 156 1275 m -33 1275 l 72 1275 l 147 1135 l 83 1107 l -33 1275 z "},"Ȋ":{ha:361,x_min:26,x_max:326,o:"m 118 0 l 118 986 l 243 986 l 243 0 l 118 0 m 176 1213 q 121 1184 144 1213 q 97 1118 97 1156 l 26 1118 q 38 1179 26 1151 q 70 1228 50 1207 q 117 1260 90 1249 q 176 1272 144 1272 q 235 1260 208 1272 q 283 1228 263 1249 q 315 1179 303 1207 q 326 1118 326 1151 l 257 1118 q 230 1185 253 1158 q 176 1213 207 1213 z "},"Ọ":{ha:1039,x_min:54,x_max:983,o:"m 518 -7 q 328 35 414 -7 q 182 148 243 78 q 88 308 121 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 m 181 493 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 q 833 638 857 568 q 763 762 808 708 q 656 847 718 815 q 519 879 594 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 m 463 -253 l 463 -106 l 574 -106 l 574 -253 l 463 -253 z "},"Ȍ":{ha:1039,x_min:54,x_max:983,o:"m 518 -7 q 328 35 414 -7 q 182 148 243 78 q 88 308 121 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 m 181 493 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 q 833 638 857 568 q 763 762 808 708 q 656 847 718 815 q 519 879 594 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 m 475 1275 l 581 1275 l 656 1135 l 592 1107 l 475 1275 m 286 1275 l 392 1275 l 467 1135 l 403 1107 l 286 1275 z "},"Ȏ":{ha:1039,x_min:54,x_max:983,o:"m 518 -7 q 328 35 414 -7 q 182 148 243 78 q 88 308 121 218 q 54 493 54 399 q 90 682 54 592 q 188 842 125 772 q 335 952 250 911 q 521 993 421 993 q 710 949 625 993 q 856 835 794 906 q 950 674 917 764 q 983 492 983 585 q 948 303 983 393 q 851 144 913 213 q 703 34 789 75 q 518 -7 618 -7 m 181 493 q 205 348 181 418 q 274 224 229 278 q 381 138 318 169 q 519 106 443 106 q 661 140 599 106 q 767 228 724 174 q 834 353 811 283 q 857 493 857 422 q 833 638 857 568 q 763 762 808 708 q 656 847 718 815 q 519 879 594 879 q 378 846 440 879 q 272 758 315 813 q 204 635 228 704 q 181 493 181 565 m 521 1213 q 465 1184 489 1213 q 442 1118 442 1156 l 371 1118 q 383 1179 371 1151 q 415 1228 394 1207 q 462 1260 435 1249 q 521 1272 489 1272 q 580 1260 553 1272 q 627 1228 607 1249 q 659 1179 647 1207 q 671 1118 671 1151 l 601 1118 q 574 1185 597 1158 q 521 1213 551 1213 z "},"Ṛ":{ha:913,x_min:118,x_max:871,o:"m 118 0 l 118 986 l 540 986 q 660 959 606 986 q 755 887 715 932 q 817 785 794 842 q 839 671 839 729 q 824 572 839 619 q 783 485 810 524 q 717 418 756 446 q 632 378 679 390 l 871 0 l 729 0 l 504 354 l 243 354 l 243 0 l 118 0 m 243 465 l 542 465 q 612 482 581 465 q 665 527 643 499 q 700 593 688 556 q 713 671 713 631 q 698 749 713 713 q 659 815 683 786 q 602 859 635 843 q 533 875 569 875 l 243 875 l 243 465 m 400 -253 l 400 -106 l 511 -106 l 511 -253 l 400 -253 z "},"Ȑ":{ha:913,x_min:118,x_max:871,o:"m 118 0 l 118 986 l 540 986 q 660 959 606 986 q 755 887 715 932 q 817 785 794 842 q 839 671 839 729 q 824 572 839 619 q 783 485 810 524 q 717 418 756 446 q 632 378 679 390 l 871 0 l 729 0 l 504 354 l 243 354 l 243 0 l 118 0 m 243 465 l 542 465 q 612 482 581 465 q 665 527 643 499 q 700 593 688 556 q 713 671 713 631 q 698 749 713 713 q 659 815 683 786 q 602 859 635 843 q 533 875 569 875 l 243 875 l 243 465 m 408 1275 l 514 1275 l 589 1135 l 525 1107 l 408 1275 m 219 1275 l 325 1275 l 400 1135 l 336 1107 l 219 1275 z "},"Ȓ":{ha:913,x_min:118,x_max:871,o:"m 118 0 l 118 986 l 540 986 q 660 959 606 986 q 755 887 715 932 q 817 785 794 842 q 839 671 839 729 q 824 572 839 619 q 783 485 810 524 q 717 418 756 446 q 632 378 679 390 l 871 0 l 729 0 l 504 354 l 243 354 l 243 0 l 118 0 m 243 465 l 542 465 q 612 482 581 465 q 665 527 643 499 q 700 593 688 556 q 713 671 713 631 q 698 749 713 713 q 659 815 683 786 q 602 859 635 843 q 533 875 569 875 l 243 875 l 243 465 m 449 1213 q 393 1184 417 1213 q 369 1118 369 1156 l 299 1118 q 310 1179 299 1151 q 342 1228 322 1207 q 390 1260 363 1249 q 449 1272 417 1272 q 508 1260 481 1272 q 555 1228 535 1249 q 587 1179 575 1207 q 599 1118 599 1151 l 529 1118 q 502 1185 525 1158 q 449 1213 479 1213 z "},"Ṣ":{ha:846,x_min:40,x_max:800,o:"m 697 779 q 653 817 681 799 q 590 849 625 835 q 515 873 556 864 q 429 882 474 882 q 260 839 314 882 q 207 721 207 796 q 222 654 207 681 q 270 609 238 628 q 351 576 303 590 q 467 547 400 563 q 605 509 543 531 q 710 456 667 488 q 777 378 754 424 q 800 265 800 332 q 772 142 800 194 q 697 56 744 90 q 583 6 649 22 q 442 -10 518 -10 q 226 26 328 -10 q 40 129 124 61 l 100 235 q 158 188 122 211 q 238 145 193 164 q 335 115 283 126 q 444 103 388 103 q 608 140 550 103 q 667 253 667 178 q 648 323 667 294 q 593 372 629 351 q 503 409 557 393 q 382 442 450 425 q 250 481 307 460 q 155 531 193 501 q 97 601 117 560 q 78 701 78 643 q 104 826 78 772 q 178 918 131 881 q 290 974 225 956 q 432 993 356 993 q 613 963 532 993 q 756 881 693 932 l 697 779 m 367 -253 l 367 -106 l 478 -106 l 478 -253 l 367 -253 z "},"Ṭ":{ha:853,x_min:24,x_max:829,o:"m 829 875 l 489 875 l 489 0 l 364 0 l 364 875 l 24 875 l 24 986 l 829 986 l 829 875 m 368 -253 l 368 -106 l 479 -106 l 479 -253 l 368 -253 z "},"Ụ":{ha:1049,x_min:104,x_max:944,o:"m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 922 298 944 388 q 849 140 899 208 q 719 33 799 72 q 525 -7 639 -7 q 326 35 407 -7 q 197 145 246 76 q 126 303 147 214 q 104 488 104 393 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 m 471 -253 l 471 -106 l 582 -106 l 582 -253 l 471 -253 z "},"Ȕ":{ha:1049,x_min:104,x_max:944,o:"m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 922 298 944 388 q 849 140 899 208 q 719 33 799 72 q 525 -7 639 -7 q 326 35 407 -7 q 197 145 246 76 q 126 303 147 214 q 104 488 104 393 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 m 485 1275 l 590 1275 l 665 1135 l 601 1107 l 485 1275 m 296 1275 l 401 1275 l 476 1135 l 413 1107 l 296 1275 z "},"Ȗ":{ha:1049,x_min:104,x_max:944,o:"m 524 106 q 667 139 610 106 q 758 226 724 172 q 806 348 792 279 q 819 488 819 417 l 819 986 l 944 986 l 944 488 q 922 298 944 388 q 849 140 899 208 q 719 33 799 72 q 525 -7 639 -7 q 326 35 407 -7 q 197 145 246 76 q 126 303 147 214 q 104 488 104 393 l 104 986 l 229 986 l 229 488 q 244 345 229 414 q 292 224 258 276 q 383 138 326 171 q 524 106 439 106 m 524 1213 q 468 1184 492 1213 q 444 1118 444 1156 l 374 1118 q 385 1179 374 1151 q 417 1228 397 1207 q 465 1260 438 1249 q 524 1272 492 1272 q 583 1260 556 1272 q 630 1228 610 1249 q 662 1179 650 1207 q 674 1118 674 1151 l 604 1118 q 577 1185 600 1158 q 524 1213 554 1213 z "},"Ẓ":{ha:876,x_min:44,x_max:826,o:"m 44 97 l 681 875 l 57 875 l 57 986 l 826 986 l 826 889 l 201 111 l 826 111 l 826 0 l 44 0 l 44 97 m 397 -253 l 397 -106 l 508 -106 l 508 -253 l 397 -253 z "},"ȁ":{ha:769,x_min:42,x_max:711,o:"m 285 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 679 -4 692 -3 q 653 -6 667 -6 q 595 16 617 -6 q 569 68 574 38 l 567 119 q 444 20 518 54 q 285 -14 369 -14 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 m 358 1014 l 464 1014 l 539 874 l 475 846 l 358 1014 m 169 1014 l 275 1014 l 350 874 l 286 846 l 169 1014 z "},"ȃ":{ha:769,x_min:42,x_max:711,o:"m 285 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 679 -4 692 -3 q 653 -6 667 -6 q 595 16 617 -6 q 569 68 574 38 l 567 119 q 444 20 518 54 q 285 -14 369 -14 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 m 379 954 q 324 926 347 954 q 300 860 300 897 l 229 860 q 241 921 229 893 q 273 969 253 949 q 320 1002 293 990 q 379 1014 347 1014 q 438 1002 411 1014 q 485 969 465 990 q 517 921 506 949 q 529 860 529 893 l 460 860 q 433 927 456 900 q 379 954 410 954 z "},"ḍ":{ha:874,x_min:51,x_max:807,o:"m 397 -14 q 258 17 322 -14 q 149 99 194 47 q 77 218 103 150 q 51 361 51 286 q 76 506 51 438 q 144 626 100 575 q 248 708 188 678 q 381 738 308 738 q 537 692 468 738 q 646 581 606 646 l 646 1014 l 768 1014 l 768 150 q 807 106 768 107 l 807 0 q 776 -4 788 -3 q 753 -6 764 -6 q 690 19 717 -6 q 663 75 663 43 l 663 136 q 548 26 619 65 q 397 -14 476 -14 m 426 92 q 495 104 460 92 q 562 139 531 117 q 616 191 593 161 q 646 254 639 221 l 646 463 q 608 528 633 497 q 552 583 583 560 q 485 619 521 606 q 415 632 450 632 q 317 609 361 632 q 242 548 274 586 q 194 460 211 510 q 178 360 178 411 q 197 256 178 306 q 250 171 217 207 q 328 113 283 135 q 426 92 374 92 m 361 -253 l 361 -106 l 472 -106 l 472 -253 l 361 -253 z "},"ẹ":{ha:821,x_min:50,x_max:783,o:"m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 m 368 -253 l 368 -106 l 479 -106 l 479 -253 l 368 -253 z "},"ȅ":{ha:821,x_min:50,x_max:783,o:"m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 m 386 1014 l 492 1014 l 567 874 l 503 846 l 386 1014 m 197 1014 l 303 1014 l 378 874 l 314 846 l 197 1014 z "},"ȇ":{ha:821,x_min:50,x_max:783,o:"m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 m 421 954 q 365 926 389 954 q 342 860 342 897 l 271 860 q 283 921 271 893 q 315 969 294 949 q 362 1002 335 990 q 421 1014 389 1014 q 480 1002 453 1014 q 527 969 507 990 q 559 921 547 949 q 571 860 571 893 l 501 860 q 474 927 497 900 q 421 954 451 954 z "},"ǵ":{ha:865,x_min:51,x_max:767,o:"m 386 -8 q 251 22 313 -8 q 144 104 189 53 q 76 222 100 156 q 51 361 51 289 q 76 506 51 438 q 144 626 100 575 q 251 708 189 678 q 388 738 313 738 q 546 693 479 738 q 658 581 613 649 l 658 725 l 767 725 l 767 8 q 738 -128 767 -69 q 658 -228 708 -187 q 541 -289 608 -268 q 397 -310 474 -310 q 197 -267 274 -310 q 68 -150 119 -225 l 139 -87 q 250 -183 182 -151 q 397 -215 318 -215 q 492 -201 447 -215 q 571 -160 538 -187 q 624 -90 604 -132 q 644 8 644 -49 l 644 136 q 595 76 624 103 q 533 30 567 49 q 463 1 500 11 q 386 -8 425 -8 m 424 92 q 499 106 463 92 q 565 142 535 119 q 617 194 596 165 q 644 254 638 224 l 644 463 q 605 531 629 500 q 550 584 581 561 q 484 619 519 607 q 413 632 449 632 q 313 608 357 632 q 239 546 269 585 q 192 458 208 507 q 175 358 175 408 q 194 256 175 304 q 247 171 214 207 q 326 113 281 135 q 424 92 371 92 m 450 846 l 369 874 l 450 1014 l 572 1014 l 450 846 z "},"ḥ":{ha:819,x_min:99,x_max:728,o:"m 728 0 l 606 0 l 606 406 q 567 573 606 518 q 453 628 528 628 q 381 613 417 628 q 313 574 344 599 q 258 514 282 549 q 221 438 233 479 l 221 0 l 99 0 l 99 1014 l 221 1014 l 221 569 q 338 693 264 649 q 499 738 411 738 q 607 714 563 738 q 678 650 651 690 q 716 553 704 610 q 728 433 728 497 l 728 0 m 363 -253 l 363 -106 l 474 -106 l 474 -253 l 363 -253 z "},"ị":{ha:319,x_min:99,x_max:221,o:"m 99 0 l 99 725 l 221 725 l 221 0 l 99 0 m 99 861 l 99 1014 l 221 1014 l 221 861 l 99 861 m 103 -253 l 103 -106 l 214 -106 l 214 -253 l 103 -253 z "},"ȉ":{ha:319,x_min:-50,x_max:319,o:"m 99 0 l 99 725 l 221 725 l 221 0 l 99 0 m 139 1014 l 244 1014 l 319 874 l 256 846 l 139 1014 m -50 1014 l 56 1014 l 131 874 l 67 846 l -50 1014 z "},"ȋ":{ha:319,x_min:11,x_max:311,o:"m 99 0 l 99 725 l 221 725 l 221 0 l 99 0 m 161 954 q 106 926 129 954 q 82 860 82 897 l 11 860 q 23 921 11 893 q 55 969 35 949 q 102 1002 75 990 q 161 1014 129 1014 q 220 1002 193 1014 q 267 969 247 990 q 299 921 288 949 q 311 860 311 893 l 242 860 q 215 927 238 900 q 161 954 192 954 z "},"ọ":{ha:832,x_min:50,x_max:782,o:"m 415 -14 q 266 17 333 -14 q 151 99 199 47 q 76 218 103 150 q 50 361 50 286 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 m 363 -253 l 363 -106 l 474 -106 l 474 -253 l 363 -253 z "},"ȍ":{ha:832,x_min:50,x_max:782,o:"m 415 -14 q 266 17 333 -14 q 151 99 199 47 q 76 218 103 150 q 50 361 50 286 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 m 376 1014 l 482 1014 l 557 874 l 493 846 l 376 1014 m 188 1014 l 293 1014 l 368 874 l 304 846 l 188 1014 z "},"ȏ":{ha:832,x_min:50,x_max:782,o:"m 415 -14 q 266 17 333 -14 q 151 99 199 47 q 76 218 103 150 q 50 361 50 286 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 m 415 954 q 360 926 383 954 q 336 860 336 897 l 265 860 q 277 921 265 893 q 309 969 289 949 q 356 1002 329 990 q 415 1014 383 1014 q 474 1002 447 1014 q 522 969 501 990 q 553 921 542 949 q 565 860 565 893 l 496 860 q 469 927 492 900 q 415 954 446 954 z "},"ṛ":{ha:504,x_min:99,x_max:482,o:"m 482 618 q 320 571 390 615 q 221 447 250 526 l 221 0 l 99 0 l 99 725 l 213 725 l 213 557 q 311 678 250 632 q 442 731 372 725 q 465 731 456 731 q 482 729 475 731 l 482 618 m 106 -253 l 106 -106 l 217 -106 l 217 -253 l 106 -253 z "},"ȑ":{ha:504,x_min:76,x_max:482,o:"m 482 618 q 320 571 390 615 q 221 447 250 526 l 221 0 l 99 0 l 99 725 l 213 725 l 213 557 q 311 678 250 632 q 442 731 372 725 q 465 731 456 731 q 482 729 475 731 l 482 618 m 265 1014 l 371 1014 l 446 874 l 382 846 l 265 1014 m 76 1014 l 182 1014 l 257 874 l 193 846 l 76 1014 z "},"ȓ":{ha:504,x_min:99,x_max:482,o:"m 482 618 q 320 571 390 615 q 221 447 250 526 l 221 0 l 99 0 l 99 725 l 213 725 l 213 557 q 311 678 250 632 q 442 731 372 725 q 465 731 456 731 q 482 729 475 731 l 482 618 m 289 954 q 233 926 257 954 q 210 860 210 897 l 139 860 q 151 921 139 893 q 183 969 163 949 q 230 1002 203 990 q 289 1014 257 1014 q 348 1002 321 1014 q 395 969 375 990 q 427 921 415 949 q 439 860 439 893 l 369 860 q 342 927 365 900 q 289 954 319 954 z "},"ṣ":{ha:686,x_min:35,x_max:640,o:"m 353 -14 q 181 13 265 -14 q 35 92 96 40 l 88 174 q 215 101 151 125 q 350 76 279 76 q 476 108 429 76 q 522 196 522 139 q 510 241 522 222 q 472 274 497 260 q 408 299 447 288 q 318 322 369 310 q 206 354 253 339 q 128 390 158 369 q 83 440 97 411 q 69 513 69 469 q 91 609 69 567 q 150 680 113 651 q 238 723 188 708 q 347 738 289 738 q 500 711 429 738 q 619 642 571 685 l 564 568 q 461 628 518 608 q 344 649 404 649 q 231 620 278 649 q 185 529 185 592 q 194 488 185 504 q 224 458 203 471 q 277 436 244 446 q 356 415 310 426 q 481 381 428 399 q 570 340 535 364 q 623 285 606 317 q 640 207 640 253 q 563 46 640 106 q 353 -14 485 -14 m 285 -253 l 285 -106 l 396 -106 l 396 -253 l 285 -253 z "},"ṭ":{ha:489,x_min:35,x_max:474,o:"m 474 36 q 444 23 463 31 q 403 8 426 15 q 353 -5 381 0 q 297 -10 326 -10 q 182 27 231 -10 q 133 142 133 64 l 133 629 l 35 629 l 35 725 l 133 725 l 133 967 l 256 967 l 256 725 l 418 725 l 418 629 l 256 629 l 256 179 q 282 121 258 139 q 338 103 306 103 q 403 115 374 103 q 444 133 433 126 l 474 36 m 233 -253 l 233 -106 l 344 -106 l 344 -253 l 233 -253 z "},"ụ":{ha:835,x_min:92,x_max:768,o:"m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 735 -3 747 -3 q 713 -4 724 -4 q 652 17 676 -4 q 626 71 628 39 l 624 156 q 496 30 575 74 q 322 -14 417 -14 m 344 -253 l 344 -106 l 456 -106 l 456 -253 l 344 -253 z "},"ȕ":{ha:835,x_min:92,x_max:768,o:"m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 735 -3 747 -3 q 713 -4 724 -4 q 652 17 676 -4 q 626 71 628 39 l 624 156 q 496 30 575 74 q 322 -14 417 -14 m 376 1014 l 482 1014 l 557 874 l 493 846 l 376 1014 m 188 1014 l 293 1014 l 368 874 l 304 846 l 188 1014 z "},"ȗ":{ha:835,x_min:92,x_max:768,o:"m 322 -14 q 150 63 208 -14 q 92 290 92 139 l 92 725 l 214 725 l 214 314 q 368 92 214 92 q 509 140 443 92 q 607 271 575 188 l 607 725 l 729 725 l 729 150 q 768 106 729 107 l 768 0 q 735 -3 747 -3 q 713 -4 724 -4 q 652 17 676 -4 q 626 71 628 39 l 624 156 q 496 30 575 74 q 322 -14 417 -14 m 407 954 q 351 926 375 954 q 328 860 328 897 l 257 860 q 269 921 257 893 q 301 969 281 949 q 348 1002 321 990 q 407 1014 375 1014 q 466 1002 439 1014 q 513 969 493 990 q 545 921 533 949 q 557 860 557 893 l 488 860 q 460 927 483 900 q 407 954 438 954 z "},"ẓ":{ha:685,x_min:42,x_max:638,o:"m 42 79 l 506 636 l 54 636 l 54 725 l 636 725 l 636 646 l 175 89 l 638 89 l 638 0 l 42 0 l 42 79 m 282 -253 l 282 -106 l 393 -106 l 393 -253 l 282 -253 z "},"∆":{ha:858,x_min:11,x_max:847,o:"m 847 93 l 847 0 l 11 0 l 11 93 l 379 986 l 482 986 l 847 93 m 710 111 l 431 842 l 150 111 l 710 111 z "},"Δ":{ha:899,x_min:31,x_max:867,o:"m 867 93 l 867 0 l 31 0 l 31 93 l 399 986 l 501 986 l 867 93 m 729 111 l 450 842 l 169 111 l 729 111 z "},"∏":{ha:1007,x_min:44,x_max:963,o:"m 733 875 l 274 875 l 274 -125 l 156 -125 l 156 875 l 44 875 l 44 986 l 963 986 l 963 875 l 851 875 l 851 -125 l 733 -125 l 733 875 z "},"∑":{ha:758,x_min:44,x_max:711,o:"m 690 885 l 221 885 l 221 879 l 486 513 l 192 117 l 192 111 l 711 111 l 711 0 l 44 0 l 44 88 l 354 494 l 54 908 l 54 986 l 690 986 l 690 885 z "},"√":{ha:644,x_min:14,x_max:592,o:"m 14 507 l 232 507 l 319 107 l 475 1097 l 592 1097 l 381 0 l 250 0 l 131 418 l 14 418 l 14 507 z "},"∞":{ha:953,x_min:60,x_max:892,o:"m 282 718 q 351 708 321 718 q 403 680 381 697 q 444 640 426 663 q 476 590 461 617 q 509 640 492 617 q 549 680 526 663 q 601 708 572 697 q 671 718 631 718 q 762 700 721 718 q 832 651 803 682 q 876 577 861 619 q 892 488 892 535 q 875 399 892 440 q 828 326 858 357 q 758 276 799 294 q 669 258 717 258 q 551 292 594 258 q 479 374 508 326 q 407 292 451 326 q 282 258 363 258 q 200 276 240 258 q 128 326 160 294 q 78 399 97 357 q 60 489 60 442 q 76 578 60 536 q 123 651 93 619 q 194 700 153 682 q 282 718 235 718 m 282 356 q 334 366 311 356 q 376 394 357 376 q 409 436 394 413 q 438 486 424 460 q 409 537 424 513 q 376 580 394 561 q 335 609 358 599 q 282 619 313 619 q 238 612 260 619 q 197 589 215 604 q 168 549 179 574 q 157 489 157 524 q 168 428 157 453 q 197 387 179 403 q 238 363 215 371 q 282 356 260 356 m 671 356 q 715 363 693 356 q 755 387 738 371 q 783 428 772 403 q 794 489 794 453 q 783 549 794 524 q 755 589 772 574 q 715 612 738 604 q 671 619 693 619 q 616 608 639 619 q 576 578 593 597 q 544 534 558 560 q 518 481 531 508 q 578 392 544 429 q 671 356 613 356 z "},"∂":{ha:781,x_min:36,x_max:713,o:"m 340 -14 q 218 8 274 -14 q 122 69 163 31 q 58 159 81 107 q 36 271 36 211 q 63 397 36 336 q 138 503 90 457 q 246 576 185 549 q 376 603 307 603 q 513 567 456 603 q 592 472 571 532 q 596 531 594 503 q 597 582 597 558 q 583 726 597 668 q 543 820 569 785 q 479 871 517 856 q 396 886 442 886 q 283 866 338 886 q 201 814 229 846 l 133 888 q 251 966 178 939 q 407 993 324 993 q 635 890 558 993 q 713 554 713 788 q 685 308 713 414 q 609 130 658 201 q 492 22 560 58 q 340 -14 424 -14 m 343 92 q 430 110 389 92 q 502 159 471 128 q 551 231 533 190 q 569 317 569 272 q 555 390 569 356 q 515 450 540 425 q 454 490 489 475 q 379 504 419 504 q 294 486 335 504 q 222 438 253 468 q 172 367 190 407 q 153 281 153 326 q 167 206 153 240 q 208 147 182 172 q 268 106 233 121 q 343 92 303 92 z "},"π":{ha:846,x_min:35,x_max:810,o:"m 264 614 l 264 0 l 146 0 l 146 614 l 35 614 l 35 725 l 786 725 l 786 614 l 633 614 l 633 188 q 655 124 633 147 q 715 101 676 101 q 751 106 731 101 q 790 118 772 111 l 810 19 q 738 -1 779 7 q 664 -10 696 -10 q 556 31 596 -10 q 515 143 515 71 l 515 614 l 264 614 z "},"Ω":{ha:1056,x_min:61,x_max:994,o:"m 61 110 l 310 110 q 138 274 201 171 q 75 507 75 378 q 110 691 75 603 q 205 846 144 779 q 348 953 265 913 q 528 993 431 993 q 708 953 625 993 q 851 846 790 913 q 946 691 911 779 q 981 507 981 603 q 917 274 981 378 q 746 110 854 171 l 994 110 l 994 0 l 593 0 l 593 110 q 701 170 653 129 q 784 265 750 211 q 836 382 818 319 q 854 507 854 444 q 831 643 854 576 q 766 763 808 710 q 663 847 724 815 q 528 879 603 879 q 392 847 453 879 q 290 763 332 815 q 224 643 247 710 q 201 507 201 576 q 219 382 201 444 q 272 265 238 319 q 354 170 306 211 q 463 110 403 129 l 463 0 l 61 0 l 61 110 z "},"Ω":{ha:1056,x_min:61,x_max:994,o:"m 61 110 l 310 110 q 138 274 201 171 q 75 507 75 378 q 110 691 75 603 q 205 846 144 779 q 348 953 265 913 q 528 993 431 993 q 708 953 625 993 q 851 846 790 913 q 946 691 911 779 q 981 507 981 603 q 917 274 981 378 q 746 110 854 171 l 994 110 l 994 0 l 593 0 l 593 110 q 701 170 653 129 q 784 265 750 211 q 836 382 818 319 q 854 507 854 444 q 831 643 854 576 q 766 763 808 710 q 663 847 724 815 q 528 879 603 879 q 392 847 453 879 q 290 763 332 815 q 224 643 247 710 q 201 507 201 576 q 219 382 201 444 q 272 265 238 319 q 354 170 306 211 q 463 110 403 129 l 463 0 l 61 0 l 61 110 z "},"℮":{ha:832,x_min:58,x_max:790,o:"m 424 38 q 583 68 519 38 q 686 140 646 99 l 722 101 q 601 19 674 53 q 424 -14 528 -14 q 274 17 342 -14 q 159 99 207 47 q 85 218 111 150 q 58 361 58 286 q 85 506 58 438 q 160 625 113 574 q 276 707 208 676 q 424 738 343 738 q 572 707 504 738 q 688 624 640 676 q 763 503 736 572 q 790 354 790 433 l 207 354 l 207 146 q 303 67 247 96 q 424 38 358 38 m 424 686 q 303 656 358 686 q 207 575 247 626 l 207 410 l 643 410 l 643 574 q 547 656 603 626 q 424 686 490 686 z "},"∫":{ha:439,x_min:11,x_max:429,o:"m 135 986 q 170 1095 132 1051 q 282 1139 208 1139 q 356 1131 314 1139 q 429 1110 397 1122 l 400 1025 q 360 1037 381 1032 q 324 1042 339 1042 q 265 1019 288 1042 q 246 956 243 996 l 303 -79 q 268 -192 307 -151 q 157 -232 229 -232 q 84 -224 125 -232 q 11 -203 43 -215 l 40 -118 q 80 -130 60 -125 q 115 -135 100 -135 q 174 -112 151 -135 q 193 -49 196 -89 l 135 986 z "},"◊":{ha:725,x_min:39,x_max:686,o:"m 428 1014 l 686 508 l 428 0 l 297 0 l 39 508 l 297 1014 l 428 1014 m 576 492 l 361 919 l 160 521 l 374 90 l 576 492 z "},"ˉ":{ha:560,x_min:78,x_max:483,o:"m 78 908 l 78 989 l 483 989 l 483 908 l 78 908 z "},"ℓ":{ha:457,x_min:94,x_max:457,o:"m 296 101 q 333 106 313 101 q 374 118 354 111 l 393 19 q 321 -1 363 7 q 247 -10 279 -10 q 135 31 175 -10 q 94 143 94 71 l 94 847 q 109 919 94 886 q 149 976 124 951 q 208 1014 174 1000 q 282 1028 242 1028 q 409 978 361 1028 q 457 847 457 928 q 435 723 457 793 q 378 582 414 653 q 297 446 343 511 q 203 335 251 381 l 203 188 q 228 124 203 147 q 296 101 253 101 m 358 839 q 339 908 358 883 q 283 932 319 932 q 225 908 247 932 q 203 847 203 885 l 203 463 q 261 549 233 500 q 310 651 289 599 q 345 752 332 703 q 358 839 358 801 z "},"Ђ":{ha:988,x_min:24,x_max:950,o:"m 281 875 l 24 875 l 24 986 l 788 986 l 788 875 l 406 875 l 406 539 q 517 601 453 579 q 653 624 581 624 q 872 540 793 624 q 950 296 950 457 q 879 66 950 146 q 665 -14 808 -14 q 500 17 579 -14 l 536 124 q 606 99 576 106 q 664 92 636 92 q 781 142 743 92 q 818 297 818 193 q 775 460 818 408 q 636 513 732 513 q 406 417 510 513 l 406 0 l 281 0 l 281 875 z "},"Ѓ":{ha:713,x_min:121,x_max:689,o:"m 436 1104 l 356 1132 l 436 1272 l 558 1272 l 436 1104 m 689 875 l 246 875 l 246 0 l 121 0 l 121 986 l 689 986 l 689 875 z "},"Є":{ha:974,x_min:56,x_max:938,o:"m 938 221 q 872 123 913 165 q 780 51 832 81 q 665 7 728 22 q 532 -8 601 -8 q 334 36 422 -8 q 184 152 246 81 q 89 315 122 224 q 56 500 56 406 q 86 677 56 589 q 177 835 117 765 q 328 949 238 906 q 539 992 419 992 q 672 976 613 992 q 778 931 732 960 q 860 863 825 903 q 919 776 896 824 l 821 713 q 765 792 797 760 q 694 843 732 824 q 614 871 656 863 q 533 879 572 879 q 390 852 451 879 q 286 780 329 825 q 219 676 243 735 q 186 556 194 618 l 676 556 l 676 451 l 183 451 q 218 318 190 381 q 292 208 246 256 q 399 132 338 160 q 538 104 461 104 q 621 114 578 104 q 703 145 664 124 q 777 199 743 167 q 833 278 811 232 l 938 221 z "},"Ѕ":{ha:846,x_min:40,x_max:800,o:"m 697 779 q 653 817 681 799 q 590 849 625 835 q 515 873 556 864 q 429 882 474 882 q 260 839 314 882 q 207 721 207 796 q 222 654 207 681 q 270 609 238 628 q 351 576 303 590 q 467 547 400 563 q 605 509 543 531 q 710 456 667 488 q 777 378 754 424 q 800 265 800 332 q 772 142 800 194 q 697 56 744 90 q 583 6 649 22 q 442 -10 518 -10 q 226 26 328 -10 q 40 129 124 61 l 100 235 q 158 188 122 211 q 238 145 193 164 q 335 115 283 126 q 444 103 388 103 q 608 140 550 103 q 667 253 667 178 q 648 323 667 294 q 593 372 629 351 q 503 409 557 393 q 382 442 450 425 q 250 481 307 460 q 155 531 193 501 q 97 601 117 560 q 78 701 78 643 q 104 826 78 772 q 178 918 131 881 q 290 974 225 956 q 432 993 356 993 q 613 963 532 993 q 756 881 693 932 l 697 779 z "},"І":{ha:367,x_min:121,x_max:246,o:"m 121 0 l 121 986 l 246 986 l 246 0 l 121 0 z "},"Ї":{ha:367,x_min:19,x_max:347,o:"m 121 0 l 121 986 l 246 986 l 246 0 l 121 0 m 19 1126 l 19 1268 l 122 1268 l 122 1126 l 19 1126 m 244 1126 l 244 1268 l 347 1268 l 347 1126 l 244 1126 z "},"Ј":{ha:676,x_min:17,x_max:567,o:"m 49 147 q 124 113 76 128 q 231 97 171 97 q 343 122 301 97 q 406 197 385 147 q 435 318 428 246 q 442 485 442 390 l 442 986 l 567 986 l 567 485 q 556 280 567 372 q 510 122 546 188 q 409 21 475 57 q 231 -15 343 -15 q 17 46 106 -15 l 49 147 z "},"Љ":{ha:1392,x_min:10,x_max:1353,o:"m 10 111 q 65 122 39 113 q 114 154 92 131 q 156 220 136 178 q 192 329 175 263 q 222 491 208 396 q 246 717 235 586 l 268 986 l 790 986 l 790 581 l 1064 581 q 1176 562 1124 581 q 1267 507 1228 543 q 1330 416 1307 471 q 1353 290 1353 361 q 1330 165 1353 219 q 1267 74 1307 110 q 1176 19 1228 38 q 1064 0 1124 0 l 665 0 l 665 875 l 385 875 l 371 711 q 329 383 354 519 q 264 160 304 247 q 167 31 224 72 q 32 -10 111 -10 l 10 111 m 1064 108 q 1185 158 1143 108 q 1226 290 1226 207 q 1185 423 1226 374 q 1064 472 1143 472 l 790 472 l 790 108 l 1064 108 z "},"Њ":{ha:1446,x_min:121,x_max:1407,o:"m 121 986 l 246 986 l 246 581 l 719 581 l 719 986 l 844 986 l 844 581 l 1118 581 q 1230 562 1178 581 q 1322 507 1282 543 q 1384 416 1361 471 q 1407 290 1407 361 q 1384 165 1407 219 q 1322 74 1361 110 q 1230 19 1282 38 q 1118 0 1178 0 l 719 0 l 719 469 l 246 469 l 246 0 l 121 0 l 121 986 m 1118 108 q 1239 158 1197 108 q 1281 290 1281 207 q 1239 423 1281 374 q 1118 472 1197 472 l 844 472 l 844 108 l 1118 108 z "},"Ћ":{ha:996,x_min:24,x_max:940,o:"m 818 332 q 781 472 818 431 q 657 513 743 513 q 520 487 583 513 q 406 417 457 461 l 406 0 l 281 0 l 281 875 l 24 875 l 24 986 l 788 986 l 788 875 l 406 875 l 406 538 q 524 601 454 578 q 671 624 593 624 q 867 559 794 624 q 940 360 940 494 l 940 0 l 818 0 l 818 332 z "},"Ќ":{ha:865,x_min:121,x_max:869,o:"m 246 557 l 371 557 l 694 986 l 838 986 l 486 510 l 869 0 l 726 0 l 385 446 l 246 446 l 246 0 l 121 0 l 121 986 l 246 986 l 246 557 m 478 1104 l 397 1132 l 478 1272 l 600 1272 l 478 1104 z "},"Ѝ":{ha:1006,x_min:121,x_max:919,o:"m 246 190 l 817 986 l 919 986 l 919 0 l 794 0 l 794 782 l 233 0 l 121 0 l 121 986 l 246 986 l 246 190 m 364 1274 l 485 1274 l 567 1133 l 488 1106 l 364 1274 z "},"Ў":{ha:865,x_min:26,x_max:844,o:"m 236 -10 q 178 -5 210 -10 q 124 10 146 0 l 124 117 q 176 103 147 107 q 226 99 204 99 q 273 105 251 99 q 313 128 294 111 q 349 172 332 144 q 385 243 367 200 l 26 986 l 158 986 l 443 379 l 713 986 l 844 986 l 497 236 q 438 123 467 169 q 378 47 408 76 q 313 3 347 17 q 236 -10 278 -10 m 443 1110 q 292 1152 350 1110 q 232 1272 235 1194 l 306 1272 q 346 1206 306 1235 q 444 1178 386 1178 q 538 1205 500 1178 q 582 1272 575 1232 l 654 1272 q 594 1152 651 1194 q 443 1110 536 1110 z "},"Џ":{ha:968,x_min:122,x_max:846,o:"m 122 986 l 247 986 l 247 111 l 721 111 l 721 986 l 846 986 l 846 0 l 546 0 l 546 -257 l 421 -257 l 421 0 l 122 0 l 122 986 z "},"А":{ha:940,x_min:14,x_max:926,o:"m 418 986 l 524 986 l 926 0 l 793 0 l 676 289 l 263 289 l 147 0 l 14 0 l 418 986 m 649 386 l 471 842 l 288 386 l 649 386 z "},"Б":{ha:914,x_min:121,x_max:864,o:"m 121 986 l 814 986 l 814 875 l 246 875 l 246 581 l 575 581 q 687 562 635 581 q 778 507 739 543 q 841 416 818 471 q 864 290 864 361 q 841 165 864 219 q 779 74 818 110 q 688 19 740 38 q 575 0 635 0 l 121 0 l 121 986 m 575 108 q 696 158 654 108 q 738 290 738 207 q 697 423 738 374 q 575 472 656 472 l 246 472 l 246 108 l 575 108 z "},"В":{ha:935,x_min:93,x_max:850,o:"m 850 254 q 827 150 850 197 q 765 69 804 103 q 673 18 725 36 q 561 0 621 0 l 93 0 l 93 986 l 583 986 q 676 964 635 986 q 747 906 718 942 q 792 826 776 871 q 808 735 808 781 q 772 599 808 661 q 667 506 735 536 q 801 413 751 481 q 850 254 850 346 m 724 276 q 712 341 724 310 q 680 396 700 372 q 632 433 660 419 q 571 447 604 447 l 218 447 l 218 108 l 561 108 q 625 122 596 108 q 676 159 654 136 q 711 213 699 182 q 724 276 724 243 m 218 878 l 218 549 l 532 549 q 593 562 565 549 q 641 597 621 575 q 673 649 661 619 q 685 713 685 679 q 674 778 685 747 q 644 831 663 808 q 598 865 625 853 q 540 878 571 878 l 218 878 z "},"Г":{ha:713,x_min:121,x_max:689,o:"m 689 875 l 246 875 l 246 0 l 121 0 l 121 986 l 689 986 l 689 875 z "},"Д":{ha:994,x_min:25,x_max:971,o:"m 25 111 l 38 111 q 93 122 67 113 q 142 154 119 131 q 183 220 164 178 q 219 329 203 263 q 249 491 236 396 q 274 717 263 586 l 296 986 l 818 986 l 818 111 l 971 111 l 971 -258 l 860 -258 l 860 0 l 136 0 l 136 -258 l 25 -258 l 25 111 m 693 111 l 693 875 l 413 875 l 399 711 q 340 319 378 463 q 238 111 301 175 l 693 111 z "},"Е":{ha:842,x_min:121,x_max:790,o:"m 790 111 l 790 0 l 121 0 l 121 986 l 778 986 l 778 875 l 246 875 l 246 556 l 708 556 l 708 451 l 246 451 l 246 111 l 790 111 z "},"Ж":{ha:1350,x_min:3,x_max:1347,o:"m 331 510 l 35 986 l 178 986 l 439 557 l 606 557 l 606 986 l 744 986 l 744 557 l 911 557 l 1172 986 l 1315 986 l 1019 510 l 1347 0 l 1204 0 l 931 446 l 744 446 l 744 0 l 606 0 l 606 446 l 419 446 l 146 0 l 3 0 l 331 510 z "},"З":{ha:721,x_min:31,x_max:664,o:"m 58 869 q 170 963 106 932 q 331 993 235 993 q 544 933 468 993 q 619 760 619 874 q 578 615 619 675 q 461 536 536 554 q 608 463 553 525 q 664 300 664 400 q 638 177 664 233 q 567 80 613 121 q 458 16 521 39 q 322 -7 396 -7 q 147 33 224 -7 q 31 147 71 74 l 131 221 q 210 138 163 168 q 328 107 257 107 q 412 121 374 107 q 478 159 450 135 q 522 217 506 183 q 538 292 538 251 q 467 430 538 379 q 272 481 397 481 l 197 481 l 197 592 l 272 592 q 436 633 376 592 q 496 750 496 675 q 449 851 496 818 q 332 885 403 885 q 219 860 269 885 q 142 792 169 836 l 58 869 z "},"И":{ha:1040,x_min:121,x_max:919,o:"m 246 190 l 817 986 l 919 986 l 919 0 l 794 0 l 794 782 l 233 0 l 121 0 l 121 986 l 246 986 l 246 190 z "},"Й":{ha:1040,x_min:121,x_max:919,o:"m 754 1272 q 694 1152 751 1194 q 543 1110 636 1110 q 392 1152 450 1110 q 332 1272 335 1194 l 406 1272 q 446 1206 406 1235 q 544 1178 486 1178 q 638 1205 600 1178 q 682 1272 675 1232 l 754 1272 m 246 190 l 817 986 l 919 986 l 919 0 l 794 0 l 794 782 l 233 0 l 121 0 l 121 986 l 246 986 l 246 190 z "},"К":{ha:865,x_min:121,x_max:869,o:"m 246 557 l 371 557 l 694 986 l 838 986 l 486 510 l 869 0 l 726 0 l 385 446 l 246 446 l 246 0 l 121 0 l 121 986 l 246 986 l 246 557 z "},"Л":{ha:913,x_min:10,x_max:790,o:"m 371 711 q 329 383 354 519 q 264 160 304 247 q 167 31 224 72 q 32 -10 111 -10 l 10 111 q 65 122 39 113 q 114 154 92 131 q 156 220 136 178 q 192 329 175 263 q 222 491 208 396 q 246 717 235 586 l 268 986 l 790 986 l 790 0 l 665 0 l 665 875 l 385 875 l 371 711 z "},"М":{ha:1219,x_min:121,x_max:1099,o:"m 974 0 l 974 763 l 646 178 l 575 178 l 246 763 l 246 0 l 121 0 l 121 986 l 253 986 l 610 346 l 968 986 l 1099 986 l 1099 0 l 974 0 z "},"Н":{ha:1035,x_min:121,x_max:914,o:"m 914 986 l 914 0 l 789 0 l 789 449 l 246 449 l 246 0 l 121 0 l 121 986 l 246 986 l 246 560 l 789 560 l 789 986 l 914 986 z "},"О":{ha:1039,x_min:56,x_max:985,o:"m 519 -7 q 330 35 415 -7 q 183 148 244 78 q 89 308 122 218 q 56 493 56 399 q 91 682 56 592 q 189 842 126 772 q 337 952 251 911 q 522 993 422 993 q 711 949 626 993 q 857 835 796 906 q 951 674 918 764 q 985 492 985 585 q 949 303 985 393 q 852 144 914 213 q 705 34 790 75 q 519 -7 619 -7 m 182 493 q 206 348 182 418 q 275 224 231 278 q 382 138 319 169 q 521 106 444 106 q 663 140 600 106 q 769 228 725 174 q 835 353 813 283 q 858 493 858 422 q 834 638 858 568 q 765 762 810 708 q 658 847 719 815 q 521 879 596 879 q 379 846 442 879 q 273 758 317 813 q 206 635 229 704 q 182 493 182 565 z "},"П":{ha:1028,x_min:121,x_max:907,o:"m 121 986 l 907 986 l 907 0 l 782 0 l 782 875 l 246 875 l 246 0 l 121 0 l 121 986 z "},"Р":{ha:868,x_min:121,x_max:831,o:"m 121 0 l 121 986 l 532 986 q 652 959 597 986 q 747 887 707 932 q 808 785 786 842 q 831 671 831 729 q 810 553 831 610 q 751 451 789 496 q 659 381 713 407 q 540 354 606 354 l 246 354 l 246 0 l 121 0 m 246 465 l 533 465 q 603 481 572 465 q 657 526 635 497 q 692 592 679 554 q 704 671 704 629 q 690 751 704 714 q 651 817 675 789 q 594 860 626 844 q 525 875 561 875 l 246 875 l 246 465 z "},"С":{ha:946,x_min:54,x_max:908,o:"m 54 500 q 85 677 54 589 q 177 835 117 765 q 325 949 238 906 q 524 992 413 992 q 750 932 656 992 q 890 776 844 872 l 792 713 q 738 792 769 760 q 670 843 707 824 q 594 871 633 863 q 518 879 556 879 q 373 845 436 879 q 267 756 310 811 q 202 633 224 701 q 181 494 181 564 q 206 347 181 417 q 278 222 232 276 q 386 136 324 168 q 522 104 449 104 q 602 114 561 104 q 681 145 643 124 q 751 199 718 167 q 804 278 783 232 l 908 221 q 842 123 885 165 q 747 51 800 81 q 633 7 693 22 q 517 -8 574 -8 q 331 36 415 -8 q 184 152 246 81 q 88 315 122 224 q 54 500 54 406 z "},"Т":{ha:853,x_min:24,x_max:829,o:"m 829 875 l 489 875 l 489 0 l 364 0 l 364 875 l 24 875 l 24 986 l 829 986 l 829 875 z "},"У":{ha:865,x_min:26,x_max:844,o:"m 236 -10 q 178 -5 210 -10 q 124 10 146 0 l 124 117 q 176 103 147 107 q 228 99 204 99 q 312 128 275 99 q 385 243 349 157 l 26 986 l 158 986 l 443 379 l 713 986 l 844 986 l 497 236 q 438 123 467 169 q 378 47 408 76 q 313 3 347 17 q 236 -10 278 -10 z "},"Ф":{ha:1036,x_min:47,x_max:986,o:"m 461 76 q 155 203 263 92 q 47 501 47 314 q 156 803 47 692 q 461 932 264 915 l 461 1056 l 586 1056 l 586 932 q 881 803 776 915 q 986 501 986 690 q 881 203 986 314 q 586 76 776 92 l 586 -56 l 461 -56 l 461 76 m 586 189 q 790 284 721 204 q 860 507 860 364 q 790 725 860 647 q 586 817 721 803 l 586 189 m 461 817 q 174 507 174 789 q 247 283 174 363 q 461 189 319 204 l 461 817 z "},"Х":{ha:885,x_min:4,x_max:881,o:"m 143 986 l 443 575 l 743 986 l 881 986 l 510 486 l 869 0 l 732 0 l 443 397 l 154 0 l 15 0 l 375 486 l 4 986 l 143 986 z "},"Ц":{ha:1022,x_min:122,x_max:999,o:"m 888 0 l 122 0 l 122 986 l 247 986 l 247 111 l 721 111 l 721 986 l 846 986 l 846 111 l 999 111 l 999 -258 l 888 -258 l 888 0 z "},"Ч":{ha:854,x_min:60,x_max:733,o:"m 607 986 l 733 986 l 733 0 l 607 0 l 607 417 q 560 401 583 408 q 508 390 536 394 q 447 383 481 385 q 369 381 413 381 q 224 406 283 381 q 128 478 164 432 q 76 585 92 524 q 60 719 60 647 l 60 986 l 186 986 l 186 743 q 196 626 186 674 q 230 549 206 578 q 294 506 254 519 q 393 493 333 493 q 526 508 472 493 q 607 544 579 522 l 607 986 z "},"Ш":{ha:1314,x_min:121,x_max:1193,o:"m 1193 986 l 1193 0 l 121 0 l 121 986 l 246 986 l 246 111 l 594 111 l 594 986 l 719 986 l 719 111 l 1068 111 l 1068 986 l 1193 986 z "},"Щ":{ha:1371,x_min:122,x_max:1346,o:"m 1236 0 l 122 0 l 122 986 l 247 986 l 247 111 l 596 111 l 596 986 l 721 986 l 721 111 l 1069 111 l 1069 986 l 1194 986 l 1194 111 l 1346 111 l 1346 -258 l 1236 -258 l 1236 0 z "},"Ъ":{ha:1042,x_min:24,x_max:1003,o:"m 24 986 l 461 986 l 461 622 l 672 622 q 802 602 742 622 q 907 543 863 582 q 977 446 951 504 q 1003 311 1003 388 q 976 176 1003 235 q 905 79 950 118 q 799 20 860 40 q 672 0 739 0 l 336 0 l 336 875 l 24 875 l 24 986 m 461 108 l 672 108 q 826 163 775 108 q 876 311 876 218 q 824 459 876 404 q 672 514 771 514 l 461 514 l 461 108 z "},"Ы":{ha:1149,x_min:121,x_max:1026,o:"m 121 986 l 246 986 l 246 622 l 457 622 q 587 602 526 622 q 692 543 647 582 q 762 446 736 504 q 788 311 788 388 q 761 176 788 235 q 690 79 735 118 q 584 20 644 40 q 457 0 524 0 l 121 0 l 121 986 m 246 108 l 457 108 q 610 163 560 108 q 661 311 661 218 q 608 459 661 404 q 457 514 556 514 l 246 514 l 246 108 m 901 0 l 901 985 l 1026 985 l 1026 0 l 901 0 z "},"Ь":{ha:826,x_min:121,x_max:788,o:"m 121 986 l 246 986 l 246 622 l 457 622 q 587 602 526 622 q 692 543 647 582 q 762 446 736 504 q 788 311 788 388 q 761 176 788 235 q 690 79 735 118 q 584 20 644 40 q 457 0 524 0 l 121 0 l 121 986 m 246 108 l 457 108 q 610 163 560 108 q 661 311 661 218 q 608 459 661 404 q 457 514 556 514 l 246 514 l 246 108 z "},"Э":{ha:974,x_min:36,x_max:918,o:"m 442 -8 q 309 7 372 -8 q 194 51 246 22 q 101 123 142 81 q 36 221 61 165 l 140 278 q 197 199 163 232 q 270 145 231 167 q 353 114 310 124 q 436 104 396 104 q 574 132 513 104 q 682 208 636 160 q 755 318 728 256 q 789 451 782 381 l 297 451 l 297 556 l 788 556 q 754 676 779 618 q 687 780 729 735 q 583 852 644 825 q 440 879 521 879 q 359 871 400 879 q 280 843 318 863 q 208 792 242 824 q 153 713 175 760 l 54 776 q 194 931 101 871 q 435 992 288 992 q 645 949 554 992 q 797 835 736 906 q 888 677 857 765 q 918 500 918 589 q 885 315 918 406 q 790 152 851 224 q 640 36 728 81 q 442 -8 551 -8 z "},"Ю":{ha:1369,x_min:122,x_max:1311,o:"m 860 -7 q 692 26 768 -7 q 558 117 615 58 q 467 259 501 176 q 425 442 432 342 l 247 442 l 247 0 l 122 0 l 122 986 l 247 986 l 247 553 l 426 553 q 471 735 435 654 q 565 874 507 817 q 699 962 624 931 q 863 993 775 993 q 1045 956 963 993 q 1187 851 1128 918 q 1278 692 1246 783 q 1311 492 1311 600 q 1277 285 1311 378 q 1183 128 1243 193 q 1040 28 1122 64 q 860 -7 957 -7 m 550 493 q 572 330 550 401 q 635 208 594 258 q 733 132 676 158 q 861 106 790 106 q 997 133 936 106 q 1099 213 1057 161 q 1163 335 1140 264 q 1185 493 1185 406 q 1161 656 1185 585 q 1094 777 1138 728 q 992 853 1051 826 q 861 879 933 879 q 731 851 789 879 q 633 774 674 824 q 572 652 593 724 q 550 493 550 581 z "},"Я":{ha:885,x_min:39,x_max:764,o:"m 639 0 l 639 382 l 411 382 l 185 0 l 39 0 l 283 400 q 203 444 240 415 q 140 510 167 472 q 99 592 114 547 q 85 685 85 636 q 107 794 85 740 q 169 891 129 849 q 263 960 208 933 q 383 986 318 986 l 764 986 l 764 0 l 639 0 m 639 875 l 390 875 q 322 860 354 875 q 265 819 289 844 q 226 758 240 793 q 211 685 211 724 q 224 613 211 647 q 258 551 236 578 q 312 509 281 525 q 382 493 343 493 l 639 493 l 639 875 z "},"а":{ha:771,x_min:42,x_max:711,o:"m 285 -14 q 189 3 233 -14 q 112 51 144 21 q 60 123 79 82 q 42 213 42 164 q 64 303 42 263 q 127 374 86 344 q 224 419 168 403 q 347 436 281 436 q 454 426 400 436 q 550 400 508 417 l 550 458 q 500 598 550 547 q 358 649 450 649 q 128 564 249 649 l 88 643 q 369 738 228 738 q 592 661 513 738 q 672 446 672 585 l 672 150 q 711 106 672 107 l 711 0 q 679 -4 692 -3 q 653 -6 667 -6 q 595 16 617 -6 q 569 68 574 38 l 567 119 q 444 20 518 54 q 285 -14 369 -14 m 317 78 q 438 102 382 78 q 524 167 494 126 q 550 221 550 193 l 550 328 q 365 363 461 363 q 216 324 274 363 q 158 222 158 285 q 170 165 158 192 q 203 119 182 139 q 254 89 225 100 q 317 78 283 78 z "},"б":{ha:819,x_min:75,x_max:765,o:"m 450 869 q 279 774 342 842 q 197 578 217 706 q 308 666 246 636 q 443 696 371 696 q 572 669 513 696 q 674 593 631 642 q 741 478 717 544 q 765 336 765 413 q 740 194 765 258 q 668 83 714 129 q 558 12 622 38 q 414 -14 493 -14 q 161 103 247 -14 q 75 443 75 219 q 169 799 75 669 q 442 974 263 929 l 671 1029 l 693 929 l 450 869 m 200 344 q 217 242 200 289 q 263 160 233 194 q 334 106 293 125 q 424 86 375 86 q 511 104 471 86 q 580 155 551 122 q 624 233 608 188 q 640 333 640 279 q 624 435 640 389 q 578 515 607 482 q 507 567 549 549 q 415 585 465 585 q 327 567 367 585 q 260 518 288 550 q 216 442 232 486 q 200 344 200 399 z "},"в":{ha:732,x_min:104,x_max:681,o:"m 469 725 q 542 712 508 725 q 600 675 575 699 q 639 619 625 651 q 653 547 653 586 q 647 499 653 524 q 630 452 642 475 q 599 410 618 429 q 551 379 579 390 q 646 317 611 363 q 681 204 681 272 q 664 120 681 158 q 617 56 647 82 q 547 15 588 29 q 456 0 506 0 l 104 0 l 104 725 l 469 725 m 421 415 q 503 445 474 415 q 533 528 533 475 q 510 603 533 572 q 431 635 486 635 l 224 635 l 224 415 l 421 415 m 442 90 q 530 126 497 90 q 563 210 563 161 q 532 290 563 256 q 444 325 501 325 l 224 325 l 224 90 l 442 90 z "},"г":{ha:589,x_min:101,x_max:563,o:"m 563 633 l 221 633 l 221 0 l 101 0 l 101 725 l 563 725 l 563 633 z "},"д":{ha:822,x_min:25,x_max:776,o:"m 25 106 l 67 106 q 123 136 100 114 q 163 205 146 158 q 192 328 179 251 q 217 522 204 406 l 239 725 l 690 725 l 690 106 l 776 106 l 776 -228 l 671 -228 l 671 0 l 126 0 l 126 -228 l 25 -228 l 25 106 m 571 106 l 571 629 l 351 629 l 331 472 q 287 235 311 322 q 228 106 263 149 l 571 106 z "},"е":{ha:821,x_min:50,x_max:783,o:"m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 z "},"ж":{ha:1057,x_min:17,x_max:1042,o:"m 172 725 l 353 403 l 468 403 l 468 725 l 590 725 l 590 403 l 706 403 l 886 725 l 1021 725 l 810 372 l 1042 0 l 906 0 l 726 311 l 590 311 l 590 0 l 468 0 l 468 311 l 332 311 l 153 0 l 17 0 l 247 372 l 36 725 l 172 725 z "},"з":{ha:569,x_min:36,x_max:521,o:"m 58 650 q 265 738 139 738 q 419 690 361 738 q 478 561 478 642 q 444 453 478 497 q 351 403 410 410 q 476 342 431 393 q 521 213 521 292 q 502 121 521 163 q 449 49 483 79 q 366 3 414 19 q 260 -14 318 -14 q 36 92 121 -14 l 101 176 q 172 112 133 132 q 264 92 211 92 q 367 123 331 92 q 403 213 403 154 q 356 315 403 279 q 218 350 308 350 l 169 350 l 169 443 l 218 443 q 326 472 286 443 q 365 551 365 501 q 336 617 365 593 q 257 642 307 642 q 118 581 185 642 l 58 650 z "},"и":{ha:817,x_min:101,x_max:714,o:"m 221 172 l 615 725 l 714 725 l 714 0 l 594 0 l 594 542 l 207 0 l 101 0 l 101 725 l 221 725 l 221 172 z "},"й":{ha:815,x_min:101,x_max:714,o:"m 636 1014 q 574 898 631 936 q 424 860 517 860 q 274 898 331 860 q 211 1014 217 936 l 285 1014 q 324 938 288 957 q 424 919 361 919 q 523 938 486 919 q 563 1014 560 957 l 636 1014 m 221 172 l 615 725 l 714 725 l 714 0 l 594 0 l 594 542 l 207 0 l 101 0 l 101 725 l 221 725 l 221 172 z "},"к":{ha:694,x_min:101,x_max:689,o:"m 533 725 l 669 725 l 385 372 l 689 0 l 554 0 l 306 318 l 221 318 l 221 0 l 101 0 l 101 725 l 221 725 l 221 410 l 292 410 l 533 725 z "},"л":{ha:767,x_min:6,x_max:665,o:"m 6 100 q 80 122 50 104 q 130 184 110 139 q 164 310 150 229 q 192 522 178 392 l 214 725 l 665 725 l 665 0 l 546 0 l 546 629 l 326 629 l 306 472 q 265 240 286 331 q 211 95 243 149 q 135 19 179 42 q 26 -7 90 -3 l 6 100 z "},"м":{ha:938,x_min:101,x_max:836,o:"m 469 265 l 715 725 l 836 725 l 836 0 l 717 0 l 717 511 l 504 118 l 435 118 l 221 511 l 221 0 l 101 0 l 101 725 l 224 725 l 469 265 z "},"н":{ha:808,x_min:101,x_max:707,o:"m 221 424 l 588 424 l 588 725 l 707 725 l 707 0 l 588 0 l 588 322 l 221 322 l 221 0 l 101 0 l 101 725 l 221 725 l 221 424 z "},"о":{ha:832,x_min:50,x_max:782,o:"m 415 -14 q 266 17 333 -14 q 151 99 199 47 q 76 218 103 150 q 50 361 50 286 q 77 506 50 438 q 152 625 104 574 q 267 707 200 676 q 415 738 335 738 q 564 707 496 738 q 680 625 632 676 q 755 506 728 574 q 782 361 782 438 q 756 218 782 286 q 681 99 729 150 q 565 17 632 47 q 415 -14 497 -14 m 175 360 q 194 254 175 303 q 245 169 213 206 q 322 113 278 133 q 415 92 365 92 q 509 113 465 92 q 586 170 553 133 q 638 256 619 207 q 657 363 657 306 q 638 467 657 418 q 586 553 619 517 q 509 611 553 590 q 415 632 465 632 q 322 610 365 632 q 245 552 278 589 q 194 466 213 515 q 175 360 175 417 z "},"п":{ha:788,x_min:101,x_max:686,o:"m 686 0 l 567 0 l 567 619 l 221 619 l 221 0 l 101 0 l 101 725 l 686 725 l 686 0 z "},"р":{ha:868,x_min:101,x_max:817,o:"m 492 -14 q 333 31 401 -14 q 224 143 264 75 l 224 -296 l 101 -296 l 101 725 l 210 725 l 210 589 q 322 697 253 656 q 474 738 390 738 q 611 707 549 738 q 719 624 674 676 q 791 504 765 572 q 817 363 817 436 q 793 216 817 285 q 726 97 769 147 q 624 16 683 46 q 492 -14 564 -14 m 454 92 q 552 115 508 92 q 627 176 596 138 q 675 263 658 214 q 692 363 692 311 q 672 466 692 417 q 619 552 653 515 q 541 610 586 589 q 443 632 496 632 q 374 619 410 632 q 308 584 339 606 q 253 533 276 563 q 224 469 231 503 l 224 263 q 263 195 239 226 q 317 141 286 164 q 382 105 347 118 q 454 92 417 92 z "},"с":{ha:769,x_min:50,x_max:729,o:"m 50 364 q 76 508 50 440 q 151 627 103 576 q 267 708 200 678 q 418 738 335 738 q 605 690 526 738 q 724 561 683 642 l 604 524 q 526 603 576 575 q 415 632 476 632 q 321 612 365 632 q 244 556 276 592 q 194 471 213 519 q 175 364 175 422 q 194 257 175 307 q 247 170 214 207 q 323 113 279 133 q 417 92 367 92 q 480 101 449 92 q 537 125 511 110 q 582 160 563 140 q 610 204 601 181 l 729 168 q 683 94 713 128 q 613 38 653 61 q 523 0 572 14 q 419 -14 474 -14 q 269 17 338 -14 q 153 99 201 47 q 77 219 104 150 q 50 364 50 288 z "},"т":{ha:664,x_min:29,x_max:635,o:"m 392 0 l 272 0 l 272 619 l 29 619 l 29 725 l 635 725 l 635 619 l 392 619 l 392 0 z "},"у":{ha:757,x_min:17,x_max:732,o:"m 97 -165 q 144 -194 121 -186 q 192 -203 167 -203 q 260 -158 228 -203 q 324 0 292 -114 l 17 725 l 143 725 l 390 110 l 615 725 l 732 725 l 415 -100 q 369 -201 392 -161 q 320 -266 346 -242 q 265 -300 294 -290 q 201 -310 236 -310 q 141 -301 165 -310 q 97 -272 117 -293 l 97 -165 z "},"ф":{ha:942,x_min:50,x_max:892,o:"m 535 733 q 685 694 619 725 q 797 613 751 663 q 867 499 843 564 q 892 358 892 435 q 867 218 892 282 q 797 106 843 154 q 685 28 751 58 q 535 -10 619 -1 l 535 -296 l 413 -296 l 413 -11 q 259 27 326 -3 q 145 105 192 57 q 74 217 99 153 q 50 358 50 282 q 74 501 50 436 q 145 616 99 567 q 259 696 192 665 q 413 735 326 726 l 413 1014 l 535 1014 l 535 733 m 413 619 q 176 364 176 594 q 236 181 176 247 q 413 101 296 115 l 413 619 m 535 101 q 706 183 647 117 q 765 364 765 249 q 707 541 765 476 q 535 619 649 606 l 535 101 z "},"х":{ha:713,x_min:17,x_max:696,o:"m 146 725 l 344 458 l 356 436 l 368 458 l 565 725 l 694 725 l 424 361 l 696 0 l 567 0 l 368 265 l 356 286 l 344 265 l 146 0 l 17 0 l 289 361 l 18 725 l 146 725 z "},"ц":{ha:801,x_min:101,x_max:785,o:"m 101 725 l 221 725 l 221 106 l 533 106 l 533 725 l 653 725 l 653 106 l 785 106 l 785 -228 l 679 -228 l 679 0 l 101 0 l 101 725 z "},"ч":{ha:671,x_min:56,x_max:569,o:"m 569 0 l 449 0 l 449 289 q 419 281 433 285 q 385 274 404 276 q 342 271 367 272 q 285 269 318 269 q 175 290 219 269 q 104 347 131 311 q 67 427 78 382 q 56 522 56 472 l 56 725 l 176 725 l 176 546 q 213 413 176 450 q 311 376 249 376 q 401 386 369 376 q 449 411 433 396 l 449 725 l 569 725 l 569 0 z "},"ш":{ha:1029,x_min:101,x_max:928,o:"m 101 0 l 101 725 l 221 725 l 221 106 l 454 106 l 454 725 l 574 725 l 574 106 l 808 106 l 808 725 l 928 725 l 928 0 l 101 0 z "},"щ":{ha:1076,x_min:101,x_max:1060,o:"m 101 725 l 221 725 l 221 106 l 454 106 l 454 725 l 574 725 l 574 106 l 808 106 l 808 725 l 928 725 l 928 106 l 1060 106 l 1060 -228 l 954 -228 l 954 0 l 101 0 l 101 725 z "},"ъ":{ha:806,x_min:29,x_max:768,o:"m 378 475 l 515 475 q 608 460 563 475 q 688 416 653 446 q 746 341 724 386 q 768 235 768 296 q 746 129 768 174 q 688 56 724 85 q 607 14 653 28 q 514 0 561 0 l 258 0 l 258 619 l 29 619 l 29 725 l 378 725 l 378 475 m 514 103 q 610 135 574 103 q 647 235 647 168 q 608 338 647 303 q 515 372 568 372 l 378 372 l 378 103 l 514 103 z "},"ы":{ha:903,x_min:101,x_max:801,o:"m 101 725 l 221 725 l 221 475 l 358 475 q 451 460 406 475 q 531 416 496 446 q 589 341 567 386 q 611 235 611 296 q 589 129 611 174 q 531 56 567 85 q 450 14 496 28 q 357 0 404 0 l 101 0 l 101 725 m 682 725 l 801 725 l 801 0 l 682 0 l 682 725 m 357 103 q 453 135 417 103 q 490 235 490 168 q 451 338 490 303 q 358 372 411 372 l 221 372 l 221 103 l 357 103 z "},"ь":{ha:649,x_min:101,x_max:611,o:"m 101 725 l 221 725 l 221 475 l 358 475 q 451 460 406 475 q 531 416 496 446 q 589 341 567 386 q 611 235 611 296 q 589 129 611 174 q 531 56 567 85 q 450 14 496 28 q 357 0 404 0 l 101 0 l 101 725 m 357 103 q 453 135 417 103 q 490 235 490 168 q 451 338 490 303 q 358 372 411 372 l 221 372 l 221 103 l 357 103 z "},"э":{ha:751,x_min:35,x_max:701,o:"m 336 -12 q 151 33 232 -12 q 35 164 69 79 l 128 207 q 167 153 143 176 q 219 114 190 129 q 279 90 247 99 q 342 82 311 82 q 428 99 388 82 q 502 147 469 115 q 556 222 535 178 q 583 319 578 265 l 222 319 l 222 417 l 581 417 q 552 506 572 464 q 501 578 532 547 q 428 626 469 608 q 338 643 388 643 q 280 637 310 643 q 222 617 250 631 q 170 581 194 603 q 128 526 146 558 l 47 575 q 156 691 83 643 q 336 739 228 739 q 489 708 421 739 q 604 624 557 676 q 676 503 651 571 q 701 363 701 435 q 676 222 701 290 q 605 102 651 154 q 490 19 558 50 q 336 -12 422 -12 z "},"ю":{ha:1033,x_min:100,x_max:981,o:"m 319 418 q 355 551 328 492 q 425 653 382 611 q 524 717 468 694 q 646 740 581 740 q 783 712 721 740 q 888 632 844 683 q 956 511 932 581 q 981 361 981 442 q 955 206 981 275 q 885 88 929 136 q 778 13 840 39 q 643 -14 715 -14 q 519 9 575 -14 q 420 75 463 32 q 351 178 378 118 q 318 313 325 239 l 219 313 l 219 0 l 100 0 l 100 725 l 219 725 l 219 418 l 319 418 m 438 363 q 493 163 438 232 q 644 93 549 93 q 804 165 749 93 q 860 363 860 236 q 801 561 860 490 q 644 632 743 632 q 491 558 544 632 q 438 363 438 485 z "},"я":{ha:692,x_min:36,x_max:590,o:"m 215 283 q 114 357 154 306 q 74 492 74 408 q 92 586 74 543 q 144 660 111 629 q 222 708 178 692 q 319 725 267 725 l 590 725 l 590 0 l 471 0 l 471 263 l 333 263 l 175 0 l 36 0 l 215 283 m 471 368 l 471 619 l 326 619 q 279 611 303 619 q 237 586 256 603 q 206 546 218 569 q 194 492 194 522 q 232 401 194 433 q 319 368 269 368 l 471 368 z "},"ђ":{ha:825,x_min:0,x_max:731,o:"m 731 -24 q 713 -117 731 -74 q 665 -191 696 -160 q 591 -240 633 -222 q 500 -258 549 -258 q 412 -243 454 -258 q 339 -200 369 -228 l 396 -118 q 435 -142 411 -133 q 486 -150 460 -150 q 573 -116 538 -150 q 608 -32 608 -82 l 608 360 q 569 526 608 469 q 458 582 531 582 q 379 565 417 582 q 311 517 342 547 q 258 446 281 486 q 224 358 235 406 l 224 0 l 101 0 l 101 817 l 0 817 l 0 906 l 101 906 l 101 1014 l 224 1014 l 224 906 l 538 906 l 538 817 l 224 817 l 224 504 q 333 642 258 593 q 503 692 407 692 q 673 615 615 692 q 731 388 731 538 l 731 -24 z "},"ѓ":{ha:592,x_min:101,x_max:563,o:"m 335 846 l 254 874 l 335 1014 l 457 1014 l 335 846 m 563 633 l 221 633 l 221 0 l 101 0 l 101 725 l 563 725 l 563 633 z "},"є":{ha:753,x_min:50,x_max:717,o:"m 415 -12 q 261 19 329 -12 q 146 102 193 50 q 74 222 99 154 q 50 363 50 290 q 75 503 50 435 q 147 624 100 571 q 262 708 194 676 q 415 739 329 739 q 596 691 524 739 q 704 575 668 643 l 624 526 q 581 581 606 558 q 529 617 557 603 q 472 637 501 631 q 414 643 442 643 q 323 626 364 643 q 251 578 282 608 q 199 506 219 547 q 169 417 178 464 l 529 417 l 529 319 l 167 319 q 194 222 172 265 q 249 147 217 178 q 322 99 281 115 q 410 82 364 82 q 472 90 440 82 q 533 114 504 99 q 585 153 561 129 q 624 207 608 176 l 717 164 q 601 33 682 79 q 415 -12 519 -12 z "},"ѕ":{ha:686,x_min:35,x_max:640,o:"m 353 -14 q 181 13 265 -14 q 35 92 96 40 l 88 174 q 215 101 151 125 q 350 76 279 76 q 476 108 429 76 q 522 196 522 139 q 510 241 522 222 q 472 274 497 260 q 408 299 447 288 q 318 322 369 310 q 206 354 253 339 q 128 390 158 369 q 83 440 97 411 q 69 513 69 469 q 91 609 69 567 q 150 680 113 651 q 238 723 188 708 q 347 738 289 738 q 500 711 429 738 q 619 642 571 685 l 564 568 q 461 628 518 608 q 344 649 404 649 q 231 620 278 649 q 185 529 185 592 q 194 488 185 504 q 224 458 203 471 q 277 436 244 446 q 356 415 310 426 q 481 381 428 399 q 570 340 535 364 q 623 285 606 317 q 640 207 640 253 q 563 46 640 106 q 353 -14 485 -14 z "},"і":{ha:325,x_min:101,x_max:224,o:"m 101 0 l 101 725 l 224 725 l 224 0 l 101 0 m 101 861 l 101 1014 l 224 1014 l 224 861 l 101 861 z "},"ј":{ha:333,x_min:-160,x_max:232,o:"m 7 -258 q -84 -244 -42 -258 q -160 -200 -126 -231 l -103 -118 q -58 -143 -83 -136 q -7 -150 -32 -150 q 36 -141 15 -150 q 74 -117 57 -132 q 100 -79 90 -101 q 110 -32 110 -57 l 110 725 l 232 725 l 232 -24 q 213 -118 232 -75 q 163 -192 194 -161 q 92 -241 132 -224 q 7 -258 51 -258 m 110 861 l 110 1014 l 232 1014 l 232 861 l 110 861 z "},"љ":{ha:1122,x_min:6,x_max:1078,o:"m 6 100 q 80 122 50 104 q 130 184 110 139 q 164 310 150 229 q 192 522 178 392 l 214 725 l 665 725 l 665 447 l 867 447 q 944 433 906 447 q 1012 391 982 419 q 1060 320 1042 363 q 1078 221 1078 278 q 1060 122 1078 164 q 1011 53 1042 81 q 942 13 981 26 q 865 0 904 0 l 546 0 l 546 629 l 326 629 l 306 472 q 265 240 286 331 q 211 95 243 149 q 135 19 179 42 q 26 -7 90 -3 l 6 100 m 865 103 q 931 133 906 103 q 957 221 957 163 q 930 313 957 282 q 867 344 903 344 l 665 344 l 665 103 l 865 103 z "},"њ":{ha:1111,x_min:101,x_max:1067,o:"m 101 725 l 221 725 l 221 447 l 543 447 l 543 725 l 663 725 l 663 447 l 856 447 q 933 433 894 447 q 1001 391 971 419 q 1049 320 1031 363 q 1067 221 1067 278 q 1049 122 1067 164 q 1000 53 1031 81 q 931 13 969 26 q 854 0 893 0 l 543 0 l 543 342 l 221 342 l 221 0 l 101 0 l 101 725 m 854 103 q 920 133 894 103 q 946 221 946 163 q 919 313 946 282 q 856 344 892 344 l 663 344 l 663 103 l 854 103 z "},"ћ":{ha:824,x_min:-1,x_max:731,o:"m 608 360 q 456 582 608 582 q 378 566 415 582 q 311 522 342 550 q 258 453 281 493 q 224 364 236 413 l 224 0 l 101 0 l 101 817 l -1 817 l -1 906 l 101 906 l 101 1014 l 224 1014 l 224 906 l 538 906 l 538 817 l 224 817 l 224 510 q 330 643 256 594 q 501 692 404 692 q 673 615 615 692 q 731 388 731 539 l 731 0 l 608 0 l 608 360 z "},"ќ":{ha:694,x_min:101,x_max:689,o:"m 533 725 l 669 725 l 385 372 l 689 0 l 554 0 l 306 318 l 221 318 l 221 0 l 101 0 l 101 725 l 221 725 l 221 410 l 292 410 l 533 725 m 381 846 l 300 874 l 381 1014 l 503 1014 l 381 846 z "},"ѝ":{ha:783,x_min:101,x_max:714,o:"m 221 172 l 615 725 l 714 725 l 714 0 l 594 0 l 594 542 l 207 0 l 101 0 l 101 725 l 221 725 l 221 172 m 236 1014 l 357 1014 l 439 874 l 360 846 l 236 1014 z "},"ў":{ha:757,x_min:17,x_max:732,o:"m 389 821 q 281 858 322 821 q 240 947 240 894 l 306 947 q 331 898 306 921 q 389 875 356 875 q 444 897 421 875 q 474 947 467 918 l 538 947 q 496 858 538 894 q 389 821 454 821 m 129 -194 q 168 -203 153 -201 q 199 -204 183 -204 q 224 -201 211 -204 q 250 -177 236 -197 q 282 -116 264 -157 q 324 0 300 -75 l 17 725 l 143 725 l 390 110 l 615 725 l 732 725 l 376 -190 q 312 -281 353 -253 q 204 -310 271 -310 q 129 -300 169 -310 l 129 -194 z "},"џ":{ha:754,x_min:101,x_max:653,o:"m 317 0 l 101 0 l 101 726 l 221 726 l 221 106 l 533 106 l 533 726 l 653 726 l 653 0 l 436 0 l 436 -228 l 317 -228 l 317 0 z "},"Ґ":{ha:714,x_min:122,x_max:690,o:"m 122 986 l 583 986 l 593 1214 l 690 1214 l 690 875 l 247 875 l 247 0 l 122 0 l 122 986 z "},"ґ":{ha:590,x_min:101,x_max:563,o:"m 101 725 l 472 725 l 482 953 l 563 953 l 563 629 l 221 629 l 221 0 l 101 0 l 101 725 z "},"Ұ":{ha:853,x_min:-8,x_max:861,o:"m 696 321 l 696 238 l 489 238 l 489 0 l 364 0 l 364 238 l 160 238 l 160 321 l 364 321 l 364 363 l -8 986 l 131 986 l 429 472 l 728 986 l 861 986 l 489 367 l 489 321 l 696 321 z "},"ұ":{ha:753,x_min:1,x_max:751,o:"m 311 0 l 107 0 l 107 83 l 311 83 l 311 89 l 1 725 l 140 725 l 376 199 l 618 725 l 751 725 l 436 89 l 436 83 l 643 83 l 643 0 l 436 0 l 436 -296 l 311 -296 l 311 0 z "},"Ѐ":{ha:842,x_min:121,x_max:790,o:"m 790 111 l 790 0 l 121 0 l 121 986 l 778 986 l 778 875 l 246 875 l 246 556 l 708 556 l 708 451 l 246 451 l 246 111 l 790 111 m 322 1274 l 443 1274 l 525 1133 l 446 1106 l 322 1274 z "},"Ё":{ha:842,x_min:121,x_max:790,o:"m 303 1126 l 303 1268 l 406 1268 l 406 1126 l 303 1126 m 528 1126 l 528 1268 l 631 1268 l 631 1126 l 528 1126 m 790 111 l 790 0 l 121 0 l 121 986 l 778 986 l 778 875 l 246 875 l 246 556 l 708 556 l 708 451 l 246 451 l 246 111 l 790 111 z "},"ї":{ha:325,x_min:-1,x_max:326,o:"m -1 867 l -1 1008 l 101 1008 l 101 867 l -1 867 m 224 867 l 224 1008 l 326 1008 l 326 867 l 224 867 m 101 0 l 101 725 l 224 725 l 224 0 l 101 0 z "},"ѐ":{ha:821,x_min:50,x_max:783,o:"m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 m 271 1014 l 392 1014 l 474 874 l 394 846 l 271 1014 z "},"ё":{ha:821,x_min:50,x_max:783,o:"m 251 867 l 251 1008 l 354 1008 l 354 867 l 251 867 m 476 867 l 476 1008 l 579 1008 l 579 867 l 476 867 m 419 -14 q 269 16 338 -14 q 153 97 201 46 q 77 217 104 149 q 50 363 50 286 q 77 507 50 439 q 153 626 104 575 q 271 708 203 678 q 421 738 339 738 q 570 707 503 738 q 685 626 638 676 q 758 508 732 575 q 783 368 783 440 q 783 340 783 353 q 781 321 782 328 l 179 321 q 204 222 183 267 q 258 146 225 178 q 334 96 292 114 q 424 78 376 78 q 489 87 457 78 q 549 111 521 96 q 598 149 576 126 q 631 199 619 171 l 736 169 q 687 96 718 129 q 615 38 656 63 q 524 0 574 14 q 419 -14 474 -14 m 668 411 q 642 506 664 463 q 588 581 621 550 q 513 628 556 611 q 421 646 469 646 q 329 628 372 646 q 253 580 286 611 q 201 506 221 549 q 176 411 181 463 l 668 411 z "}},familyName:"Raleway Medium",ascender:1306,descender:-325,underlinePosition:-104,underlineThickness:69,boundingBox:{yMin:-312,xMin:-294,yMax:1292,xMax:1821},resolution:1e3,original_font_information:{format:0,copyright:'Copyright (c) 2010 - 2013, Matt McInerney (matt@pixelspread.com), Pablo Impallari (impallari@gmail.com), Rodrigo Fuenzalida (hello@rfuenzalida.com) with Reserved Font Name "Raleway"',fontFamily:"Raleway Medium",fontSubfamily:"Regular",uniqueID:"MattMcInerney,PabloImpallari,RodrigoFuenzalida: Raleway Medium: 2013",fullName:"Raleway Medium",version:'Version 3.000g; ttfautohint (v1.5) -l 8 -r 28 -G 28 -x 14 -D latn -f cyrl -w G -c -X ""',postScriptName:"Raleway-Medium",trademark:"Raleway is a trademark of Matt McInerney.",manufacturer:"Matt McInerney, Pablo Impallari, Rodrigo Fuenzalida",designer:"Matt McInerney, Pablo Impallari, Rodrigo Fuenzalida",description:"Raleway is an elegant sans-serif typeface family. Initially designed by Matt McInerney as a single thin weight, it was expanded into a 9 weight family by Pablo Impallari and Rodrigo Fuenzalida in 2012 and iKerned by Igino Marini. It is a display face and the download features both old style and lining numerals, standard and discretionary ligatures, a pretty complete set of diacritics, as well as a stylistic alternate inspired by more geometric sans-serif typefaces than its neo-grotesque inspired default character set.",manufacturerURL:"http://theleagueofmoveabletype.com",designerURL:"http://pixelspread.com",licence:"This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL",licenceURL:"http://scripts.sil.org/OFL",preferredFamily:"Raleway",preferredSubfamily:"Medium"},cssFontWeight:"normal",cssFontStyle:"normal"};
},{}],"L4bL":[function(require,module,exports) {
"use strict";var e=require("three"),t=r(require("animejs/lib/anime.es.js")),i=r(require("./utils/engine3d")),n=require("./utils/paths"),o=r(require("./data/Raleway_Medium_Regular.json"));function r(e){return e&&e.__esModule?e:{default:e}}var a=480,s=480,d=document.getElementById("container"),u=new i.default(d,{debug:!1,width:a,height:s,postProcessing:!0});u.setCamera(i.default.ORTHOPGRAPHIC_CAMERA(a,s));var l=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:16711680,i=new e.BoxBufferGeometry(1,2,2),n=new e.EdgesGeometry(i),o=new e.LineBasicMaterial({color:t,linewidth:5});return new e.LineSegments(n,o)},h=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=i.color,r=void 0===n?16777215:n,a=i.size,s=void 0===a?1:a,d=(new e.FontLoader).parse(o.default),u=new e.TextGeometry(t,{font:d,size:s,height:1,bevelEnabled:!1}),l=new e.MeshBasicMaterial({color:r});return new e.Mesh(u,l)},c=[16776960,65535,16711935],g=3,v=new Array(g).fill(0).map(function(e,i){var n=l(c[i%c.length]);u.scene.add(n);var o=i/g,r=2*Math.PI*o,a={position:r},s=(0,t.default)({targets:a,position:2*Math.PI+r,duration:1e4,easing:"linear",loop:!0,round:8});return(0,t.default)({targets:n.rotation,x:2*Math.PI,y:2*Math.PI,duration:1e4,easing:"linear",loop:!0,round:10}),{box:n,variables:a,animation:s}}),f=new e.Group,p=h("FreeTech",{color:16777215,size:1.4});p.position.set(0,0,0),f.add(p);var w=h("Industries",{color:255,size:.5});w.position.set(0,-.8,0),f.add(w),f.position.set(-4.8,-3.8,0),u.scene.add(f);var m=!1;u.onRender(function(e){var t=e.frame;e.width,e.height,e.debug;v.forEach(function(e){var t=e.box,i=e.variables,o=(0,n.getPointOnArc)(0,0,i.position,2.5),r=o.x,a=o.y;t.position.set(r-.4,.75,a)}),t%60==0&&Math.random()>.5&&((m=!m)?(f.position.x-=.3,f.position.y-=.5):(f.position.x+=.3,f.position.y+=.5))}),u.start();
},{"three":"dKqR","animejs/lib/anime.es.js":"01nd","./utils/engine3d":"1b6N","./utils/paths":"5o3U","./data/Raleway_Medium_Regular.json":"g8gN"}]},{},["L4bL"], null)
//# sourceMappingURL=script.f480cfc3.js.map