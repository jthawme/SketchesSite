{"version":3,"sources":["../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/isWeekend/index.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/addBusinessDays/index.js","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/addMilliseconds/index.js","../node_modules/date-fns/esm/addHours/index.js","../node_modules/date-fns/esm/startOfWeek/index.js","../node_modules/date-fns/esm/startOfISOWeek/index.js","../node_modules/date-fns/esm/getISOWeekYear/index.js","../node_modules/date-fns/esm/startOfISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/esm/startOfDay/index.js","../node_modules/date-fns/esm/differenceInCalendarDays/index.js","../node_modules/date-fns/esm/setISOWeekYear/index.js","../node_modules/date-fns/esm/addISOWeekYears/index.js","../node_modules/date-fns/esm/addMinutes/index.js","../node_modules/date-fns/esm/getDaysInMonth/index.js","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/addQuarters/index.js","../node_modules/date-fns/esm/addSeconds/index.js","../node_modules/date-fns/esm/addWeeks/index.js","../node_modules/date-fns/esm/addYears/index.js","../node_modules/date-fns/esm/areIntervalsOverlapping/index.js","../node_modules/date-fns/esm/closestIndexTo/index.js","../node_modules/date-fns/esm/closestTo/index.js","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/compareDesc/index.js","../node_modules/date-fns/esm/isValid/index.js","../node_modules/date-fns/esm/isSameDay/index.js","../node_modules/date-fns/esm/differenceInBusinessDays/index.js","../node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js","../node_modules/date-fns/esm/differenceInCalendarISOWeeks/index.js","../node_modules/date-fns/esm/differenceInCalendarMonths/index.js","../node_modules/date-fns/esm/getQuarter/index.js","../node_modules/date-fns/esm/differenceInCalendarQuarters/index.js","../node_modules/date-fns/esm/differenceInCalendarWeeks/index.js","../node_modules/date-fns/esm/differenceInCalendarYears/index.js","../node_modules/date-fns/esm/differenceInDays/index.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/differenceInHours/index.js","../node_modules/date-fns/esm/subISOWeekYears/index.js","../node_modules/date-fns/esm/differenceInISOWeekYears/index.js","../node_modules/date-fns/esm/differenceInMinutes/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/differenceInQuarters/index.js","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/date-fns/esm/differenceInWeeks/index.js","../node_modules/date-fns/esm/differenceInYears/index.js","../node_modules/date-fns/esm/eachDayOfInterval/index.js","../node_modules/date-fns/esm/eachWeekOfInterval/index.js","../node_modules/date-fns/esm/isSunday/index.js","../node_modules/date-fns/esm/eachWeekendOfInterval/index.js","../node_modules/date-fns/esm/startOfMonth/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/eachWeekendOfMonth/index.js","../node_modules/date-fns/esm/startOfYear/index.js","../node_modules/date-fns/esm/endOfYear/index.js","../node_modules/date-fns/esm/eachWeekendOfYear/index.js","../node_modules/date-fns/esm/endOfDay/index.js","../node_modules/date-fns/esm/endOfDecade/index.js","../node_modules/date-fns/esm/endOfHour/index.js","../node_modules/date-fns/esm/endOfWeek/index.js","../node_modules/date-fns/esm/endOfISOWeek/index.js","../node_modules/date-fns/esm/endOfISOWeekYear/index.js","../node_modules/date-fns/esm/endOfMinute/index.js","../node_modules/date-fns/esm/endOfQuarter/index.js","../node_modules/date-fns/esm/endOfSecond/index.js","../node_modules/date-fns/esm/endOfToday/index.js","../node_modules/date-fns/esm/endOfTomorrow/index.js","../node_modules/date-fns/esm/endOfYesterday/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../node_modules/date-fns/esm/locale/en-US/index.js","../node_modules/date-fns/esm/subMilliseconds/index.js","../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCWeek/index.js","../node_modules/date-fns/esm/_lib/format/formatters/index.js","../node_modules/date-fns/esm/_lib/format/longFormatters/index.js","../node_modules/date-fns/esm/_lib/protectedTokens/index.js","../node_modules/date-fns/esm/format/index.js","../node_modules/date-fns/esm/_lib/assign/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns/esm/formatDistance/index.js","../node_modules/date-fns/esm/formatDistanceStrict/index.js","../node_modules/date-fns/esm/formatDistanceToNow/index.js","../node_modules/date-fns/esm/formatRelative/index.js","../node_modules/date-fns/esm/fromUnixTime/index.js","../node_modules/date-fns/esm/getDate/index.js","../node_modules/date-fns/esm/getDay/index.js","../node_modules/date-fns/esm/getDayOfYear/index.js","../node_modules/date-fns/esm/isLeapYear/index.js","../node_modules/date-fns/esm/getDaysInYear/index.js","../node_modules/date-fns/esm/getDecade/index.js","../node_modules/date-fns/esm/getHours/index.js","../node_modules/date-fns/esm/getISODay/index.js","../node_modules/date-fns/esm/getISOWeek/index.js","../node_modules/date-fns/esm/getISOWeeksInYear/index.js","../node_modules/date-fns/esm/getMilliseconds/index.js","../node_modules/date-fns/esm/getMinutes/index.js","../node_modules/date-fns/esm/getMonth/index.js","../node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js","../node_modules/date-fns/esm/getSeconds/index.js","../node_modules/date-fns/esm/getTime/index.js","../node_modules/date-fns/esm/getUnixTime/index.js","../node_modules/date-fns/esm/getWeekYear/index.js","../node_modules/date-fns/esm/startOfWeekYear/index.js","../node_modules/date-fns/esm/getWeek/index.js","../node_modules/date-fns/esm/getWeekOfMonth/index.js","../node_modules/date-fns/esm/lastDayOfMonth/index.js","../node_modules/date-fns/esm/getWeeksInMonth/index.js","../node_modules/date-fns/esm/getYear/index.js","../node_modules/date-fns/esm/isAfter/index.js","../node_modules/date-fns/esm/isBefore/index.js","../node_modules/date-fns/esm/isDate/index.js","../node_modules/date-fns/esm/isEqual/index.js","../node_modules/date-fns/esm/isFirstDayOfMonth/index.js","../node_modules/date-fns/esm/isFriday/index.js","../node_modules/date-fns/esm/isFuture/index.js","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/isMonday/index.js","../node_modules/date-fns/esm/isPast/index.js","../node_modules/date-fns/esm/startOfHour/index.js","../node_modules/date-fns/esm/isSameHour/index.js","../node_modules/date-fns/esm/isSameWeek/index.js","../node_modules/date-fns/esm/isSameISOWeek/index.js","../node_modules/date-fns/esm/isSameISOWeekYear/index.js","../node_modules/date-fns/esm/startOfMinute/index.js","../node_modules/date-fns/esm/isSameMinute/index.js","../node_modules/date-fns/esm/isSameMonth/index.js","../node_modules/date-fns/esm/startOfQuarter/index.js","../node_modules/date-fns/esm/isSameQuarter/index.js","../node_modules/date-fns/esm/startOfSecond/index.js","../node_modules/date-fns/esm/isSameSecond/index.js","../node_modules/date-fns/esm/isSameYear/index.js","../node_modules/date-fns/esm/isSaturday/index.js","../node_modules/date-fns/esm/isThisHour/index.js","../node_modules/date-fns/esm/isThisISOWeek/index.js","../node_modules/date-fns/esm/isThisMinute/index.js","../node_modules/date-fns/esm/isThisMonth/index.js","../node_modules/date-fns/esm/isThisQuarter/index.js","../node_modules/date-fns/esm/isThisSecond/index.js","../node_modules/date-fns/esm/isThisWeek/index.js","../node_modules/date-fns/esm/isThisYear/index.js","../node_modules/date-fns/esm/isThursday/index.js","../node_modules/date-fns/esm/isToday/index.js","../node_modules/date-fns/esm/isTomorrow/index.js","../node_modules/date-fns/esm/isTuesday/index.js","../node_modules/date-fns/esm/isWednesday/index.js","../node_modules/date-fns/esm/isWithinInterval/index.js","../node_modules/date-fns/esm/subDays/index.js","../node_modules/date-fns/esm/isYesterday/index.js","../node_modules/date-fns/esm/lastDayOfDecade/index.js","../node_modules/date-fns/esm/lastDayOfWeek/index.js","../node_modules/date-fns/esm/lastDayOfISOWeek/index.js","../node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js","../node_modules/date-fns/esm/lastDayOfQuarter/index.js","../node_modules/date-fns/esm/lastDayOfYear/index.js","../node_modules/date-fns/esm/lightFormat/index.js","../node_modules/date-fns/esm/max/index.js","../node_modules/date-fns/esm/min/index.js","../node_modules/date-fns/esm/_lib/setUTCDay/index.js","../node_modules/date-fns/esm/_lib/setUTCISODay/index.js","../node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCWeek/index.js","../node_modules/date-fns/esm/parse/_lib/parsers/index.js","../node_modules/date-fns/esm/parse/index.js","../node_modules/date-fns/esm/parseISO/index.js","../node_modules/date-fns/esm/parseJSON/index.js","../node_modules/date-fns/esm/roundToNearestMinutes/index.js","../node_modules/date-fns/esm/setMonth/index.js","../node_modules/date-fns/esm/set/index.js","../node_modules/date-fns/esm/setDate/index.js","../node_modules/date-fns/esm/setDay/index.js","../node_modules/date-fns/esm/setDayOfYear/index.js","../node_modules/date-fns/esm/setHours/index.js","../node_modules/date-fns/esm/setISODay/index.js","../node_modules/date-fns/esm/setISOWeek/index.js","../node_modules/date-fns/esm/setMilliseconds/index.js","../node_modules/date-fns/esm/setMinutes/index.js","../node_modules/date-fns/esm/setQuarter/index.js","../node_modules/date-fns/esm/setSeconds/index.js","../node_modules/date-fns/esm/setWeek/index.js","../node_modules/date-fns/esm/setWeekYear/index.js","../node_modules/date-fns/esm/setYear/index.js","../node_modules/date-fns/esm/startOfDecade/index.js","../node_modules/date-fns/esm/startOfToday/index.js","../node_modules/date-fns/esm/startOfTomorrow/index.js","../node_modules/date-fns/esm/startOfYesterday/index.js","../node_modules/date-fns/esm/subBusinessDays/index.js","../node_modules/date-fns/esm/subHours/index.js","../node_modules/date-fns/esm/subMinutes/index.js","../node_modules/date-fns/esm/subMonths/index.js","../node_modules/date-fns/esm/subQuarters/index.js","../node_modules/date-fns/esm/subSeconds/index.js","../node_modules/date-fns/esm/subWeeks/index.js","../node_modules/date-fns/esm/subYears/index.js","../node_modules/date-fns/esm/constants/index.js","../node_modules/date-fns/esm/index.js","../node_modules/inherits/inherits_browser.js","../node_modules/node-libs-browser/node_modules/events/events.js","../node_modules/right-now/browser.js","../node_modules/process/browser.js","src/performance-now.coffee","../node_modules/raf/index.js","../node_modules/raf-loop/index.js","js/utils/utils.js","js/utils/baseEngine.js","js/utils/engine.js","js/utils/codevember.js","js/utils/keyTracker.js","js/game/Messager.js","js/game/Sprite.js","js/utils/vector.js","js/game/Tile.js","js/game/Wall.js","js/game/Shop.js","js/game/Purchasable.js","js/game/Gamble.js","js/game/Ground.js","js/game/Perk.js","js/game/BreadMaker.js","js/game/Player.js","js/script.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["toDate","argument","arguments","length","TypeError","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","isWeekend","dirtyDate","date","day","getDay","toInteger","dirtyNumber","number","Number","isNaN","Math","ceil","floor","addBusinessDays","dirtyAmount","amount","hours","getHours","sign","setDate","getDate","shiftSize","abs","setHours","addDays","addMilliseconds","timestamp","MILLISECONDS_IN_HOUR","addHours","startOfWeek","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","diff","startOfISOWeek","getISOWeekYear","year","getFullYear","fourthOfJanuaryOfNextYear","setFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_MINUTE","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","getTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset","startOfDay","MILLISECONDS_IN_DAY","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","setISOWeekYear","dirtyISOWeekYear","isoWeekYear","addISOWeekYears","addMinutes","getDaysInMonth","monthIndex","getMonth","lastDayOfMonth","addMonths","desiredMonth","dateWithDesiredMonth","daysInMonth","setMonth","min","addQuarters","months","addSeconds","addWeeks","days","addYears","areIntervalsOverlapping","dirtyIntervalLeft","dirtyIntervalRight","intervalLeft","intervalRight","leftStartTime","start","leftEndTime","end","rightStartTime","rightEndTime","closestIndexTo","dirtyDateToCompare","dirtyDatesArray","dateToCompare","timeToCompare","datesArray","forEach","Array","slice","result","minDistance","index","currentDate","distance","closestTo","compareAsc","dateLeft","dateRight","compareDesc","isValid","isSameDay","dateLeftStartOfDay","dateRightStartOfDay","differenceInBusinessDays","calendarDifference","weeks","differenceInCalendarISOWeekYears","MILLISECONDS_IN_WEEK","differenceInCalendarISOWeeks","startOfISOWeekLeft","startOfISOWeekRight","differenceInCalendarMonths","yearDiff","monthDiff","getQuarter","quarter","differenceInCalendarQuarters","quarterDiff","differenceInCalendarWeeks","startOfWeekLeft","startOfWeekRight","differenceInCalendarYears","differenceInDays","difference","isLastDayNotFull","differenceInMilliseconds","differenceInHours","subISOWeekYears","differenceInISOWeekYears","isLastISOWeekYearNotFull","differenceInMinutes","differenceInMonths","isLastMonthNotFull","differenceInQuarters","differenceInSeconds","differenceInWeeks","differenceInYears","isLastYearNotFull","eachDayOfInterval","dirtyInterval","interval","startDate","endDate","endTime","dates","step","push","eachWeekOfInterval","startDateWeek","endDateWeek","currentWeek","isSunday","eachWeekendOfInterval","dateInterval","weekends","startOfMonth","endOfMonth","month","eachWeekendOfMonth","startOfYear","cleanDate","endOfYear","eachWeekendOfYear","endOfDay","endOfDecade","decade","endOfHour","setMinutes","endOfWeek","endOfISOWeek","endOfISOWeekYear","setMilliseconds","getMilliseconds","endOfMinute","endOfQuarter","currentMonth","endOfSecond","endOfToday","now","endOfTomorrow","endOfYesterday","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","replace","addSuffix","comparison","buildFormatLongFn","args","width","String","defaultWidth","format","formats","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","formatLong","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","context","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","_dirtyOptions","rem100","localize","era","dayPeriod","buildMatchPatternFn","dirtyString","string","matchResult","match","matchPattern","matchedString","parseResult","parsePattern","value","valueCallback","rest","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","findIndex","pattern","test","findKey","object","predicate","key","hasOwnProperty","array","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","parseInt","code","firstWeekContainsDate","subMilliseconds","addLeadingZeros","targetLength","output","formatters","y","signedYear","getUTCFullYear","M","getUTCMonth","d","getUTCDate","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","pow","getUTCDayOfYear","setUTCMonth","setUTCHours","startOfYearTimestamp","startOfUTCISOWeek","getUTCDay","setUTCDate","getUTCISOWeekYear","setUTCFullYear","startOfUTCISOWeekYear","getUTCISOWeek","startOfUTCWeek","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","dayPeriodEnum","G","unit","lightFormatters","Y","signedWeekYear","weekYear","twoDigitYear","R","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","b","B","K","k","X","_localize","originalDate","_originalDate","timezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","p","P","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","defaultLocale","utcDate","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","input","assign","target","dirtyObject","property","cloneObject","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyBaseDate","localizeOptions","Boolean","seconds","offsetInSeconds","includeSeconds","nearestMonth","monthsSinceStartOfYear","years","MINUTES_IN_YEAR","formatDistanceStrict","roundingMethod","roundingMethodFn","formatDistanceToNow","baseDate","utcBaseDate","fromUnixTime","dirtyUnixTime","unixTime","dayOfMonth","getDayOfYear","isLeapYear","getDaysInYear","getDecade","getISODay","getISOWeek","getISOWeeksInYear","thisYear","nextYear","valueOf","getMinutes","getOverlappingDaysInIntervals","isOverlapping","overlapStartDate","overlapEndDate","differenceInMs","getSeconds","getUnixTime","getWeekYear","startOfWeekYear","getWeek","getWeekOfMonth","currentDayOfMonth","startWeekDay","lastDayOfFirstWeek","weekNumber","remainingDaysAfterFirstWeek","getWeeksInMonth","getYear","isAfter","isBefore","isDate","isEqual","dirtyLeftDate","dirtyRightDate","isFirstDayOfMonth","isFriday","isFuture","isLastDayOfMonth","isMonday","isPast","startOfHour","isSameHour","dateLeftStartOfHour","dateRightStartOfHour","isSameWeek","dateLeftStartOfWeek","dateRightStartOfWeek","isSameISOWeek","isSameISOWeekYear","dateLeftStartOfYear","dateRightStartOfYear","startOfMinute","isSameMinute","dateLeftStartOfMinute","dateRightStartOfMinute","isSameMonth","startOfQuarter","isSameQuarter","dateLeftStartOfQuarter","dateRightStartOfQuarter","startOfSecond","isSameSecond","dateLeftStartOfSecond","dateRightStartOfSecond","isSameYear","isSaturday","isThisHour","isThisISOWeek","isThisMinute","isThisMonth","isThisQuarter","isThisSecond","isThisWeek","isThisYear","isThursday","isToday","isTomorrow","isTuesday","isWednesday","isWithinInterval","startTime","subDays","isYesterday","lastDayOfDecade","lastDayOfWeek","lastDayOfISOWeek","lastDayOfISOWeekYear","lastDayOfQuarter","lastDayOfYear","lightFormat","max","undefined","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","setUTCISODay","setUTCISOWeek","dirtyISOWeek","setUTCWeek","dirtyWeek","MILLISECONDS_IN_SECOND","numericPatterns","hour23h","hour24h","hour11h","hour12h","minute","second","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extended","extendedOptionalSeconds","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","rangeEndCentury","isPreviousCentury","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","priority","parse","set","flags","incompatibleTokens","isTwoDigitYear","validate","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","wholeWeekDays","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","TIMEZONE_UNIT_PRIORITY","notWhitespaceRegExp","dirtyDateString","dirtyFormatString","dirtyBackupDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","tokens","usedTokens","parser","isArray","incompatibleToken","_i","usedToken","concat","fullToken","uniquePrioritySetters","setter","sort","filter","reverse","setterArray","convertedDate","DEFAULT_ADDITIONAL_DIGITS","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","parseTime","parseTimezone","fullTime","fullTimeDate","fullTimeDateDiffDay","offsetDiff","split","timeString","substr","exec","regex","captures","century","isWeekDate","parseDateUnit","validateWeekDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","parseTimeUnit","validateTime","parseFloat","timezoneString","validateTimezone","fourthOfJanuaryDay","daysInMonths","_year","_hours","parseJSON","parts","UTC","roundToNearestMinutes","nearestTo","roundedMinutes","remainderMinutes","addedMinutes","dirtyMonth","dirtyDayOfMonth","setDay","setDayOfYear","dirtyDayOfYear","dirtyHours","setISODay","setISOWeek","dirtyMilliseconds","dirtyMinutes","setQuarter","dirtyQuarter","oldQuarter","dirtySeconds","setWeek","setWeekYear","dirtyWeekYear","setYear","dirtyYear","startOfDecade","startOfToday","startOfTomorrow","startOfYesterday","subBusinessDays","subHours","subMinutes","subMonths","subQuarters","subSeconds","subWeeks","subYears","maxTime","minTime","Reflect","ReflectApply","apply","receiver","Function","ReflectOwnKeys","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","ProcessEmitWarning","warning","NumberIsNaN","EventEmitter","init","module","exports","_events","_eventsCount","_maxListeners","defaultMaxListeners","defineProperty","enumerable","get","arg","getPrototypeOf","create","setMaxListeners","$getMaxListeners","that","getMaxListeners","emit","type","doError","events","error","er","err","message","handler","len","listeners","arrayClone","_addListener","listener","prepend","existing","newListener","unshift","warned","name","emitter","addListener","on","prependListener","onceWrapper","fired","removeListener","wrapFn","_onceWrap","state","wrapped","bind","once","prependOnceListener","list","position","originalListener","shift","spliceOne","off","removeAllListeners","keys","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","arr","copy","pop","ret","process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","run","nextTick","Item","title","env","argv","version","versions","noop","binding","cwd","chdir","dir","umask","trackMouse","window","mouseX","mouseY","document","getElementById","addEventListener","offsetLeft","offsetTop","interpolate","n1","n2","randomBetween","random","mapRange","v","r1l","r1u","r2l","r2u","x1","y1","x2","y2","sqrt","clamp","shuffle","_arr","j","color","r","g","colorToString","colourInterpolate","color1","color2","getPointFromAngleRadius","angle","radius","cos","sin","getInterpolatedColours","colours","granularity","colourStop","granularityStop","colourArr","currColourIdx","getClosestColour","loadImage","src","Promise","resolve","reject","img","Image","onload","drawCenteredImage","height","imgWidth","imgHeight","newWid","newHei","xOffset","yOffset","ctx","drawImage","drawCenteredText","text","lineHeight","measureText","textWidth","fillText","getBrightness","BaseEngine","defaultOptions","loop","update","frame","windowWidth","innerWidth","_renderer","wrapper","debug","body","classList","toggle","resizeTimer","updateDimensions","pixelRatio","pixelate","loading","parentElement","removeChild","style","transform","canvasEl","canvasCtx","scale","renderer","setSize","setPixelRatio","fn","cb","_addEventListeners","_removeLoading","stop","DEFAULTS","devicePixelRatio","clickToggleDebug","SketchEngine","opts","getContext","dt","deltaTime","WIDTH","HEIGHT","TOTAL_DAYS","FRAME_MOD","TOTAL_FRAMES","OVERLAY_RADIUS","OVERLAY_WIDTH","OVERLAY_HEIGHT","PALETTE","red","default","hex","blue","grey","defaultDrawOverlay","save","fillStyle","lineWidth","strokeStyle","getColor","beginPath","arc","PI","stroke","restore","createOverlay","drawOverlay","perc","level","drawPalette","size","translate","fillRect","KeyTracker","_el","keyUpCb","keyDownCb","el","_removeEventListeners","_onKeyUp","_onKeyDown","removeEventListener","_keys","Messager","_permanent","_ephemeral","_internalId","_total","label","msg","id","splice","temp","idx","_idx","_trimEphemeral","textArr","tileSize","player","column","right","font","money","wheat","bread","textAlign","imageFiles","require","Sprite","images","runner","then","imgEl","loadAll","Vector","magnitude","normalize","mult","atan2","acos","dot","_angle","getAngle","setAngle","num","Tile","sprite","_position","_size","_sprite","drawSprite","draw","Wall","Shop","total","earn","wheatValue","sellWheat","setEphemeral","Purchasable","tiles","hasMoney","tileCost","spend","purchaseLabel","Gamble","tempLuck","gambleCost","luck","earned","PLANT_STATE","EMPTY","GROWING","READY","Ground","growTime","isGrowing","setState","globalAlpha","hei","wid","isEmpty","cost","startGrowing","isReadyToHarvest","resetGrowing","addWheat","PERK_TYPES","GROW","LUCK","PERK_COST","PERK_NAME","PERK_DESC","Perk","perkType","perkCost","row","perkName","MAKER_STATE","BAKING","BreadMaker","isBaking","hasWheat","wheatCost","startBaking","resetBaking","addBread","Player","speed","clone","add","resetX","resetY","nextTile","solid","setPermanent","col","fill","tile","interactable","onInteract","WIN","app","Engine","splitUp","spriteMap","cols","rows","onKeyDown","up","down","left","onKeyUp","interact","playing","onRender","clearRect","load","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","overlay","createErrorOverlay","appendChild","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","deps","cached","cache","some"],"mappings":"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SAAA;aAAG,IAAI,CAAC,GAAL,CAAA,CAAA,GAAa;IAAhB;IACjB,QAAA,GAAW,IAAI,CAAC,GAAL,CAAA,EAFR;GAAA,MAAA;IAIH,MAAM,CAAC,OAAP,GAAiB,SAAA;aAAO,IAAA,IAAA,CAAA,CAAM,CAAC,OAAP,CAAA,CAAJ,GAAuB;IAA1B;IACjB,QAAA,GAAe,IAAA,IAAA,CAAA,CAAM,CAAC,OAAP,CAAA,EALZ;;AAXL;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3CO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9BC,EAAAA,MAAM,CAACC,MAAP,GAAgB,CAAhB;AACAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,CAAhB;AAEAC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,gBAAlC,CAAmD,WAAnD,EAAgE,UAAAve,CAAC,EAAI;AACnEke,IAAAA,MAAM,CAACC,MAAP,GAAgBne,CAAC,CAACgB,CAAF,GAAMhB,CAAC,CAAC+D,MAAF,CAASya,UAA/B;AACAN,IAAAA,MAAM,CAACE,MAAP,GAAgBpe,C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","file":"script.d573be0b.js","sourceRoot":"../src","sourcesContent":["/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toDate from '../toDate/index.js';\n/**\n * @name isWeekend\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * var result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\n\nexport default function isWeekend(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day === 0 || day === 6;\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * var result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function addBusinessDays(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  date.setDate(date.getDate() + toInteger(amount / 5) * 7);\n  amount %= 5; // to get remaining days not part of a full week\n\n  var shiftSize = Math.abs(amount); // only loops over remaining days or if day is a weekend, ensures a business day is returned\n\n  while (shiftSize > 0 || isWeekend(date)) {\n    if (!isWeekend(date)) shiftSize -= 1;\n    date.setDate(date.getDate() + sign);\n  }\n\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\n\nexport default function addHours(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfWeek from '../startOfWeek/index.js';\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return startOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import toDate from '../toDate/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getISOYear` to `getISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\n\nexport default function getISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  return date;\n}","var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toDate from '../toDate/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\n/**\n * @name setISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `setISOYear` to `setISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeekYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * var result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\n\nexport default function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var isoWeekYear = toInteger(dirtyISOWeekYear);\n  var diff = differenceInCalendarDays(date, startOfISOWeekYear(date));\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  date = startOfISOWeekYear(fourthOfJanuary);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport getISOWeekYear from '../getISOWeekYear/index.js';\nimport setISOWeekYear from '../setISOWeekYear/index.js';\n/**\n * @name addISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `addISOYears` to `addISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added\n * @returns {Date} the new date with the ISO week-numbering years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * var result = addISOWeekYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\n\nexport default function addISOWeekYears(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return setISOWeekYear(dirtyDate, getISOWeekYear(dirtyDate) + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","import toDate from '../toDate/index.js';\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport default function getDaysInMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  var desiredMonth = date.getMonth() + amount;\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()));\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added\n * @returns {Date} the new date with the quarters added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * var result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\n\nexport default function addQuarters(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  var months = amount * 3;\n  return addMonths(dirtyDate, months);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\n\nexport default function addSeconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * 1000);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * var result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\n\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from '../toDate/index.js';\n/**\n * @name areIntervalsOverlapping\n * @category Interval Helpers\n * @summary Is the given time interval overlapping with another time interval?\n *\n * @description\n * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   areRangesOverlapping(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   areIntervalsOverlapping(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/types/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/types/Interval}\n * @returns {Boolean} whether the time intervals are overlapping\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> false\n *\n * @example\n * // For adjacent time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }\n * )\n * //=> false\n */\n\nexport default function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  return leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n}","import toDate from '../toDate/index.js';\n/**\n * @name closestIndexTo\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestIndexTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Number} an index of the date closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * var dateToCompare = new Date(2015, 8, 6)\n * var datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * var result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\n\nexport default function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return NaN;\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate, index) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = NaN;\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = index;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from '../toDate/index.js';\n/**\n * @name closestTo\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Date} the date from the array closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * var dateToCompare = new Date(2015, 8, 6)\n * var result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\n\nexport default function closestTo(dirtyDateToCompare, dirtyDatesArray) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return new Date(NaN);\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = new Date(NaN);\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = currentDate;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from '../toDate/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\n/**\n * @name compareDesc\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * var result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\n\nexport default function compareDesc(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff > 0) {\n    return -1;\n  } else if (diff < 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import startOfDay from '../startOfDay/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import isValid from '../isValid/index.js';\nimport isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport addDays from '../addDays/index.js';\nimport isSameDay from '../isSameDay/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name differenceInBusinessDays\n * @category Day Helpers\n * @summary Get the number of business days between the given dates.\n *\n * @description\n * Get the number of business day periods between the given dates.\n * Business days being days that arent in the weekend.\n * Like `differenceInCalendarDays`, the function removes the times from\n * the dates before calculating the difference.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of business days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many business days are between\n * // 10 January 2014 and 20 July 2014?\n * var result = differenceInBusinessDays(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 0, 10)\n * )\n * //=> 136\n */\n\nexport default function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  if (!isValid(dateLeft) || !isValid(dateRight)) return new Date(NaN);\n  var calendarDifference = differenceInCalendarDays(dateLeft, dateRight);\n  var sign = calendarDifference < 0 ? -1 : 1;\n  var weeks = toInteger(calendarDifference / 7);\n  var result = weeks * 5;\n  dateRight = addDays(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n\n  while (!isSameDay(dateLeft, dateRight)) {\n    // sign is used to account for both negative and positive differences\n    result += isWeekend(dateRight) ? 0 : sign;\n    dateRight = addDays(dateRight, sign);\n  }\n\n  return result === 0 ? 0 : result;\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\n/**\n * @name differenceInCalendarISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * var result = differenceInCalendarISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  return getISOWeekYear(dirtyDateLeft) - getISOWeekYear(dirtyDateRight);\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * var result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft);\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight);\n  var timestampLeft = startOfISOWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\n  var timestampRight = startOfISOWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from '../toDate/index.js';\n/**\n * @name getQuarter\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which quarter is 2 July 2014?\n * var result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\n\nexport default function getQuarter(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var quarter = Math.floor(date.getMonth() / 3) + 1;\n  return quarter;\n}","import getQuarter from '../getQuarter/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name differenceInCalendarQuarters\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight);\n  return yearDiff * 4 + quarterDiff;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarWeeks\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   { weekStartsOn: 1 }\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions);\n  var timestampLeft = startOfWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekLeft);\n  var timestampRight = startOfWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() - dateRight.getFullYear();\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport compareAsc from '../compareAsc/index.js';\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n */\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addISOWeekYears from '../addISOWeekYears/index.js';\n/**\n * @name subISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `subISOYears` to `subISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * var result = subISOWeekYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\n\nexport default function subISOWeekYears(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addISOWeekYears(dirtyDate, -amount);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarISOWeekYears from '../differenceInCalendarISOWeekYears/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport subISOWeekYears from '../subISOWeekYears/index.js';\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * var result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\n\nexport default function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarISOWeekYears(dateLeft, dateRight));\n  dateLeft = subISOWeekYears(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastISOWeekYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the number of minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMonths from '../differenceInMonths/index.js';\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\n\nexport default function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInDays from '../differenceInDays/index.js';\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n */\n\nexport default function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarYears from '../differenceInCalendarYears/index.js';\nimport compareAsc from '../compareAsc/index.js';\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\n\nexport default function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight));\n  dateLeft.setFullYear(dateLeft.getFullYear() - sign * difference); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import addWeeks from '../addWeeks/index.js';\nimport startOfWeek from '../startOfWeek/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * var result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\n\nexport default function eachWeekOfInterval(dirtyInterval, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateWeek = startOfWeek(startDate, options);\n  var endDateWeek = startOfWeek(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n  endTime = endDateWeek.getTime();\n  var weeks = [];\n  var currentWeek = startDateWeek;\n\n  while (currentWeek.getTime() <= endTime) {\n    currentWeek.setHours(0);\n    weeks.push(toDate(currentWeek));\n    currentWeek = addWeeks(currentWeek, 1);\n    currentWeek.setHours(15);\n  }\n\n  return weeks;\n}","import toDate from '../toDate/index.js';\n/**\n * @name isSunday\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * var result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\n\nexport default function isSunday(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return toDate(dirtyDate).getDay() === 0;\n}","import eachDayOfInterval from '../eachDayOfInterval/index.js';\nimport isSunday from '../isSunday/index.js';\nimport isWeekend from '../isWeekend/index.js';\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @param {Interval} interval - the given interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * var result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfInterval(interval) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var dateInterval = eachDayOfInterval(interval);\n  var weekends = [];\n  var index = 0;\n\n  while (index < dateInterval.length) {\n    var date = dateInterval[index++];\n\n    if (isWeekend(date)) {\n      weekends.push(date);\n      if (isSunday(date)) index = index + 5;\n    }\n  }\n\n  return weekends;\n}","import toDate from '../toDate/index.js';\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import eachWeekendOfInterval from '../eachWeekendOfInterval/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport endOfMonth from '../endOfMonth/index.js';\n/**\n * @name eachWeekendOfMonth\n * @category Month Helpers\n * @summary List all the Saturdays and Sundays in the given month.\n *\n * @description\n * Get all the Saturdays and Sundays in the given month.\n *\n * @param {Date|Number} date - the given month\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the given month\n * var result = eachWeekendOfMonth(new Date(2022, 1, 1))\n * //=> [\n * //   Sat Feb 05 2022 00:00:00,\n * //   Sun Feb 06 2022 00:00:00,\n * //   Sat Feb 12 2022 00:00:00,\n * //   Sun Feb 13 2022 00:00:00,\n * //   Sat Feb 19 2022 00:00:00,\n * //   Sun Feb 20 2022 00:00:00,\n * //   Sat Feb 26 2022 00:00:00,\n * //   Sun Feb 27 2022 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var startDate = startOfMonth(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfMonth(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from '../toDate/index.js';\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\n\nexport default function endOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import eachWeekendOfInterval from '../eachWeekendOfInterval/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport endOfYear from '../endOfYear/index.js';\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @param {Date|Number} date - the given year\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * var result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n * //   Sat Jan 03 2020 00:00:00,\n * //   Sun Jan 04 2020 00:00:00,\n * //   ...\n * //   Sun Dec 27 2020 00:00:00\n * // ]\n * ]\n */\n\nexport default function eachWeekendOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var startDate = startOfYear(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfYear(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from '../toDate/index.js';\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\n/**\n * @name endOfDecade\n * @category Decade Helpers\n * @summary Return the end of a decade for the given date.\n *\n * @description\n * Return the end of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a decade\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The end of a decade for 12 May 1984 00:00:00:\n * var result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))\n * //=> Dec 31 1989 23:59:59.999\n */\n\nexport default function endOfDecade(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 11, 31);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\n/**\n * @name endOfHour\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * var result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\n\nexport default function endOfHour(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  date.setMinutes(59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import endOfWeek from '../endOfWeek/index.js';\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return endOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\n/**\n * @name endOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * var result = endOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\n\nexport default function endOfISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  date.setMilliseconds(date.getMilliseconds() - 1);\n  return date;\n}","import toDate from '../toDate/index.js';\n/**\n * @name endOfMinute\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\n\nexport default function endOfMinute(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  date.setSeconds(59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\n/**\n * @name endOfQuarter\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfQuarter(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\n/**\n * @name endOfSecond\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\n\nexport default function endOfSecond(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(999);\n  return date;\n}","import endOfDay from '../endOfDay/index.js';\n/**\n * @name endOfToday\n * @category Day Helpers\n * @summary Return the end of today.\n * @pure false\n *\n * @description\n * Return the end of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\n\nexport default function endOfToday() {\n  return endOfDay(Date.now());\n}","/**\n * @name endOfTomorrow\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n * @pure false\n *\n * @description\n * Return the end of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nexport default function endOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","/**\n * @name endOfYesterday\n * @category Day Helpers\n * @summary Return the end of yesterday.\n * @pure false\n *\n * @description\n * Return the end of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nexport default function endOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport toDate from '../toDate/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport toDate from '../toDate/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_YEAR = 525600;\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(2015, 0, 2),\n *     new Date(2014, 6, 2)\n *   ) //=> '6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(2014, 6, 2),\n *     new Date(2015, 0, 2)\n *   ) //=> '6 months'\n *   ```\n *\n * - `partialMethod` option is renamed to `roundingMethod`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { partialMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { roundingMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *   ```\n *\n * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n *\n * - `unit` option now accepts one of the strings:\n *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { unit: 'm' }\n *   )\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { unit: 'minute' }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * var result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * var result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * var result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);\n  var roundingMethodFn;\n\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = roundingMethodFn((seconds - offsetInSeconds) / 60);\n  var unit;\n\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (minutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (minutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(options.unit);\n  } // 0 up to 60 seconds\n\n\n  if (unit === 'second') {\n    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(minutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import distanceInWords from '../formatDistance/index.js';\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport format from '../format/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to format\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {String} the date in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\n */\n\nexport default function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var baseDate = toDate(dirtyBaseDate);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  if (!locale.formatRelative) {\n    throw new RangeError('locale must contain formatRelative property');\n  }\n\n  var diff = differenceInCalendarDays(date, baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var token;\n\n  if (diff < -6) {\n    token = 'other';\n  } else if (diff < -1) {\n    token = 'lastWeek';\n  } else if (diff < 0) {\n    token = 'yesterday';\n  } else if (diff < 1) {\n    token = 'today';\n  } else if (diff < 2) {\n    token = 'tomorrow';\n  } else if (diff < 7) {\n    token = 'nextWeek';\n  } else {\n    token = 'other';\n  }\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var utcBaseDate = subMilliseconds(baseDate, getTimezoneOffsetInMilliseconds(baseDate));\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, options);\n  return format(date, formatStr, options);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Number} unixTime - the given Unix timestamp\n * @returns {Date} the date\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * var result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\n\nexport default function fromUnixTime(dirtyUnixTime) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var unixTime = toInteger(dirtyUnixTime);\n  return toDate(unixTime * 1000);\n}","import toDate from '../toDate/index.js';\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * var result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\n\nexport default function getDate(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","import toDate from '../toDate/index.js';\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * var result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nexport default function getDay(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","import toDate from '../toDate/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\nexport default function getDayOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}","import toDate from '../toDate/index.js';\n/**\n * @name isLeapYear\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * var result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\n\nexport default function isLeapYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","import toDate from '../toDate/index.js';\nimport isLeapYear from '../isLeapYear/index.js';\n/**\n * @name getDaysInYear\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in 2012?\n * var result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\n\nexport default function getDaysInYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n\n  if (isNaN(date)) {\n    return NaN;\n  }\n\n  return isLeapYear(date) ? 366 : 365;\n}","import toDate from '../toDate/index.js';\n/**\n * @name getDecade\n * @category Decade Helpers\n * @summary Get the decade of the given date.\n *\n * @description\n * Get the decade of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year of decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which decade belongs 27 November 1942?\n * var result = getDecade(new Date(1942, 10, 27))\n * //=> 1940\n */\n\nexport default function getDecade(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  return decade;\n}","import toDate from '../toDate/index.js';\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * var result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\n\nexport default function getHours(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var hours = date.getHours();\n  return hours;\n}","import toDate from '../toDate/index.js';\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * var result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\n\nexport default function getISODay(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}","import toDate from '../toDate/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\n\nexport default function getISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport addWeeks from '../addWeeks/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeeksInYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\n\nexport default function getISOWeeksInYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var thisYear = startOfISOWeekYear(dirtyDate);\n  var nextYear = startOfISOWeekYear(addWeeks(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\n/**\n * @name getMilliseconds\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\n\nexport default function getMilliseconds(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var milliseconds = date.getMilliseconds();\n  return milliseconds;\n}","import toDate from '../toDate/index.js';\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\n\nexport default function getMinutes(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var minutes = date.getMinutes();\n  return minutes;\n}","import toDate from '../toDate/index.js';\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from '../toDate/index.js';\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n/**\n * @name getOverlappingDaysInIntervals\n * @category Interval Helpers\n * @summary Get the number of days that overlap in two time intervals\n *\n * @description\n * Get the number of days that overlap in two time intervals\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   getOverlappingDaysInRanges(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   getOverlappingDaysInIntervals(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/Interval}\n * @returns {Number} the number of days that overlap in two time intervals\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals adds 1 for each started overlapping day:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping time intervals returns 0:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> 0\n */\n\nexport default function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n\n  if (!isOverlapping) {\n    return 0;\n  }\n\n  var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;\n  var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;\n  var differenceInMs = overlapEndDate - overlapStartDate;\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\n/**\n * @name getSeconds\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\n\nexport default function getSeconds(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds();\n  return seconds;\n}","import toDate from '../toDate/index.js';\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\n\nexport default function getTime(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}","import getTime from '../getTime/index.js';\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * var result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\n\nexport default function getUnixTime(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return Math.floor(getTime(dirtyDate) / 1000);\n}","import startOfWeek from '../startOfWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the local week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * var result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * var result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * var result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\n\nexport default function getWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getWeekYear from '../getWeekYear/index.js';\nimport startOfWeek from '../startOfWeek/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the start of a week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * var result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  var date = startOfWeek(firstWeek, dirtyOptions);\n  return date;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport startOfWeekYear from '../startOfWeekYear/index.js';\nimport toDate from '../toDate/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * var result = getISOWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport default function getWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getDate from '../getDate/index.js';\nimport getDay from '../getDay/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name getWeekOfMonth\n * @category Week Helpers\n * @summary Get the week of the month of the given date.\n *\n * @description\n * Get the week of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the week of month\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Which week of the month is 9 November 2017?\n * var result = getWeekOfMonth(new Date(2017, 10, 9))\n * //=> 2\n */\n\nexport default function getWeekOfMonth(date, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var currentDayOfMonth = getDate(date);\n\n  if (isNaN(currentDayOfMonth)) {\n    return currentDayOfMonth;\n  }\n\n  var startWeekDay = getDay(startOfMonth(date));\n  var lastDayOfFirstWeek = 0;\n\n  if (startWeekDay >= weekStartsOn) {\n    lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;\n  } else {\n    lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  }\n\n  var weekNumber = 1;\n\n  if (currentDayOfMonth > lastDayOfFirstWeek) {\n    var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n    weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);\n  }\n\n  return weekNumber;\n}","import toDate from '../toDate/index.js';\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import differenceInCalendarWeeks from '../differenceInCalendarWeeks/index.js';\nimport lastDayOfMonth from '../lastDayOfMonth/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\n/**\n * @name getWeeksInMonth\n * @category Week Helpers\n * @summary Get the number of calendar weeks a month spans.\n *\n * @description\n * Get the number of calendar weeks the month in the given date spans.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks does February 2015 span?\n * var result = getWeeksInMonth(new Date(2015, 1, 8))\n * //=> 4\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks does July 2017 span?\n * var result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\n * //=> 6\n */\n\nexport default function getWeeksInMonth(date, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;\n}","import toDate from '../toDate/index.js';\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * var result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year;\n}","import toDate from '../toDate/index.js';\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import toDate from '../toDate/index.js';\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * var result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * var result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * var result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * var result = isDate({})\n * //=> false\n */\nexport default function isDate(value) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import toDate from '../toDate/index.js';\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\n\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","import toDate from '../toDate/index.js';\n/**\n * @name isFirstDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * var result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\n\nexport default function isFirstDayOfMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return toDate(dirtyDate).getDate() === 1;\n}","import toDate from '../toDate/index.js';\n/**\n * @name isFriday\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 26 September 2014 Friday?\n * var result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\n\nexport default function isFriday(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return toDate(dirtyDate).getDay() === 5;\n}","import toDate from '../toDate/index.js';\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\n\nexport default function isFuture(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return toDate(dirtyDate).getTime() > Date.now();\n}","import toDate from '../toDate/index.js';\nimport endOfDay from '../endOfDay/index.js';\nimport endOfMonth from '../endOfMonth/index.js';\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from '../toDate/index.js';\n/**\n * @name isMonday\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 22 September 2014 Monday?\n * var result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isMonday(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return toDate(dirtyDate).getDay() === 1;\n}","import toDate from '../toDate/index.js';\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isPast(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return toDate(dirtyDate).getTime() < Date.now();\n}","import toDate from '../toDate/index.js';\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * var result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import startOfHour from '../startOfHour/index.js';\n/**\n * @name isSameHour\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n * //=> true\n */\n\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}","import startOfWeek from '../startOfWeek/index.js';\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n */\n\nexport default function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import isSameWeek from '../isSameWeek/index.js';\n/**\n * @name isSameISOWeek\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week?\n *\n * @description\n * Are the given dates in the same ISO week?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * var result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n * //=> true\n */\n\nexport default function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {\n    weekStartsOn: 1\n  });\n}","import startOfISOWeekYear from '../startOfISOWeekYear/index.js';\n/**\n * @name isSameISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n * //=> true\n */\n\nexport default function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeftStartOfYear = startOfISOWeekYear(dirtyDateLeft);\n  var dateRightStartOfYear = startOfISOWeekYear(dirtyDateRight);\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();\n}","import toDate from '../toDate/index.js';\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\n\nexport default function startOfMinute(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  date.setSeconds(0, 0);\n  return date;\n}","import startOfMinute from '../startOfMinute/index.js';\n/**\n * @name isSameMinute\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\n\nexport default function isSameMinute(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft);\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight);\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();\n}","import toDate from '../toDate/index.js';\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import toDate from '../toDate/index.js';\n/**\n * @name startOfQuarter\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\n\nexport default function startOfQuarter(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3;\n  date.setMonth(month, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfQuarter from '../startOfQuarter/index.js';\n/**\n * @name isSameQuarter\n * @category Quarter Helpers\n * @summary Are the given dates in the same year quarter?\n *\n * @description\n * Are the given dates in the same year quarter?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * var result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\n * //=> true\n */\n\nexport default function isSameQuarter(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft);\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight);\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();\n}","import toDate from '../toDate/index.js';\n/**\n * @name startOfSecond\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\n\nexport default function startOfSecond(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(0);\n  return date;\n}","import startOfSecond from '../startOfSecond/index.js';\n/**\n * @name isSameSecond\n * @category Second Helpers\n * @summary Are the given dates in the same second?\n *\n * @description\n * Are the given dates in the same second?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n * // in the same second?\n * var result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n */\n\nexport default function isSameSecond(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft);\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight);\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();\n}","import toDate from '../toDate/index.js';\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}","import toDate from '../toDate/index.js';\n/**\n * @name isSaturday\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * var result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\n\nexport default function isSaturday(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return toDate(dirtyDate).getDay() === 6;\n}","import isSameHour from '../isSameHour/index.js';\n/**\n * @name isThisHour\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * var result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\n\nexport default function isThisHour(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameHour(Date.now(), dirtyDate);\n}","import isSameISOWeek from '../isSameISOWeek/index.js';\n/**\n * @name isThisISOWeek\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * var result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isThisISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameISOWeek(dirtyDate, Date.now());\n}","import isSameMinute from '../isSameMinute/index.js';\n/**\n * @name isThisMinute\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\n\nexport default function isThisMinute(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameMinute(Date.now(), dirtyDate);\n}","import isSameMonth from '../isSameMonth/index.js';\n/**\n * @name isThisMonth\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * var result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\n\nexport default function isThisMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameMonth(Date.now(), dirtyDate);\n}","import isSameQuarter from '../isSameQuarter/index.js';\n/**\n * @name isThisQuarter\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * var result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisQuarter(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameQuarter(Date.now(), dirtyDate);\n}","import isSameSecond from '../isSameSecond/index.js';\n/**\n * @name isThisSecond\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\n\nexport default function isThisSecond(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameSecond(Date.now(), dirtyDate);\n}","import isSameWeek from '../isSameWeek/index.js';\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\n\nexport default function isThisWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameWeek(dirtyDate, Date.now(), options);\n}","import isSameYear from '../isSameYear/index.js';\n/**\n * @name isThisYear\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameYear(dirtyDate, Date.now());\n}","import toDate from '../toDate/index.js';\n/**\n * @name isThursday\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * var result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isThursday(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return toDate(dirtyDate).getDay() === 4;\n}","import isSameDay from '../isSameDay/index.js';\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameDay(dirtyDate, Date.now());\n}","import addDays from '../addDays/index.js';\nimport isSameDay from '../isSameDay/index.js';\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\n\nexport default function isTomorrow(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameDay(dirtyDate, addDays(Date.now(), 1));\n}","import toDate from '../toDate/index.js';\n/**\n * @name isTuesday\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * var result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\n\nexport default function isTuesday(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return toDate(dirtyDate).getDay() === 2;\n}","import toDate from '../toDate/index.js';\n/**\n * @name isWednesday\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * var result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\n\nexport default function isWednesday(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return toDate(dirtyDate).getDay() === 3;\n}","import toDate from '../toDate/index.js';\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isWithinRange` to `isWithinInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   isWithinRange(\n *     new Date(2014, 0, 3),\n *     new Date(2014, 0, 1), new Date(2014, 0, 7)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   isWithinInterval(\n *     new Date(2014, 0, 3),\n *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n */\n\nexport default function isWithinInterval(dirtyDate, dirtyInterval) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var interval = dirtyInterval || {};\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  return time >= startTime && time <= endTime;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * var result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import isSameDay from '../isSameDay/index.js';\nimport subDays from '../subDays/index.js';\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\n\nexport default function isYesterday(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameDay(dirtyDate, subDays(Date.now(), 1));\n}","import toDate from '../toDate/index.js';\n/**\n * @name lastDayOfDecade\n * @category Decade Helpers\n * @summary Return the last day of a decade for the given date.\n *\n * @description\n * Return the last day of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a decade for 21 December 2012 21:12:00:\n * var result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))\n * //=> Wed Dec 31 2019 00:00:00\n */\n\nexport default function lastDayOfDecade(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name lastDayOfWeek\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setHours(0, 0, 0, 0);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import lastDayOfWeek from '../lastDayOfWeek/index.js';\n/**\n * @name lastDayOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return lastDayOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\n/**\n * @name lastDayOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * var result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\n\nexport default function lastDayOfISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  date.setDate(date.getDate() - 1);\n  return date;\n}","import toDate from '../toDate/index.js';\n/**\n * @name lastDayOfQuarter\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the last day of a quarter\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfQuarter(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\n/**\n * @name lastDayOfYear\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\n\nexport default function lastDayOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/lightFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport isValid from '../isValid/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js'; // This RegExp consists of three parts separated by `|`:\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name lightFormat\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. Unlike `format`,\n * `lightFormat` doesn't use locales and outputs date using the most popular tokens.\n *\n * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   |\n * |---------------------------------|---------|-----------------------------------|\n * | AM, PM                          | a..aaa  | AM, PM                            |\n * |                                 | aaaa    | a.m., p.m.                        |\n * |                                 | aaaaa   | a, p                              |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 |\n * |                                 | yy      | 44, 01, 00, 17                    |\n * |                                 | yyy     | 044, 001, 000, 017                |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |\n * |                                 | MM      | 01, 02, ..., 12                   |\n * | Day of month                    | d       | 1, 2, ..., 31                     |\n * |                                 | dd      | 01, 02, ..., 31                   |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n * |                                 | hh      | 01, 02, ..., 11, 12               |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n * |                                 | HH      | 00, 01, 02, ..., 23               |\n * | Minute                          | m       | 0, 1, ..., 59                     |\n * |                                 | mm      | 00, 01, ..., 59                   |\n * | Second                          | s       | 0, 1, ..., 59                     |\n * |                                 | ss      | 00, 01, ..., 59                   |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |\n * |                                 | SS      | 00, 01, ..., 99                   |\n * |                                 | SSS     | 000, 0001, ..., 999               |\n * |                                 | SSSS    | ...                               |\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * var result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')\n * //=> '1987-02-11'\n */\n\nexport default function lightFormat(dirtyDate, dirtyFormatStr) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var formatStr = String(dirtyFormatStr);\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var result = formatStr.match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      return formatter(utcDate, substring, null, {});\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `max` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var maxDate = max(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var maxDate = max(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the latest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\n\nexport default function max(dirtyDatesArray) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result < currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toDate from '../toDate/index.js';\n/**\n * @name min\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `min` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var minDate = min(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var minDate = min(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the earliest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\n\nexport default function min(dirtyDatesArray) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result > currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCISOWeek from '../getUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCWeek from '../getUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport assign from '../_lib/assign/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport parsers from './_lib/parsers/index.js';\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `backupDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `backupDate` which works as a context of parsing.\n *\n * `backupDate` must be passed for correct work of the function.\n * If you're not sure which `backupDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `backupDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `backupDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   toDate('2016-01-01')\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} backupDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyBackupDate, dirtyOptions) {\n  if (arguments.length < 3) {\n    throw new TypeError('3 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyBackupDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).reverse();\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyBackupDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toInteger from '../_lib/toInteger/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var fullTime = timestamp + time;\n    var fullTimeDate = new Date(fullTime);\n    offset = getTimezoneOffsetInMilliseconds(fullTimeDate); // Adjust time when it's coming from DST\n\n    var fullTimeDateDiffDay = new Date(fullTime);\n\n    if (offset > 0) {\n      fullTimeDateDiffDay.setDate(fullTimeDate.getDate() + 1);\n    } else {\n      fullTimeDateDiffDay.setDate(fullTimeDate.getDate() - 1);\n    }\n\n    var offsetDiff = getTimezoneOffsetInMilliseconds(fullTimeDateDiffDay) - offset;\n\n    if (offsetDiff > 0) {\n      offset += offsetDiff;\n    }\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import toDate from '../toDate/index.js';\n/**\n * @name parseJSON\n * @category Common Helpers\n * @summary Parse a JSON date string\n *\n * @description\n * Converts a complete ISO date string in UTC time, the typical format for transmitting\n * a date in JSON, to a JavaScript `Date` instance.\n *\n * This is a minimal implementation for converting dates retrieved from a JSON API to\n * a `Date` instance which can be used with other functions in the `date-fns` library.\n * The following formats are supported:\n *\n *     - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n *     - `2000-03-15T05:20:10Z`: Without milliseconds\n *     - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n *     - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n *     - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n *     - `2000-03-15T05:20:10.134566`: Up to 6 digits in milliseconds field. Only first 3 are taken into account since JS does now allow fractional milliseconds\n *\n * For convenience and ease of use these other input types are also supported\n * via [toDate]{@link https://date-fns.org/docs/toDate}:\n *\n *     - A `Date` instance will be cloned\n *     - A `number` will be treated as a timestamp\n *\n * Any other input type or invalid date strings will return an `Invalid Date`.\n *\n * @param {String|Number|Date} argument A fully formed ISO1806 date string to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n */\n\nexport default function parseJSON(argument) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  if (typeof argument === 'string') {\n    var parts = argument.match(/(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{0,6}))?(?:Z|\\+00:?00)?/);\n\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));\n    }\n  }\n\n  return toDate(argument);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name roundToNearestMinutes\n * @category Minute Helpers\n * @summary Rounds the given date to the nearest minute\n *\n * @description\n * Rounds the given date to the nearest minute (or number of minutes). \n * Rounds up when the given date is exactly between the nearest round minutes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to round\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.\n * @returns {Date} the new date rounded to the closest minute\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.nearestTo` must be between 1 and 30\n *\n * @example\n * // Round 10 July 2014 12:12:34 to nearest minute:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))\n * //=> Thu Jul 10 2014 12:13:00\n *\n * @example\n * // Round 10 July 2014 12:07:30 to nearest quarter hour:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })\n * // rounds up because given date is exactly between 12:00:00 and 12:15:00\n * //=> Thu Jul 10 2014 12:15:00\n */\n\nexport default function roundToNearestMinutes(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only none provided present');\n  }\n\n  var nearestTo = options && 'nearestTo' in options ? toInteger(options.nearestTo) : 1;\n\n  if (nearestTo < 1 || nearestTo > 30) {\n    throw new RangeError('`options.nearestTo` must be between 1 and 30');\n  }\n\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case\n\n  var minutes = date.getMinutes() + seconds / 60;\n  var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;\n  var remainderMinutes = minutes % nearestTo;\n  var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\n\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","import toDate from '../toDate/index.js';\nimport setMonth from '../setMonth/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name set\n * @category Common Helpers\n * @summary Set date values to a given date.\n *\n * @description\n * Set date values to a given date.\n *\n * Sets time values to date from object `values`.\n * A value is not set if it is undefined or null or doesn't exist in `values`.\n *\n * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\n * to use native `Date#setX` methods. If you use this function, you may not want to include the\n * other `setX` functions that date-fns provides if you are concerned about the bundle size.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Object} values - an object with options\n * @param {Number} [values.year] - the number of years to be set\n * @param {Number} [values.month] - the number of months to be set\n * @param {Number} [values.date] - the number of days to be set\n * @param {Number} [values.hours] - the number of hours to be set\n * @param {Number} [values.minutes] - the number of minutes to be set\n * @param {Number} [values.seconds] - the number of seconds to be set\n * @param {Number} [values.milliseconds] - the number of milliseconds to be set\n * @returns {Date} the new date with options set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `values` must be an object\n *\n * @example\n * // Transform 1 September 2014 into 20 October 2015 in a single line:\n * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n * //=> Tue Oct 20 2015 00:00:00\n *\n * @example\n * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\n * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n * //=> Mon Sep 01 2014 12:23:45\n */\n\nexport default function set(dirtyDate, values) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  if (typeof values !== 'object' || values === null) {\n    throw new RangeError('values parameter must be an object');\n  }\n\n  var date = toDate(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  if (values.year != null) {\n    date.setFullYear(values.year);\n  }\n\n  if (values.month != null) {\n    date = setMonth(date, values.month);\n  }\n\n  if (values.date != null) {\n    date.setDate(toInteger(values.date));\n  }\n\n  if (values.hours != null) {\n    date.setHours(toInteger(values.hours));\n  }\n\n  if (values.minutes != null) {\n    date.setMinutes(toInteger(values.minutes));\n  }\n\n  if (values.seconds != null) {\n    date.setSeconds(toInteger(values.seconds));\n  }\n\n  if (values.milliseconds != null) {\n    date.setMilliseconds(toInteger(values.milliseconds));\n  }\n\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name setDate\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * var result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function setDate(dirtyDate, dirtyDayOfMonth) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var dayOfMonth = toInteger(dirtyDayOfMonth);\n  date.setDate(dayOfMonth);\n  return date;\n}","import addDays from '../addDays/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If week starts with Monday, set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setDay(dirtyDate, dirtyDay, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate, options);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  return addDays(date, diff, options);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name setDayOfYear\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * var result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\n\nexport default function setDayOfYear(dirtyDate, dirtyDayOfYear) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var dayOfYear = toInteger(dirtyDayOfYear);\n  date.setMonth(0);\n  date.setDate(dayOfYear);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name setHours\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\n\nexport default function setHours(dirtyDate, dirtyHours) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var hours = toInteger(dirtyHours);\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport addDays from '../addDays/index.js';\nimport getISODay from '../getISODay/index.js';\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setISODay(dirtyDate, dirtyDay) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = getISODay(date);\n  var diff = day - currentDay;\n  return addDays(date, diff);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getISOWeek from '../getISOWeek/index.js';\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * var result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setISOWeek(dirtyDate, dirtyISOWeek) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getISOWeek(date) - isoWeek;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name setMilliseconds\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\n\nexport default function setMilliseconds(dirtyDate, dirtyMilliseconds) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var milliseconds = toInteger(dirtyMilliseconds);\n  date.setMilliseconds(milliseconds);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name setMinutes\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\n\nexport default function setMinutes(dirtyDate, dirtyMinutes) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var minutes = toInteger(dirtyMinutes);\n  date.setMinutes(minutes);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport setMonth from '../setMonth/index.js';\n/**\n * @name setQuarter\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * var result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\n\nexport default function setQuarter(dirtyDate, dirtyQuarter) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var quarter = toInteger(dirtyQuarter);\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1;\n  var diff = quarter - oldQuarter;\n  return setMonth(date, date.getMonth() + diff * 3);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name setSeconds\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\n\nexport default function setSeconds(dirtyDate, dirtySeconds) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var seconds = toInteger(dirtySeconds);\n  date.setSeconds(seconds);\n  return date;\n}","import getWeek from '../getWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} week - the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * var result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * var result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\n\nexport default function setWeek(dirtyDate, dirtyWeek, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getWeek(date, dirtyOptions) - week;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport startOfWeekYear from '../startOfWeekYear/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name setWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Set the local week-numbering year to the given date.\n *\n * @description\n * Set the local week-numbering year to the given date,\n * saving the week number and the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} weekYear - the local week-numbering year of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week-numbering year set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010 with default options:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004)\n * //=> Sat Jan 03 2004 00:00:00\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010,\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setWeekYear(dirtyDate, dirtyWeekYear, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var date = toDate(dirtyDate);\n  var weekYear = toInteger(dirtyWeekYear);\n  var diff = differenceInCalendarDays(date, startOfWeekYear(date, dirtyOptions));\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  date = startOfWeekYear(firstWeek, dirtyOptions);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\n\nexport default function setYear(dirtyDate, dirtyYear) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = toInteger(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  date.setFullYear(year);\n  return date;\n}","import toDate from '../toDate/index.js';\n/**\n * @name startOfDecade\n * @category Decade Helpers\n * @summary Return the start of a decade for the given date.\n *\n * @description\n * Return the start of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a decade for 21 October 2015 00:00:00:\n * var result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))\n * //=> Jan 01 2010 00:00:00\n */\n\nexport default function startOfDecade(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","/**\n * @name startOfTomorrow\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n * @pure false\n *\n * @description\n * Return the start of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nexport default function startOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","/**\n * @name startOfYesterday\n * @category Day Helpers\n * @summary Return the start of yesterday.\n * @pure false\n *\n * @description\n * Return the start of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nexport default function startOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addBusinessDays from '../addBusinessDays/index.js';\n/**\n * @name subBusinessDays\n * @category Day Helpers\n * @summary Substract the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be subtracted\n * @returns {Date} the new date with the business days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Substract 10 business days from 1 September 2014:\n * var result = subBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function subBusinessDays(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addBusinessDays(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addHours from '../addHours/index.js';\n/**\n * @name subHours\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted\n * @returns {Date} the new date with the hours subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\n\nexport default function subHours(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addHours(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMinutes from '../addMinutes/index.js';\n/**\n * @name subMinutes\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted\n * @returns {Date} the new date with the minutes subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\n\nexport default function subMinutes(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMinutes(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addQuarters from '../addQuarters/index.js';\n/**\n * @name subQuarters\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted\n * @returns {Date} the new date with the quarters subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * var result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\n\nexport default function subQuarters(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addQuarters(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addSeconds from '../addSeconds/index.js';\n/**\n * @name subSeconds\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\n\nexport default function subSeconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addSeconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addWeeks from '../addWeeks/index.js';\n/**\n * @name subWeeks\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted\n * @returns {Date} the new date with the weeks subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * var result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\n\nexport default function subWeeks(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addWeeks(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addYears from '../addYears/index.js';\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\n\nexport default function subYears(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","/**\n *  Maximum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n *  Minimum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\n\nexport var minTime = -maxTime;","// This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.\nexport { default as addBusinessDays } from './addBusinessDays/index.js';\nexport { default as addDays } from './addDays/index.js';\nexport { default as addHours } from './addHours/index.js';\nexport { default as addISOWeekYears } from './addISOWeekYears/index.js';\nexport { default as addMilliseconds } from './addMilliseconds/index.js';\nexport { default as addMinutes } from './addMinutes/index.js';\nexport { default as addMonths } from './addMonths/index.js';\nexport { default as addQuarters } from './addQuarters/index.js';\nexport { default as addSeconds } from './addSeconds/index.js';\nexport { default as addWeeks } from './addWeeks/index.js';\nexport { default as addYears } from './addYears/index.js';\nexport { default as areIntervalsOverlapping } from './areIntervalsOverlapping/index.js';\nexport { default as closestIndexTo } from './closestIndexTo/index.js';\nexport { default as closestTo } from './closestTo/index.js';\nexport { default as compareAsc } from './compareAsc/index.js';\nexport { default as compareDesc } from './compareDesc/index.js';\nexport { default as differenceInBusinessDays } from './differenceInBusinessDays/index.js';\nexport { default as differenceInCalendarDays } from './differenceInCalendarDays/index.js';\nexport { default as differenceInCalendarISOWeekYears } from './differenceInCalendarISOWeekYears/index.js';\nexport { default as differenceInCalendarISOWeeks } from './differenceInCalendarISOWeeks/index.js';\nexport { default as differenceInCalendarMonths } from './differenceInCalendarMonths/index.js';\nexport { default as differenceInCalendarQuarters } from './differenceInCalendarQuarters/index.js';\nexport { default as differenceInCalendarWeeks } from './differenceInCalendarWeeks/index.js';\nexport { default as differenceInCalendarYears } from './differenceInCalendarYears/index.js';\nexport { default as differenceInDays } from './differenceInDays/index.js';\nexport { default as differenceInHours } from './differenceInHours/index.js';\nexport { default as differenceInISOWeekYears } from './differenceInISOWeekYears/index.js';\nexport { default as differenceInMilliseconds } from './differenceInMilliseconds/index.js';\nexport { default as differenceInMinutes } from './differenceInMinutes/index.js';\nexport { default as differenceInMonths } from './differenceInMonths/index.js';\nexport { default as differenceInQuarters } from './differenceInQuarters/index.js';\nexport { default as differenceInSeconds } from './differenceInSeconds/index.js';\nexport { default as differenceInWeeks } from './differenceInWeeks/index.js';\nexport { default as differenceInYears } from './differenceInYears/index.js';\nexport { default as eachDayOfInterval } from './eachDayOfInterval/index.js';\nexport { default as eachWeekOfInterval } from './eachWeekOfInterval/index.js';\nexport { default as eachWeekendOfInterval } from './eachWeekendOfInterval/index.js';\nexport { default as eachWeekendOfMonth } from './eachWeekendOfMonth/index.js';\nexport { default as eachWeekendOfYear } from './eachWeekendOfYear/index.js';\nexport { default as endOfDay } from './endOfDay/index.js';\nexport { default as endOfDecade } from './endOfDecade/index.js';\nexport { default as endOfHour } from './endOfHour/index.js';\nexport { default as endOfISOWeek } from './endOfISOWeek/index.js';\nexport { default as endOfISOWeekYear } from './endOfISOWeekYear/index.js';\nexport { default as endOfMinute } from './endOfMinute/index.js';\nexport { default as endOfMonth } from './endOfMonth/index.js';\nexport { default as endOfQuarter } from './endOfQuarter/index.js';\nexport { default as endOfSecond } from './endOfSecond/index.js';\nexport { default as endOfToday } from './endOfToday/index.js';\nexport { default as endOfTomorrow } from './endOfTomorrow/index.js';\nexport { default as endOfWeek } from './endOfWeek/index.js';\nexport { default as endOfYear } from './endOfYear/index.js';\nexport { default as endOfYesterday } from './endOfYesterday/index.js';\nexport { default as format } from './format/index.js';\nexport { default as formatDistance } from './formatDistance/index.js';\nexport { default as formatDistanceStrict } from './formatDistanceStrict/index.js';\nexport { default as formatDistanceToNow } from './formatDistanceToNow/index.js';\nexport { default as formatRelative } from './formatRelative/index.js';\nexport { default as fromUnixTime } from './fromUnixTime/index.js';\nexport { default as getDate } from './getDate/index.js';\nexport { default as getDay } from './getDay/index.js';\nexport { default as getDayOfYear } from './getDayOfYear/index.js';\nexport { default as getDaysInMonth } from './getDaysInMonth/index.js';\nexport { default as getDaysInYear } from './getDaysInYear/index.js';\nexport { default as getDecade } from './getDecade/index.js';\nexport { default as getHours } from './getHours/index.js';\nexport { default as getISODay } from './getISODay/index.js';\nexport { default as getISOWeek } from './getISOWeek/index.js';\nexport { default as getISOWeekYear } from './getISOWeekYear/index.js';\nexport { default as getISOWeeksInYear } from './getISOWeeksInYear/index.js';\nexport { default as getMilliseconds } from './getMilliseconds/index.js';\nexport { default as getMinutes } from './getMinutes/index.js';\nexport { default as getMonth } from './getMonth/index.js';\nexport { default as getOverlappingDaysInIntervals } from './getOverlappingDaysInIntervals/index.js';\nexport { default as getQuarter } from './getQuarter/index.js';\nexport { default as getSeconds } from './getSeconds/index.js';\nexport { default as getTime } from './getTime/index.js';\nexport { default as getUnixTime } from './getUnixTime/index.js';\nexport { default as getWeek } from './getWeek/index.js';\nexport { default as getWeekOfMonth } from './getWeekOfMonth/index.js';\nexport { default as getWeekYear } from './getWeekYear/index.js';\nexport { default as getWeeksInMonth } from './getWeeksInMonth/index.js';\nexport { default as getYear } from './getYear/index.js';\nexport { default as isAfter } from './isAfter/index.js';\nexport { default as isBefore } from './isBefore/index.js';\nexport { default as isDate } from './isDate/index.js';\nexport { default as isEqual } from './isEqual/index.js';\nexport { default as isFirstDayOfMonth } from './isFirstDayOfMonth/index.js';\nexport { default as isFriday } from './isFriday/index.js';\nexport { default as isFuture } from './isFuture/index.js';\nexport { default as isLastDayOfMonth } from './isLastDayOfMonth/index.js';\nexport { default as isLeapYear } from './isLeapYear/index.js';\nexport { default as isMonday } from './isMonday/index.js';\nexport { default as isPast } from './isPast/index.js';\nexport { default as isSameDay } from './isSameDay/index.js';\nexport { default as isSameHour } from './isSameHour/index.js';\nexport { default as isSameISOWeek } from './isSameISOWeek/index.js';\nexport { default as isSameISOWeekYear } from './isSameISOWeekYear/index.js';\nexport { default as isSameMinute } from './isSameMinute/index.js';\nexport { default as isSameMonth } from './isSameMonth/index.js';\nexport { default as isSameQuarter } from './isSameQuarter/index.js';\nexport { default as isSameSecond } from './isSameSecond/index.js';\nexport { default as isSameWeek } from './isSameWeek/index.js';\nexport { default as isSameYear } from './isSameYear/index.js';\nexport { default as isSaturday } from './isSaturday/index.js';\nexport { default as isSunday } from './isSunday/index.js';\nexport { default as isThisHour } from './isThisHour/index.js';\nexport { default as isThisISOWeek } from './isThisISOWeek/index.js';\nexport { default as isThisMinute } from './isThisMinute/index.js';\nexport { default as isThisMonth } from './isThisMonth/index.js';\nexport { default as isThisQuarter } from './isThisQuarter/index.js';\nexport { default as isThisSecond } from './isThisSecond/index.js';\nexport { default as isThisWeek } from './isThisWeek/index.js';\nexport { default as isThisYear } from './isThisYear/index.js';\nexport { default as isThursday } from './isThursday/index.js';\nexport { default as isToday } from './isToday/index.js';\nexport { default as isTomorrow } from './isTomorrow/index.js';\nexport { default as isTuesday } from './isTuesday/index.js';\nexport { default as isValid } from './isValid/index.js';\nexport { default as isWednesday } from './isWednesday/index.js';\nexport { default as isWeekend } from './isWeekend/index.js';\nexport { default as isWithinInterval } from './isWithinInterval/index.js';\nexport { default as isYesterday } from './isYesterday/index.js';\nexport { default as lastDayOfDecade } from './lastDayOfDecade/index.js';\nexport { default as lastDayOfISOWeek } from './lastDayOfISOWeek/index.js';\nexport { default as lastDayOfISOWeekYear } from './lastDayOfISOWeekYear/index.js';\nexport { default as lastDayOfMonth } from './lastDayOfMonth/index.js';\nexport { default as lastDayOfQuarter } from './lastDayOfQuarter/index.js';\nexport { default as lastDayOfWeek } from './lastDayOfWeek/index.js';\nexport { default as lastDayOfYear } from './lastDayOfYear/index.js';\nexport { default as lightFormat } from './lightFormat/index.js';\nexport { default as max } from './max/index.js';\nexport { default as min } from './min/index.js';\nexport { default as parse } from './parse/index.js';\nexport { default as parseISO } from './parseISO/index.js';\nexport { default as parseJSON } from './parseJSON/index.js';\nexport { default as roundToNearestMinutes } from './roundToNearestMinutes/index.js';\nexport { default as set } from './set/index.js';\nexport { default as setDate } from './setDate/index.js';\nexport { default as setDay } from './setDay/index.js';\nexport { default as setDayOfYear } from './setDayOfYear/index.js';\nexport { default as setHours } from './setHours/index.js';\nexport { default as setISODay } from './setISODay/index.js';\nexport { default as setISOWeek } from './setISOWeek/index.js';\nexport { default as setISOWeekYear } from './setISOWeekYear/index.js';\nexport { default as setMilliseconds } from './setMilliseconds/index.js';\nexport { default as setMinutes } from './setMinutes/index.js';\nexport { default as setMonth } from './setMonth/index.js';\nexport { default as setQuarter } from './setQuarter/index.js';\nexport { default as setSeconds } from './setSeconds/index.js';\nexport { default as setWeek } from './setWeek/index.js';\nexport { default as setWeekYear } from './setWeekYear/index.js';\nexport { default as setYear } from './setYear/index.js';\nexport { default as startOfDay } from './startOfDay/index.js';\nexport { default as startOfDecade } from './startOfDecade/index.js';\nexport { default as startOfHour } from './startOfHour/index.js';\nexport { default as startOfISOWeek } from './startOfISOWeek/index.js';\nexport { default as startOfISOWeekYear } from './startOfISOWeekYear/index.js';\nexport { default as startOfMinute } from './startOfMinute/index.js';\nexport { default as startOfMonth } from './startOfMonth/index.js';\nexport { default as startOfQuarter } from './startOfQuarter/index.js';\nexport { default as startOfSecond } from './startOfSecond/index.js';\nexport { default as startOfToday } from './startOfToday/index.js';\nexport { default as startOfTomorrow } from './startOfTomorrow/index.js';\nexport { default as startOfWeek } from './startOfWeek/index.js';\nexport { default as startOfWeekYear } from './startOfWeekYear/index.js';\nexport { default as startOfYear } from './startOfYear/index.js';\nexport { default as startOfYesterday } from './startOfYesterday/index.js';\nexport { default as subBusinessDays } from './subBusinessDays/index.js';\nexport { default as subDays } from './subDays/index.js';\nexport { default as subHours } from './subHours/index.js';\nexport { default as subISOWeekYears } from './subISOWeekYears/index.js';\nexport { default as subMilliseconds } from './subMilliseconds/index.js';\nexport { default as subMinutes } from './subMinutes/index.js';\nexport { default as subMonths } from './subMonths/index.js';\nexport { default as subQuarters } from './subQuarters/index.js';\nexport { default as subSeconds } from './subSeconds/index.js';\nexport { default as subWeeks } from './subWeeks/index.js';\nexport { default as subYears } from './subYears/index.js';\nexport { default as toDate } from './toDate/index.js';\nexport * from './constants/index.js';","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","module.exports =\n  global.performance &&\n  global.performance.now ? function now() {\n    return performance.now()\n  } : Date.now || function now() {\n    return +new Date\n  }\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","if performance? and performance.now\n  module.exports = -> performance.now()\nelse if process? and process.hrtime\n  module.exports = -> (getNanoSeconds() - nodeLoadTime) / 1e6\n  hrtime = process.hrtime\n  getNanoSeconds = ->\n    hr = hrtime()\n    hr[0] * 1e9 + hr[1]\n  moduleLoadTime = getNanoSeconds()\n  upTime = process.uptime() * 1e9\n  nodeLoadTime = moduleLoadTime - upTime\nelse if Date.now\n  module.exports = -> Date.now() - loadTime\n  loadTime = Date.now()\nelse\n  module.exports = -> new Date().getTime() - loadTime\n  loadTime = new Date().getTime()\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","var inherits = require('inherits')\nvar EventEmitter = require('events').EventEmitter\nvar now = require('right-now')\nvar raf = require('raf')\n\nmodule.exports = Engine\nfunction Engine(fn) {\n    if (!(this instanceof Engine)) \n        return new Engine(fn)\n    this.running = false\n    this.last = now()\n    this._frame = 0\n    this._tick = this.tick.bind(this)\n\n    if (fn)\n        this.on('tick', fn)\n}\n\ninherits(Engine, EventEmitter)\n\nEngine.prototype.start = function() {\n    if (this.running) \n        return\n    this.running = true\n    this.last = now()\n    this._frame = raf(this._tick)\n    return this\n}\n\nEngine.prototype.stop = function() {\n    this.running = false\n    if (this._frame !== 0)\n        raf.cancel(this._frame)\n    this._frame = 0\n    return this\n}\n\nEngine.prototype.tick = function() {\n    this._frame = raf(this._tick)\n    var time = now()\n    var dt = time - this.last\n    this.emit('tick', dt)\n    this.last = time\n}","export const trackMouse = () => {\n  window.mouseX = 0;\n  window.mouseY = 0;\n\n  document.getElementById('canvas').addEventListener('mousemove', e => {\n    window.mouseX = e.x - e.target.offsetLeft;\n    window.mouseY = e.y - e.target.offsetTop;\n  });\n}\n\nexport const interpolate = (t, n1, n2) => {\n  return ((n2 - n1) * t) + n1;\n};\n\nexport const randomBetween = (min, max) => {\n  return ((max - min) * Math.random()) + min;\n}\n\nexport const mapRange = (v, r1l, r1u, r2l, r2u) => {\n  return r2l + (r2u - r2l) * (v - r1l) / (r1u - r1l);\n}\n\nexport const distance = (x1, y1, x2, y2) => {\n  let a = x1 - x2;\n  let b = y1 - y2;\n\n  return Math.sqrt(a * a + b * b);\n}\n\nexport const clamp = (value, max, min = 0) => {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport const shuffle = (array) => {\n  let _arr = array.slice();\n  for (let i = _arr.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [_arr[i], _arr[j]] = [_arr[j], _arr[i]];\n  }\n\n  return _arr;\n}\n\n\nexport const color = (r, g, b) => {\n  return { r, g, b };\n}\n\nexport const colorToString = ({ r, g, b }) => {\n  return `rgb(${ r }, ${ g }, ${ b })`;\n}\n\nexport const colourInterpolate = (t, color1, color2) => {\n  return color(\n    interpolate(t, color1.r, color2.r),\n    interpolate(t, color1.g, color2.g),\n    interpolate(t, color1.b, color2.b),\n  );\n}\n\nexport const getPointFromAngleRadius = (angle, radius, x = 0, y = 0) => {\n  return {\n    x: x + (Math.cos(angle) * radius),\n    y: y + (Math.sin(angle) * radius)\n  };\n}\n\n\n\n/**\n * Creates an array of stepped colours through an array of colours\n *\n * @param {Array.<{ r: number, g: number, b: number }>} colours\n * @param {number} granularity\n *\n * @returns {Array.<{ r: number, g: number, b: number }>}\n */\nexport const getInterpolatedColours = (colours = [], granularity = 100) => {\n  let colourStop = 1 / (colours.length - 1);\n  let granularityStop = 1 / granularity;\n\n  let colourArr = [];\n\n  for (let i = 0; i <= 1; i += granularityStop) {\n    let t = (i % colourStop) / colourStop;\n    let currColourIdx = Math.floor(i / colourStop);\n    colourArr.push(colourInterpolate(t, colours[currColourIdx], colours[currColourIdx + 1]));\n  }\n\n  return colourArr;\n}\n\n\n\n/**\n * Finds what would be the most relevant colour\n * in a colour array most likely created by\n * getInterpolatedColours\n *\n * @param {number} t\n * @param {Array.<{ r: number, g: number, b: number }>} colourArr\n *\n * @returns {{ r: number, g: number, b: number }}\n */\nexport const getClosestColour = (t, colourArr) => {\n  return colourArr[Math.round((colourArr.length - 1) * t)];\n}\n\n\n/**\n * Loads an image as an element\n *\n * @param {String} src\n */\nexport const loadImage = src => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => {\n      resolve(img);\n    };\n    img.src = src;\n  });\n}\n\n\n/**\n * Draw an image centered within an area\n *\n * @param {ImageElement} img\n * @param {Number} x\n * @param {Number} y\n * @param {Number} width\n * @param {Number} height\n * @param {Number} imgWidth\n * @param {Number} imgHeight\n */\nexport const drawCenteredImage = (img, x, y, width, height, imgWidth, imgHeight) => {\n  let newWid, newHei;\n\n  if (imgWidth > imgHeight) {\n    newHei = height;\n    newWid = (height / imgHeight) * imgWidth;\n  } else {\n    newWid = width;\n    newHei = (width / imgWidth) * imgHeight;\n  }\n\n  let xOffset = (newWid - width) / 2;\n  let yOffset = (newHei - height) / 2;\n\n  ctx.drawImage(img, x - xOffset, y - yOffset, newWid, newHei);\n}\n\n\n/**\n * Draws the text centered within an area to its best ability\n *\n * Line height is definitely the biggest thing to play with\n *\n * @param {String} text\n * @param {Number} x\n * @param {Number} y\n * @param {Number} width\n * @param {Number} height\n * @param {Number} lineHeight\n */\nexport const drawCenteredText = (text, x, y, width, height, lineHeight) => {\n  const { width: textWidth } = ctx.measureText(text);\n\n  // let xOffset = (newWid - width) / 2;\n  // let yOffset = (newHei - height) / 2;\n  let xOffset = (width - textWidth) / 2;\n  let yOffset = (height / 2) + (lineHeight / 2);\n\n  ctx.fillText(text, x + xOffset, y + yOffset);\n}\n\n\n/**\n * Returns brightness according to 'HSP'\n *\n * @param {color} Color like object\n *\n * @returns {Number} 0-255\n */\nexport const getBrightness = ({ r, g, b }) => {\n  return Math.sqrt(\n    0.299 * (r * r) +\n    0.587 * (g * g) +\n    0.114 * (b * b)\n  );\n}\n","import Loop from 'raf-loop';\n\nimport { clamp } from './utils';\n\nclass BaseEngine {\n  constructor(defaultOptions, options) {\n    this.options = {\n      ...defaultOptions,\n      ...options\n    };\n\n    this.loop = Loop(this.update.bind(this));\n\n    this.frame = 0;\n\n    this.windowWidth = window.innerWidth;\n\n    this._renderer = () => {};\n  }\n\n  _addEventListeners() {\n    this.wrapper.addEventListener('click', () => {\n      this.options.debug = !this.options.debug;\n\n      document.body.classList.toggle('debug', this.options.debug);\n    }, false);\n\n    this.resizeTimer = setTimeout(() => {});\n    window.addEventListener('resize', e => {\n      clearTimeout(this.resizeTimer);\n\n      this.resizeTimer = setTimeout(() => {\n        this.windowWidth = window.innerWidth;\n\n        this.updateDimensions(this.options.width, this.options.height, this.options.pixelRatio, this.options.pixelate);\n      }, 150);\n    });\n  }\n\n  _removeLoading() {\n    const loading = document.getElementById('loading');\n    loading.parentElement.removeChild(loading);\n  }\n\n  updateDimensions(width, height, pixelRatio, pixelate = 1) {\n    this.wrapper.style.width = `${width * pixelate}px`;\n    this.wrapper.style.height = `${height * pixelate}px`;\n\n    this.wrapper.style.transform = `scale(${ clamp(this.windowWidth / width, 1) })`;\n\n    if (this.canvasEl) {\n      this.canvasEl.width = width * pixelRatio;\n      this.canvasEl.height = height * pixelRatio;\n\n      this.canvasCtx.scale(pixelRatio, pixelRatio);\n    }\n\n    if (this.renderer) {\n      this.renderer.setSize(width, height);\n      this.renderer.setPixelRatio(pixelRatio);\n    }\n  }\n\n  onRender(fn = () => {}) {\n    this._renderer = fn;\n  }\n\n  preload(cb = () => {}) {\n    return new Promise((resolve, reject) => {\n      cb(resolve);\n    });\n  }\n\n  start() {\n    this._addEventListeners();\n    this._removeLoading();\n\n    this.loop.start();\n  }\n\n  stop() {\n    this.loop.stop();\n  }\n}\n\nexport default BaseEngine;\n","import BaseEngine from './baseEngine';\n\nconst DEFAULTS = {\n    debug: false,\n    width: 480,\n    height: 480,\n    pixelRatio: window.devicePixelRatio,\n    clickToggleDebug: true,\n    pixelate: 1\n};\n\nclass SketchEngine extends BaseEngine {\n  constructor(canvasEl, opts = {}) {\n    super(DEFAULTS, opts);\n\n    this.canvasEl = canvasEl;\n    this.canvasCtx = this.canvasEl.getContext('2d');\n    window.ctx = this.canvasCtx;\n\n    this.updateDimensions(this.options.width, this.options.height, this.options.pixelRatio, this.options.pixelate);\n  }\n\n  get wrapper() {\n    return this.canvasEl;\n  }\n\n  update(dt) {\n    this._renderer({\n      debug: this.options.debug,\n      frame: this.frame,\n      deltaTime: dt,\n      width: this.options.width,\n      height: this.options.height\n    });\n\n    this.frame++;\n  }\n}\n\nexport default SketchEngine;\n","import {colorToString} from './utils';\n\n// Anoying duplication from main file\nconst WIDTH = 480;\nconst HEIGHT = 480;\n\nexport const TOTAL_DAYS = 30;\nexport const FRAME_MOD = 3;\nexport const TOTAL_FRAMES = TOTAL_DAYS * FRAME_MOD;\nexport const OVERLAY_RADIUS = WIDTH * 0.1;\nexport const OVERLAY_WIDTH = WIDTH + (OVERLAY_RADIUS * 2);\nexport const OVERLAY_HEIGHT = HEIGHT * 0.5;\nexport const PALETTE = {\n  red: {\n    default: {\n      // r: 255,\n      // g: 102,\n      // b: 94\n      r: 255,\n      g: 116,\n      b: 119,\n      hex: 0xFF7477\n    }\n  },\n  blue: {\n    default: {\n      // r: 0,\n      // g: 120,\n      // b: 191\n      r: 98,\n      g: 168,\n      b: 229,\n      hex: 0x62A8E5\n    }\n  },\n  grey: {\n    default: {\n      r: 184,\n      g: 199,\n      b: 196,\n      hex: 0xB8C7C4\n    }\n  }\n};\n\n\n/**\n * Draws the overlay in its most default fashion\n *\n * @param {number} x\n * @param {number} y\n * @param {number} radius\n */\nexport const defaultDrawOverlay = (x, y, radius) => {\n  ctx.save();\n  ctx.fillStyle = 'white';\n  ctx.lineWidth = 4;\n  ctx.strokeStyle = colorToString(getColor('red'));\n  ctx.beginPath();\n  ctx.arc(x, y, radius - 4, 0, Math.PI * 2);\n  ctx.stroke();\n  // ctx.fill();\n  ctx.restore();\n};\n\n\n/**\n * Works out the position of the frame necessary\n *\n * @param {number} day Day of the month\n * @param {number} width Width of the animation area\n * @param {number} height Height of the animation area\n * @param {function?} drawOverlay Function that will draw the overlay on top\n */\nexport const createOverlay = (day, width, height, drawOverlay = defaultDrawOverlay) => {\n  const frame = (day - 1) * FRAME_MOD;\n  const perc = (frame % TOTAL_FRAMES) / TOTAL_FRAMES;\n  const x = (perc * OVERLAY_WIDTH) - OVERLAY_RADIUS;\n  const y = (Math.sin(perc * (Math.PI * 2)) * (OVERLAY_HEIGHT / 2)) + height / 2;\n\n  drawOverlay(x, y, OVERLAY_RADIUS);\n};\n\n\n/**\n * Returns a colour matching the key and level\n * from the palette\n *\n * @param {string} key\n * @param {string?} level\n */\nexport const getColor = (key, level = 'default') => {\n  return PALETTE[key][level];\n};\n\n\n/**\n * A method to draw the palette as squares\n *\n * @param {number?} x\n * @param {number?} y\n * @param {number?} size\n */\nexport const drawPalette = (x = 0, y = 0, size = 10) => {\n  ctx.save();\n  ctx.translate(x, y);\n  Object.keys(PALETTE).forEach((v, index) => {\n    ctx.save();\n    ctx.translate(index * size, 0);\n    ctx.fillStyle = colorToString(getColor(v));\n    ctx.fillRect(0, 0, size, size);\n    ctx.restore();\n  });\n  ctx.restore();\n}\n","class KeyTracker {\n  constructor() {\n    this._el = document;\n\n    this._addEventListeners();\n\n    this.keyUpCb = {};\n    this.keyDownCb = {};\n  }\n\n  setEl(el) {\n    this._removeEventListeners();\n    this._el = el;\n    this._addEventListeners();\n  }\n\n  _addEventListeners() {\n    this._onKeyUp = this._onKeyUp.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._el.addEventListener('keyup', this._onKeyUp);\n    this._el.addEventListener('keydown', this._onKeyDown);\n  }\n\n  _removeEventListeners() {\n    this._el.removeEventListener('keyup', this._onKeyUp);\n    this._el.removeEventListener('keydown', this._onKeyDown);\n  }\n\n  _onKeyUp(e) {\n    if (this.keyUpCb[e.key]) {\n      this.keyUpCb[e.key].forEach(cb => {\n        cb(e);\n      })\n    }\n  }\n\n  _onKeyDown(e) {\n    if (this.keyDownCb[e.key]) {\n      this.keyDownCb[e.key].forEach(cb => {\n        cb(e);\n      })\n    }\n  }\n\n  onKeyUp(keys, cb) {\n    let _keys = Array.isArray(keys) ? keys.slice() : [keys];\n\n    for (let i = 0; i < _keys.length; i++) {\n      if (!this.keyUpCb[_keys[i]]) {\n        this.keyUpCb[_keys[i]] = [];\n      }\n\n      this.keyUpCb[_keys[i]].push(cb);\n    }\n  }\n\n  onKeyDown(keys, cb) {\n    let _keys = Array.isArray(keys) ? keys.slice() : [keys];\n\n    for (let i = 0; i < _keys.length; i++) {\n      if (!this.keyDownCb[_keys[i]]) {\n        this.keyDownCb[_keys[i]] = [];\n      }\n\n      this.keyDownCb[_keys[i]].push(cb);\n    }\n  }\n}\n\nexport default new KeyTracker();\n","import { colorToString } from '../utils/utils';\nimport { getColor } from '../utils/codevember';\n\nclass Messager {\n  constructor() {\n    this._permanent = '';\n    this._ephemeral = [];\n    this._internalId = 0;\n\n    this.frame = 0;\n    this._total = 2;\n  }\n\n  setPermanent(label) {\n    this._permanent = label;\n  }\n\n  setEphemeral(label, time = 30) {\n    const msg = {\n      id: this._internalId,\n      start: this.frame,\n      end: this.frame + time,\n      label\n    };\n\n    this._internalId++;\n\n    this._ephemeral.unshift(msg);\n\n    this._ephemeral.splice(this._total, 50);\n  }\n\n  _trimEphemeral() {\n    const temp = this._ephemeral.slice();\n\n    this._ephemeral.forEach(({ id, end }, idx) => {\n      if (end <= this.frame) {\n        const _idx = temp.findIndex(m => m.id === id);\n        temp.splice(_idx, 1);\n      }\n    });\n\n    this._ephemeral = temp;\n  }\n\n  update() {\n    this._trimEphemeral();\n    this.frame++;\n  }\n\n  text(textArr, x, y, size) {\n    let arr = Array.isArray(textArr) ? textArr.slice() : [textArr];\n\n    arr.forEach((t, i) => {\n      ctx.fillText(t, x, y + (i * size));\n    })\n  }\n\n  draw(width, tileSize, player) {\n    const size = (tileSize / 2);\n\n    ctx.translate(0, size);\n\n    const column = (c, right) => (tileSize * c) + (right ? tileSize : 0);\n\n    ctx.font = `bold ${ tileSize / 3 }px monospace`;\n\n    ctx.fillStyle = colorToString(getColor('grey'));\n    this.text(this._permanent, column(0), 0, size);\n\n    ctx.fillStyle = colorToString(getColor('blue'));\n    this.text(`$${ player.money }`, column(4), 0, size);\n\n    ctx.fillStyle = colorToString(getColor('blue'));\n    this.text([\n      `${ player.wheat } wheat`,\n      `${ player.bread } bread`\n    ], column(5), 0, size);\n\n\n    ctx.fillStyle = colorToString(getColor('red'));\n    ctx.textAlign = 'right';\n    this.text(this._ephemeral.map(({ label }) => label), column(9, true), 0, size);\n  }\n}\n\nexport default new Messager();\n","import { loadImage } from '../utils/utils';\n\nconst imageFiles = require('./assets/*.png');\n\nclass Sprite {\n  constructor() {\n    this.images = [];\n  }\n\n  loadAll() {\n    return new Promise((resolve, reject) => {\n      const keys = Object.keys(imageFiles);\n      const images = [];\n\n      const runner = (index = 0) => {\n        if (index >= keys.length) {\n          resolve(images);\n          return;\n        }\n\n        loadImage(imageFiles[keys[index]])\n          .then(imgEl => {\n            images.push(imgEl);\n\n            runner(index + 1);\n          });\n      }\n\n      runner(0);\n    });\n  }\n\n  draw(key, size) {\n    const target = parseInt(key) < this.images.length ? parseInt(key) : 0;\n\n    ctx.drawImage(this.images[target], 0, 0, size, size);\n  }\n\n  load() {\n    return this.loadAll()\n      .then(images => {\n        this.images = images;\n      });\n  }\n}\n\nexport default new Sprite();\n","export default class Vector {\n  constructor({ x = 0, y = 0, magnitude = 1 } = {}) {\n    this.x = x;\n    this.y = y;\n    this.magnitude = magnitude;\n\n    return this;\n  }\n\n\n  /**\n   * Sets the x and y position at the same time\n   *\n   * @param {Number} x\n   * @param {Number} y\n   */\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n\n    return this;\n  }\n\n\n  /**\n   * Sets the magnitude of the vector.\n   * This is like how 'far' the vector moves\n   * each frame\n   *\n   * @param {Number} magnitude\n   */\n  setMag(magnitude) {\n    this.normalize();\n    this.magnitude = magnitude;\n\n    return this.mult(this.magnitude);\n  }\n\n\n  /**\n   * Sets the angle of the vector.\n   * This works out the x/y combo to\n   * move in a certain direction\n   *\n   * @param {Number} angle in radians\n   */\n  setAngle(angle) {\n    this.x = Math.cos(angle);\n    this.y = Math.sin(angle);\n\n    return this.mult(this.magnitude);\n  }\n\n\n  /**\n   * Gets the current angle of the vector\n   */\n  getAngle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n\n  /**\n   * Gets the angle of a vector like object\n   * from this vector. Used on velocity vectors\n   *\n   * @param {object} Vector\n   */\n  getAngleOf({ x, y, magnitude }) {\n    return Math.acos(this.dot({ x, y }) / (this.magnitude * magnitude));\n  }\n\n\n  /**\n   * Gets the angle of a vector like object\n   * from this vector\n   *\n   * @param {object} Vector\n   */\n  getAngleInSpaceOf({ x, y }) {\n    return Math.atan2(x - this.x, y - this.y);\n  }\n\n\n  /**\n   * Rotates the vector by an angle\n   *\n   * @param {Number} angle in radians\n   */\n  rotate(angle) {\n    const _angle = this.getAngle() + angle;\n    return this.setAngle(_angle % (Math.PI * 2));\n  }\n\n\n  /**\n   * Returns the vector to a unit of 1\n   */\n  normalize() {\n    return this.mult(1 / this.magnitude);\n  }\n\n\n  /**\n   * Multiplies the vector uniformly\n   * by a number\n   *\n   * @param {Number} num\n   */\n  mult(num) {\n    this.x *= num;\n    this.y *= num;\n\n    return this;\n  }\n\n\n  /**\n   * Divides the vector uniformly\n   * by a number\n   *\n   * @param {Number} num\n   */\n  div(num) {\n    this.x /= num;\n    this.y /= num;\n\n    return this;\n  }\n\n\n  /**\n   * Subtracts a vector like object\n   *\n   * @param {object} Vector\n   */\n  sub({ x, y }) {\n    this.x -= x;\n    this.y -= y;\n\n    return this;\n  }\n\n\n  /**\n   * Adds a vector like object\n   *\n   * @param {object} Vector\n   */\n  add({ x, y }) {\n    this.x += x;\n    this.y += y;\n\n    return this;\n  }\n\n\n  /**\n   * Returns dot product of 2 vectors\n   *\n   * @param {object} Vector\n   */\n  dot({ x, y }) {\n    return this.x * x + this.y * y;\n  }\n\n\n  /**\n   * Gets distance between 2 vectors\n   *\n   * @param {object} Vector\n   */\n  getDistance({ x, y }) {\n    let a = this.x - x;\n    let b = this.y - y;\n    return Math.sqrt(a * a + b * b);\n  }\n\n\n  /**\n   * Sets a random angle for the vector\n   */\n  randomAngle() {\n    return this.setAngle((Math.PI * 2) * Math.random());\n  }\n\n  /**\n   * Returns a new vector from current\n   * settings\n   */\n  clone() {\n    return new Vector({\n      x: this.x,\n      y: this.y,\n      magnitude: this.magnitude\n    });\n  }\n}\n","import Vector from '../utils/vector';\n\nimport { getColor } from '../utils/codevember';\nimport { colorToString } from '../utils/utils';\nimport Sprite from './Sprite';\n\nclass Tile {\n  constructor(x, y, size, sprite = 0) {\n    this._position = new Vector({x,y});\n\n    this._size = size;\n    this._sprite = sprite;\n  }\n\n  get label() {\n    return '';\n  }\n\n  get solid() {\n    return false;\n  }\n\n  get x() {\n    return this._position.x;\n  }\n\n  get y() {\n    return this._position.y;\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  update() {\n\n  }\n\n  draw() {\n    ctx.save();\n    ctx.translate(this.x * this.size, this.y * this.size);\n    this.drawSprite();\n    ctx.restore();\n  }\n\n  drawSprite() {\n    Sprite.draw(this._sprite, this.size);\n  }\n}\n\nexport default Tile;\n","import Tile from './Tile';\n\nimport { getColor } from '../utils/codevember';\nimport { colorToString } from '../utils/utils';\n\nclass Wall extends Tile {\n  get solid() {\n    return true;\n  }\n\n  drawSprite() {\n    ctx.fillStyle = colorToString(getColor('grey'));\n    ctx.fillRect(0, 0, this.size, this.size);\n  }\n}\n\nexport default Wall;\n","import Tile from './Tile';\n\nimport { getColor } from '../utils/codevember';\nimport { colorToString } from '../utils/utils';\nimport Messager from './Messager';\n\nclass Shop extends Tile {\n  get wheatValue() {\n    return 5;\n  }\n\n  get interactable() {\n    return true;\n  }\n\n  get label() {\n    return ['Sell wheat', `$${ this.wheatValue }`];\n  }\n\n  onInteract(player) {\n    if (player.wheat > 0) {\n      let total = player.wheat;\n\n      player.earn(total * this.wheatValue)\n      player.sellWheat(total);\n\n      Messager.setEphemeral(`Sold ${ total } wheat`, 60);\n      Messager.setEphemeral(`Earned $${ total * this.wheatValue }`, 60);\n    } else {\n      Messager.setEphemeral('No wheat to sell');\n    }\n  }\n}\n\nexport default Shop;\n","import Tile from './Tile';\n\nimport { getColor } from '../utils/codevember';\nimport { colorToString } from '../utils/utils';\nimport Messager from './Messager';\n\nclass Purchasable extends Tile {\n  constructor(x, y, size, sprite, replace) {\n    super(x, y, size, sprite);\n    this.replace = replace;\n  }\n\n  get interactable() {\n    return true;\n  }\n\n  get label() {\n    return [`Purchase`, `${ this.replace.purchaseLabel } ($${ this.replace.tileCost})`];\n  }\n\n  // drawSprite() {\n  //   const wid = Math.round(this.size / 10);\n  //   ctx.lineWidth = wid;\n  //   ctx.setLineDash([1, 2]);\n  //   ctx.strokeStyle = colorToString(getColor('grey'));\n  //   ctx.strokeRect(wid / 2, wid / 2, this.size - wid, this.size - wid);\n  // }\n\n  onInteract(player, tiles) {\n    if (player.hasMoney(this.replace.tileCost)) {\n      player.spend(this.replace.tileCost);\n      tiles[this.x][this.y] = this.replace;\n      Messager.setEphemeral(`${ this.replace.label[0] }`);\n      Messager.setEphemeral(`Purchased`);\n    } else {\n      Messager.setEphemeral(`($${ this.replace.tileCost })`, 60);\n      Messager.setEphemeral(`Can't afford`, 60);\n    }\n  }\n}\n\nexport default Purchasable;\n","import Tile from './Tile';\n\nimport { getColor } from '../utils/codevember';\nimport { colorToString, clamp } from '../utils/utils';\nimport Messager from './Messager';\n\nclass Gamble extends Tile {\n  constructor(x,y,size,sprite) {\n    super(x,y,size,sprite);\n\n    this.tempLuck = 0;\n  }\n  get gambleCost() {\n    return 5;\n  }\n\n  get interactable() {\n    return true;\n  }\n\n  get label() {\n    return ['The bookies', `Gamble $${ this.gambleCost }`];\n  }\n\n  update() {\n    this.tempLuck -= 0.01;\n    this.tempLuck = clamp(this.tempLuck, 1, 0);\n  }\n\n  onInteract(player) {\n    if (player.hasMoney(this.gambleCost)) {\n      player.spend(this.gambleCost);\n\n      if (Math.random() > player.luck + this.tempLuck) {\n        const earned = Math.ceil(Math.random() * (this.gambleCost * 5)) + this.gambleCost;\n        player.earn(earned);\n        Messager.setEphemeral(`$${ earned }`, 60);\n        Messager.setEphemeral(`You won!`, 60);\n        this.tempLuck += 0.4;\n      } else {\n        Messager.setEphemeral(`Lose`, 60);\n      }\n    } else {\n      Messager.setEphemeral(`Ya bum!`);\n      Messager.setEphemeral(`Can't afford`);\n    }\n  }\n}\n\nexport default Gamble;\n","import Tile from './Tile';\n\nimport { getColor } from '../utils/codevember';\nimport { colorToString, color } from '../utils/utils';\nimport Messager from './Messager';\nimport Sprite from './Sprite';\n\nconst PLANT_STATE = {\n  EMPTY: 0,\n  GROWING: 1,\n  READY: 2,\n};\n\nclass Ground extends Tile {\n  constructor(x, y, size, sprite) {\n    super(x, y, size, sprite);\n\n    this.frame = 0;\n\n    this.state = PLANT_STATE.EMPTY;\n\n    this.growTime = 60 * 8;\n  }\n\n  get interactable() {\n    return true;\n  }\n\n  get cost() {\n    return 3;\n  }\n\n  get tileCost() {\n    return 10;\n  }\n\n  get label() {\n    switch (this.state) {\n      case PLANT_STATE.EMPTY:\n        return ['Fertile soil', `($${ this.cost })`];\n      case PLANT_STATE.GROWING:\n        return `Growing crops ${ Math.round((this.frame / this.growTime) * 100) }%`;\n      case PLANT_STATE.READY:\n        return `Wheat`;\n    }\n  }\n\n  get purchaseLabel() {\n    return `Soil`;\n  }\n\n  update() {\n    if (this.isGrowing() && this.frame > this.growTime) {\n      this.setState(PLANT_STATE.READY);\n    }\n\n    if (this.isGrowing()) {\n      this.frame++;\n    }\n  }\n\n  drawSprite() {\n    switch (this.state) {\n      case PLANT_STATE.EMPTY:\n        Sprite.draw(7, this.size);\n        break;\n      case PLANT_STATE.GROWING:\n        Sprite.draw(8, this.size);\n        break;\n      case PLANT_STATE.READY:\n        Sprite.draw(9, this.size);\n        break;\n    }\n\n    if (this.isGrowing()) {\n      ctx.globalAlpha = 0.75;\n      let hei = Math.round(this.size / 10);\n      let size = this.size / 2;\n      let wid = (this.frame / this.growTime) * size;\n\n      ctx.beginPath();\n      ctx.fillStyle = colorToString(getColor('grey'));\n      ctx.fillRect((this.size - size) / 2, this.size - (hei * 2), size, hei);\n      ctx.fillStyle = 'green';\n      ctx.fillRect((this.size - size) / 2, this.size - (hei * 2), wid, hei);\n    }\n  }\n\n  isEmpty() {\n    return this.state === PLANT_STATE.EMPTY;\n  }\n\n  isGrowing() {\n    return this.state === PLANT_STATE.GROWING;\n  }\n\n  isReadyToHarvest() {\n    return this.state === PLANT_STATE.READY;\n  }\n\n  setState(state) {\n    this.state = state;\n  }\n\n  startGrowing() {\n    this.setState(PLANT_STATE.GROWING);\n    this.frame = 0;\n  }\n\n  resetGrowing() {\n    this.setState(PLANT_STATE.EMPTY);\n    this.frame = 0;\n  }\n\n  onInteract(player) {\n    if (this.isEmpty()) {\n      if (player.hasMoney(this.cost)) {\n        this.startGrowing();\n        player.spend(this.cost);\n        Messager.setEphemeral('Planted crops');\n      } else {\n        Messager.setEphemeral(`Can't afford ($${ this.cost })`);\n      }\n    } else if (this.isGrowing()) {\n      Messager.setEphemeral(`Can't harvest yet`);\n    } else if (this.isReadyToHarvest()) {\n      this.resetGrowing();\n      player.addWheat(1);\n      Messager.setEphemeral('Taken 1 wheat');\n    }\n  }\n}\n\nexport default Ground;\n","import Tile from './Tile';\n\nimport { getColor } from '../utils/codevember';\nimport { colorToString } from '../utils/utils';\nimport Messager from './Messager';\nimport Ground from './Ground';\n\nconst PERK_TYPES = {\n  GROW: 0,\n  LUCK: 1\n};\n\nconst PERK_COST = {\n  [PERK_TYPES.GROW]: 10,\n  [PERK_TYPES.LUCK]: 20,\n}\n\nconst PERK_NAME = {\n  [PERK_TYPES.GROW]: 'Insta-grow!',\n  [PERK_TYPES.LUCK]: 'Improve luck',\n}\n\nconst PERK_DESC = {\n  [PERK_TYPES.GROW]: ['Let there', 'be growth!'],\n  [PERK_TYPES.LUCK]: ['Luck improved!'],\n}\n\nclass Perk extends Tile {\n  constructor(x, y, size, sprite, perkType = 0) {\n    super(x, y, size, sprite);\n\n    this.perkType = perkType;\n  }\n\n  get perkCost() {\n    return PERK_COST[this.perkType];\n  }\n\n  get perkName() {\n    return PERK_NAME[this.perkType];\n  }\n\n  get interactable() {\n    return true;\n  }\n\n  get label() {\n    return [this.perkName, `$${ this.perkCost }`];\n  }\n\n  // drawSprite() {\n  //   ctx.fillStyle = 'purple';\n  //   ctx.fillRect(0, 0, this.size, this.size);\n  // }\n\n  onInteract(player, tiles) {\n    if (player.hasMoney(this.perkCost)) {\n\n      if (this.perkType === PERK_TYPES.GROW) {\n        tiles.forEach(row => {\n          row.forEach(t => {\n            if (t instanceof Ground) {\n              t.frame = t.growTime;\n            }\n          });\n        });\n      }\n\n      if (this.perkType === PERK_TYPES.LUCK) {\n        if (player.luck >= 0.5) {\n          player.luck -= 0.1;\n        } else {\n          Messager.setEphemeral('Too lucky!', 60);\n          return;\n        }\n      }\n\n      player.spend(this.perkCost);\n      PERK_DESC[this.perkType].map(m => Messager.setEphemeral(m, 60));\n\n    } else {\n      Messager.setEphemeral(`Can't afford`);\n      Messager.setEphemeral(`$${this.perkCost}`);\n    }\n  }\n}\n\nexport default Perk;\n","import Tile from './Tile';\n\nimport { getColor } from '../utils/codevember';\nimport { colorToString } from '../utils/utils';\nimport Messager from './Messager';\nimport Sprite from './Sprite';\n\nconst MAKER_STATE = {\n  EMPTY: 0,\n  BAKING: 1,\n  READY: 2,\n};\n\nclass BreadMaker extends Tile {\n  constructor(x, y, size, sprite) {\n    super(x, y, size, sprite);\n\n    this.frame = 0;\n\n    this.state = MAKER_STATE.EMPTY;\n\n    this.growTime = 60 * 10;\n  }\n\n  get interactable() {\n    return true;\n  }\n\n  get wheatCost() {\n    return 5;\n  }\n\n  get tileCost() {\n    return 50;\n  }\n\n  get label() {\n    switch (this.state) {\n      case MAKER_STATE.EMPTY:\n        return ['Bake bread', `(${ this.wheatCost } wheat)`];\n      case MAKER_STATE.BAKING:\n        return `Baking ${ Math.round((this.frame / this.growTime) * 100) }%`;\n      case MAKER_STATE.READY:\n        return `Bread`;\n    }\n    return\n  }\n\n  get purchaseLabel() {\n    return `Bread Maker`;\n  }\n\n  update() {\n    if (this.isBaking() && this.frame > this.growTime) {\n      this.setState(MAKER_STATE.READY);\n    }\n\n    if (this.isBaking()) {\n      this.frame++;\n    }\n  }\n\n  drawSprite() {\n    switch (this.state) {\n      case MAKER_STATE.EMPTY:\n        Sprite.draw(10, this.size);\n        break;\n      case MAKER_STATE.BAKING:\n        Sprite.draw(11, this.size);\n        break;\n      case MAKER_STATE.READY:\n        Sprite.draw(12, this.size);\n        break;\n    }\n\n    if (this.isBaking()) {\n      ctx.globalAlpha = 0.75;\n      let hei = Math.round(this.size / 10);\n      let size = this.size / 2;\n      let wid = (this.frame / this.growTime) * size;\n\n      ctx.beginPath();\n      ctx.fillStyle = colorToString(getColor('grey'));\n      ctx.fillRect((this.size - size) / 2, this.size - (hei * 2), size, hei);\n      ctx.fillStyle = 'green';\n      ctx.fillRect((this.size - size) / 2, this.size - (hei * 2), wid, hei);\n    }\n  }\n\n  isEmpty() {\n    return this.state === MAKER_STATE.EMPTY;\n  }\n\n  isBaking() {\n    return this.state === MAKER_STATE.BAKING;\n  }\n\n  isReadyToHarvest() {\n    return this.state === MAKER_STATE.READY;\n  }\n\n  setState(state) {\n    this.state = state;\n  }\n\n  startBaking() {\n    this.setState(MAKER_STATE.BAKING);\n    this.frame = 0;\n  }\n\n  resetBaking() {\n    this.setState(MAKER_STATE.EMPTY);\n    this.frame = 0;\n  }\n\n  onInteract(player) {\n    if (this.isEmpty()) {\n      if (player.hasWheat(this.wheatCost)) {\n        this.startBaking();\n        player.sellWheat(this.wheatCost);\n        Messager.setEphemeral('Started baking');\n      } else {\n        Messager.setEphemeral(`Not enough wheat`);\n      }\n    } else if (this.isBaking()) {\n      Messager.setEphemeral(`Not ready yet`);\n    } else if (this.isReadyToHarvest()) {\n      this.resetBaking();\n      player.addBread(1);\n      Messager.setEphemeral('Taken 1 bread');\n    }\n  }\n}\n\nexport default BreadMaker;\n","import Tile from './Tile';\n\nimport Vector from '../utils/vector';\nimport { getColor } from '../utils/codevember';\nimport { colorToString } from '../utils/utils';\nimport Messager from './Messager';\n\nclass Player extends Tile {\n  constructor(x, y, size, sprite) {\n    super(x, y, size, sprite);\n\n    this.speed = new Vector({ x: 0, y: 0 });\n\n    this.money = 15;\n    this.wheat = 0;\n    this.bread = 0;\n    this.luck = 0.9;\n  }\n\n  update(tiles) {\n    const position = this._position.clone().add(this.speed);\n\n    const resetX = () => position.x = this.x;\n    const resetY = () => position.y = this.y;\n\n    if (position.x < 0 || position.x >= tiles.length) {\n      resetX();\n    }\n    if (position.y < 0 || position.y >= tiles[0].length) {\n      resetY();\n    }\n\n    const nextTile = tiles[position.x][position.y];\n\n    if (nextTile.solid) {\n      resetX();\n      resetY();\n    }\n\n    Messager.setPermanent(nextTile.label);\n\n    this._position.set(position.x, position.y);\n\n    this.speed.x = 0;\n    this.speed.y = 0;\n  }\n\n  drawSprite() {\n    const col = colorToString(getColor('grey'));\n    const width = Math.round(this.size / 10);\n    ctx.lineWidth = width;\n    ctx.strokeStyle = col;\n    ctx.fillStyle = col;\n\n    ctx.beginPath();\n    ctx.arc(this.size / 2, this.size / 2, (this.size - width) / 2, 0, Math.PI * 2);\n    ctx.stroke();\n    // ctx.strokeRect(width / 2, width / 2, this.size - width, this.size - width);\n    ctx.globalAlpha = 0.5;\n    ctx.fill();\n    // ctx.fillRect(width / 2, width / 2, this.size - width, this.size - width);\n  }\n\n  up() {\n    this.speed.y = -1;\n  }\n\n  down() {\n    this.speed.y = 1;\n  }\n\n  left() {\n    this.speed.x = -1;\n  }\n\n  right() {\n    this.speed.x = 1;\n  }\n\n  interact(tiles) {\n    const tile = tiles[this.x][this.y];\n\n    if (tile.interactable) {\n      tile.onInteract(this, tiles);\n    }\n  }\n\n  hasMoney(money) {\n    return this.money >= money;\n  }\n\n  spend(money) {\n    this.money -= money;\n  }\n\n  earn(money) {\n    this.money += money;\n  }\n\n  hasWheat(wheat) {\n    return this.wheat >= wheat;\n  }\n\n  addWheat(wheat) {\n    this.wheat += wheat;\n  }\n\n  sellWheat(wheat) {\n    this.wheat -= wheat;\n  }\n\n  addBread(bread) {\n    this.bread += bread;\n  }\n}\n\nexport default Player;\n","import { format } from 'date-fns';\n\nimport Engine from './utils/engine';\n\nimport { colorToString } from './utils/utils';\nimport { getColor } from './utils/codevember';\n\nimport KeyTracker from './utils/keyTracker';\n\nimport Messager from './game/Messager';\nimport Sprite from './game/Sprite';\n\nimport Tile from './game/Tile';\nimport Wall from './game/Wall';\nimport Shop from './game/Shop';\nimport Purchasable from './game/Purchasable';\nimport Gamble from './game/Gamble';\nimport Perk from './game/Perk';\nimport Ground from './game/Ground';\nimport BreadMaker from './game/BreadMaker';\n\nimport Player from './game/Player';\n// import Engine from './utils/engine3d';\n\nconst WIDTH = 240;\nconst HEIGHT = 240;\nconst WIN = 10;\n\nconst el = document.getElementById('canvas');\n// const el = document.getElementById('container');\n\nconst app = new Engine(el, {\n  debug: false,\n  width: WIDTH,\n  height: HEIGHT,\n  pixelate: 2\n});\n\n\nconst splitUp = arr => arr.split('\\n').filter(v => v).map(r => r.split(' '));\nconst map = splitUp(`\n1 1 1 1 1 1 1 1 1 1\n1 3 0 6 7 0 0 5 5 1\n1 0 0 0 0 0 0 0 0 1\n1 8 0 0 0 2 2 4 4 1\n1 8 0 0 0 4 4 4 4 1\n1 8 0 0 0 4 4 4 4 1\n1 0 0 0 0 4 4 4 4 1\n1 0 0 0 0 4 4 4 4 1\n1 1 1 1 1 1 1 1 1 1\n`);\n\nconst spriteMap = splitUp(`\n0 0 0 0 0 0 0 0 0 0\n0 3 0 4 5 0 0 1 2 0\n0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 0 0 6 6 0\n0 6 0 0 0 6 6 6 6 0\n0 6 0 0 0 6 6 6 6 0\n0 0 0 0 0 6 6 6 6 0\n0 0 0 0 0 6 6 6 6 0\n0 0 0 0 0 0 0 0 0 0\n`);\n\nconst cols = map[0].length;\nconst rows = map.length;\nconst size = WIDTH / cols;\n\nconst tiles = [];\n\nfor (let x = 0; x < cols; x++) {\n  tiles.push([]);\n  for (let y = 0; y < rows; y++) {\n    const type = parseInt(map[y][x], 10);\n    const sprite = parseInt(spriteMap[y][x], 10);\n\n    switch(type) {\n      case 0:\n        tiles[x].push(new Tile(x, y, size, sprite))\n        break;\n      case 1:\n        tiles[x].push(new Wall(x, y, size, sprite));\n        break;\n      case 2:\n        tiles[x].push(new Ground(x, y, size, sprite));\n        break;\n      case 3:\n        tiles[x].push(new Shop(x, y, size, sprite));\n        break;\n      case 4:\n        tiles[x].push(new Purchasable(x, y, size, sprite, new Ground(x, y, size)));\n        break;\n      case 5:\n        tiles[x].push(new Gamble(x, y, size, sprite));\n        break;\n      case 6:\n        tiles[x].push(new Perk(x, y, size, sprite));\n        break;\n      case 7:\n        tiles[x].push(new Perk(x, y, size, sprite, 1));\n        break;\n      case 8:\n        tiles[x].push(new Purchasable(x, y, size, sprite, new BreadMaker(x, y, size)));\n        break;\n    }\n  }\n}\n\nconst player = new Player(Math.floor(cols / 2), Math.floor(rows / 2), size);\n\nKeyTracker.onKeyDown(['w', 'ArrowUp'], () => player.up());\nKeyTracker.onKeyDown(['s', 'ArrowDown'], () => player.down());\nKeyTracker.onKeyDown(['a', 'ArrowLeft'], () => player.left());\nKeyTracker.onKeyDown(['d', 'ArrowRight'], () => player.right());\n\nKeyTracker.onKeyUp(['x', 'Enter'], () => player.interact(tiles));\n\nlet playing = true;\nlet start = new Date().getTime();\n\napp.onRender(({ frame, width, height, debug }) => {\n  if (playing) {\n    ctx.clearRect(0, 0, width, height);\n\n    if (player.bread >= WIN) {\n      playing = false;\n    }\n\n    tiles.forEach(col => {\n      col.forEach(row => {\n        row.update();\n        row.draw();\n      })\n    })\n\n    player.update(tiles);\n    player.draw();\n\n    Messager.update();\n    ctx.save();\n    ctx.translate(0, height - (size));\n    Messager.draw(width, size, player);\n    ctx.restore();\n\n    if (!playing) {\n      Sprite.draw(13, width);\n\n      ctx.textAlign = 'center';\n      ctx.font = `bold 21px monospace`;\n      ctx.fillStyle = colorToString(getColor('blue'));\n      ctx.fillText(format(new Date().getTime() - start, 'mm:ss'), width / 2, height * 0.85);\n    }\n  }\n});\n\nSprite.load()\n  .then(() => {\n    app.start();\n  });\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}